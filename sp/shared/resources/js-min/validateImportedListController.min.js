function validateImportedListController($scope,$q,$element,$attrs,$http,ajaxService,$location,$state,$filter,ngDialog,sharedProperties,$timeout,$localStorage){$scope.memberList=[],$scope.masterMemberList=[],$scope.showfilter=!1,$scope.pageSize=200,$scope.intialPageSize=20,$scope.searchTag=[],$scope.hiringRoles=[],$scope.alldisplay=!1,$scope.filter={},$scope.tags=[],$scope.userEmail={email:[]},$scope.checkBox=[],$scope.submitDisabled=!1,$scope.allMembersEmailId=[],$scope.statusInclude=[],$scope.setEditMode=!1,$scope.userStatus=[],$scope.groupModule=[],$scope.masterGroupModule=[],$scope.textSearching="",$scope.mainGroupInfoList=[],$scope.checkedAll=!1,$scope.deleteUser=!1,$scope.deleteUserError=!1,$scope.updateGroup=!1,$scope.updateGroupError=!1,$scope.updateError="",$scope.EditGroupEmail="",$scope.archiveDialog={},$scope.archiveDialog.addHiring=!1,$scope.showArchive=!1,$scope.newDate={},$scope.totalRecords=0,$scope.totalConflicts=0,$scope.conflictException=!1,$scope.noEmailsError=!1,$scope.exceededAvailability=!1,$scope.cancelRedirect=function(){window.location="/sp/tools/hiring/"},$scope.newDate.currentDay=new Date,$scope.newDate={year:$scope.newDate.currentDay.getFullYear(),month:$scope.newDate.currentDay.getMonth()+1,day:$scope.newDate.currentDay.getDate()},$scope.formatDate=function(d){if(null!==d&&"undefined"!==d){var splitDate=d.split("-"),monthData={"01":"Jan","02":"Feb","03":"Mar","04":"Apr","05":"May","06":"Jun","07":"Jul","08":"Aug","09":"Sep",10:"Oct",11:"Nov",12:"Dec"},month=splitDate[1],formattedDate=monthData[month.toString()]+" "+parseInt(splitDate[2])+", "+parseInt(splitDate[0]);return formattedDate}},$scope.today=$scope.formatDate($scope.newDate.year+"-"+($scope.newDate.month<9?"0"+$scope.newDate.month:$scope.newDate.month)+"-"+$scope.newDate.day),$scope.formatName=function(n){if(null!==n||"undefined"!==n){var slpitName=n.split(", "),formatName=slpitName[1]+" "+slpitName[0];return formatName}},$scope.getMembersData=function(){var options={url:"/sp/hiring/multiInviteValidate",data:$.param({filesToProcess:$localStorage.get("files")}).replace(/%2C/g,",").replace(/%40/g,"@")};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success&&($scope.masterMemberList=response.hiring.length?response.hiring:[],$scope.returnMemberList($scope.pageSize),angular.forEach(response.hiring,function(val,index){$scope.allMembersEmailId.push(val.email)}),$scope.totalRecords=response.hiring.length,$.each($scope.masterMemberList,function(i){"ALREADY_EXISTS"!==$scope.masterMemberList[i].userStatus&&"ALREADY_EXISTS_ARCHIVED"!==$scope.masterMemberList[i].userStatus||$scope.totalConflicts++}),$scope.totalRecords>$scope.availableSubscriptions&&($scope.candidateCountException=!0,$scope.removeCandidates=Math.abs($scope.totalRecords-$scope.availableSubscriptions)),$scope.totalConflicts>0||$scope.totalRecords>$scope.availableSubscriptions?$scope.submitDisabled=!0:$scope.submitDisabled=!1)})},$scope.getCandidateAvailability=function(){ajaxService.getAjaxResponse({url:"/sp/hiring/getAvailableSubscriptions"}).then(function(response){"true"===response.Success&&($scope.availableSubscriptions=response.availableHiringSubscripitons,setTimeout(function(){$scope.getMembersData()},200))})},$scope.enableAdvanceSection=function(event){$(event.currentTarget).closest(".complete-profile").find(".editable-section").show()},$scope.autoCompleteType=function(arr){for(var customarray=[],i=0;i<arr.length;i++)customarray.push({text:arr[i]});return customarray},$scope.order=function(predicate,reverse){$scope.memberList=$filter("orderBy")($scope.memberList,predicate,reverse)},$scope.loadTags=function(query){var deferred=$q.defer();return deferred.resolve($scope.getLoadSuggestion(query)),deferred.promise},$scope.getLoadSuggestion=function(query){for(var copyArray=[],i=0;i<$scope.tagListArray.length;i++)angular.lowercase($scope.tagListArray[i].text).indexOf(angular.lowercase(query))>-1&&copyArray.push($scope.tagListArray[i]);return copyArray.slice(0,5)},$scope.tagAdded=function(tag){$scope.searchTag.push(tag.text),$scope.refineSearch($scope.searchTag)},$scope.tagRemoved=function(tag){$scope.searchTag.splice($scope.searchTag.indexOf(tag.text),1),$scope.refineSearch($scope.searchTag)},$scope.refineSearch=function(list){$scope.newArr=[],angular.forEach($scope.masterMemberList,function(val,key){if(null!=val.tagList)for(var i=0;i<list.length;i++){var exists=val.tagList.indexOf(list[i]);exists>=0&&$scope.newArr.push(val)}}),$scope.checkboxFilter()},$scope.includeCheck=function(status){var i=$.inArray(status,$scope.statusInclude);i>-1?$scope.statusInclude.splice(i,1):$scope.statusInclude.push(status),$scope.checkboxFilter()},$scope.checkboxFilter=function(status){$scope.statusInclude.length>0&&($scope.checkBox=[],angular.forEach($scope.masterMemberList,function(val,index){for(var i=0;i<$scope.statusInclude.length;i++)for(var j=0;j<val.roles[i].length;j++)val.roles[j]===$scope.statusInclude[i]&&$scope.checkBox.push(val)})),$scope.returnMemberList($scope.pageSize)},$scope.searchTextFilter=function(search){$scope.textSearching=search,$scope.returnMemberList($scope.pageSize)},$scope.enableCancel=function(search){return"undefined"!=typeof search&&search.length>1},$scope.clearSearch=function(){$scope.textSearching.length&&($scope.textSearching="",$scope.searchText="",$scope.returnMemberList($scope.pageSize))},$scope.active=function(event){var currentElem=$(event.currentTarget);currentElem.find("h4").hasClass("on")?currentElem.find("h4").hasClass("reverseon")?currentElem.find("h4").removeClass("reverseon"):currentElem.find("h4").addClass("reverseon"):(currentElem.parent().find(".tog h4").removeClass("on"),currentElem.find("h4").addClass("on"))},$scope.returnMemberList=function(pageSize){if($scope.searchTag.length&&!$scope.statusInclude.length&&($scope.memberList=angular.copy($scope.newArr)),$scope.searchTag.length&&$scope.statusInclude.length){$scope.combineArray=[];for(var i=0;i<$scope.newArr.length;i++)for(var j=0;j<$scope.checkBox.length;j++)$scope.newArr[i].email===$scope.checkBox[j].email&&$scope.combineArray.push($scope.newArr[i]);$scope.memberList=angular.copy($scope.combineArray)}if(!$scope.searchTag.length&&$scope.statusInclude.length&&($scope.memberList=angular.copy($scope.checkBox)),$scope.searchTag.length||$scope.statusInclude.length||($scope.memberList=angular.copy($scope.masterMemberList)),$scope.textSearching.length>2){for(var copyArray=[],z=0;z<$scope.memberList.length;z++)angular.lowercase($scope.memberList[z].name).indexOf(angular.lowercase($scope.textSearching))>-1&&copyArray.push($scope.memberList[z]);$scope.memberList=angular.copy(copyArray)}pageSize>=$scope.memberList.length?$scope.alldisplay=!0:$scope.alldisplay=!1,$scope.pageSize=pageSize,$scope.memberList=$scope.memberList.slice(0,pageSize)},$scope.checkAll=function(){$scope.checkedAll=!$scope.checkedAll,$scope.negative?$scope.userEmail.email=$scope.masterMemberList.map(function(item){return{email:item.email,name:item.name}}):$scope.userEmail.email=[]},$scope.deleteContact=function(email){var index,counter=0;$.each($scope.masterMemberList,function(i){$scope.masterMemberList[i].email===email&&(index=i,"ALREADY_EXISTS"!==$scope.masterMemberList[i].userStatus&&"ALREADY_EXISTS_ARCHIVED"!==$scope.masterMemberList[i].userStatus||$scope.totalConflicts--),counter++}),counter===$scope.masterMemberList.length&&($scope.masterMemberList.splice(index,1),$scope.memberList=angular.copy($scope.masterMemberList),$scope.totalRecords=$scope.memberList.length,0===$scope.totalConflicts&&$scope.totalRecords<=$scope.availableSubscriptions&&($scope.candidateCountException=!1,$scope.submitDisabled=!1))},$scope.resetfilter=function(allmembers){$scope.pageSize=$scope.intialPageSize,$scope.newArr=[],$scope.searchTag=[],$scope.tags=[],$scope.filter={},$scope.userEmail.email=[],$scope.statusInclude=[],$scope.adminc=!1,$scope.leadC=!1,$scope.textSearching="",$scope.searchText="","undefined"!=typeof $scope.selectedSearch&&($scope.selectedSearch.userStatus=""),$scope.memberList=angular.copy($scope.masterMemberList),"undefined"!=typeof allmembers&&($scope.pageSize=$scope.masterMemberList.length),$scope.returnMemberList($scope.pageSize),$scope.order("name",$scope.reverse);var currentElem=$(".memberHolder").find(".heading .m-name");currentElem.find("h4").hasClass("on")?currentElem.find("h4").hasClass("reverseon")?currentElem.find("h4").removeClass("reverseon"):currentElem.find("h4").addClass("reverseon"):(currentElem.parent().find(".tog h4").removeClass("on"),currentElem.find("h4").addClass("on"))},$scope.deleteButton=function(){},$scope.confirmDelete=function(event){var email=$(event.target).closest(".complete-profile").find(".email").html(),eve=angular.element(event.currentTarget),options={url:"/sp/hiring/deleteCandidate",data:$.param({candidateEmail:email})};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?(angular.forEach($scope.masterMemberList,function(val,index){val.email===email&&$scope.masterMemberList.splice(index,1)}),angular.forEach($scope.memberList,function(val,index){val.email===email&&$scope.memberList.splice(index,1)}),angular.forEach($scope.checkBox,function(val,index){val.email===email&&$scope.checkBox.splice(index,1)}),$scope.searchTag.length&&angular.forEach($scope.newArr,function(val,index){val.email===email&&$scope.newArr.splice(index,1)}),$scope.returnMemberList($scope.pageSize),eve.scope().moreadvance=!eve.scope().moreadvance,$scope.deleteUser=!0,$timeout(function(){$scope.deleteUser=!1},5e3)):($scope.errorMessaage=response.error.InvalidRequestException,$scope.deleteUserError=!0,$timeout(function(){$scope.deleteUserError=!1},5e3))})},$scope.deleteUsers=function(emails){var emailList=[];jQuery.each(emails,function(i,j){emailList.push(emails[i].email)});var options={url:"/sp/hiring/deleteCandidate",data:$.param({candidateEmail:emailList.toString()})};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success&&$scope.getMembersData()})},$scope.addClassActive=function(){$scope.dropUp=!$scope.dropUp},$scope.notificationEmail=function(emails){emails.length&&(sharedProperties.setEmail(emails),sharedProperties.setObject($scope.memberList),ngDialog.open({template:"return-visitor.html"}))},$scope.profileRoute=function(event){var groupname=$(event.currentTarget).data("routeparam");$localStorage.set("groupname",groupname),window.location.href="/sp/admin/group/#profile"},$scope.showFullList=function(){$scope.resetfilter("full")},$scope.editGroupSection=function(index){$scope.EditGroupEmail=this.memberList.email;var currentEmail=this.memberList.email;index="";for(var i=0;i<$scope.memberList.length;i++)currentEmail===$scope.memberList[i].email&&(index=i);$scope.setEditMode=!0,$scope.indexToChange=index,$scope.groupEditSection=angular.copy($scope.memberList[index]),$scope.groupSelectOption=[];for(var j=0;j<$scope.groupEditSection.groupAssociationList.length;j++)$scope.groupSelectOption.push($scope.groupEditSection.groupAssociationList[j].name);ngDialog.open({template:"/sp/admin/member/editGroup",scope:$scope})},$scope.enableLeadDialog=function(leadValue,index,groupName){for(var i=0;i<$scope.mainGroupInfoList.length;i++)if(groupName===$scope.mainGroupInfoList[i].name){if(null!==$scope.mainGroupInfoList[i].groupLead&&$scope.mainGroupInfoList[i].groupLead.email!==$scope.EditGroupEmail)return!1;$scope.groupEditSection.groupAssociationList[index].groupLead=!leadValue}},$scope.setStyle=function(lead){return $scope.viewMode(),lead===!0},$scope.isItEnabled=function(groupName,id){$scope.classActivate=[];for(var i=0;i<$scope.mainGroupInfoList.length;i++)groupName===$scope.mainGroupInfoList[i].name&&null!==$scope.mainGroupInfoList[i].groupLead&&$scope.mainGroupInfoList[i].groupLead.email!==$scope.EditGroupEmail&&($scope.classActivate.push("#mode_"+id),$scope.classActivate.push("#modeprop_"+id))},$scope.viewMode=function(){if($scope.classActivate.length)for(var i=0;i<$scope.classActivate.length;i++)$($scope.classActivate[i]).addClass("disabled")},$scope.addGroupToModule=function(groupName,lead){return $scope.selectedGroup=groupName,"default"===groupName?!1:(""===$scope.groupEditSection.groupAssociationList[0].name&&$scope.groupEditSection.groupAssociationList.splice(0,1),$scope.groupEditSection.groupAssociationList.push({name:groupName,groupLead:!1}),void $scope.groupSelectOption.push(groupName))},$scope.addGroupMember=function(names){return""!==names},$scope.removeGroupDialog=function(event,groupName){for(var _this=event.target,current=($(_this).closest(".blockGroup").remove(),""),i=0;i<$scope.groupEditSection.groupAssociationList.length;i++)$scope.groupEditSection.groupAssociationList[i].name===groupName.name&&($scope.groupEditSection.groupAssociationList.splice(i,1),current=i);$scope.groupSelectOption.splice(current,1)},$scope.saveGroupToModule=function(groupName){for(var newArr="",i=0;i<$scope.groupEditSection.groupAssociationList.length;i++)newArr=newArr.length?newArr+","+$scope.groupEditSection.groupAssociationList[i].name+":"+$scope.groupEditSection.groupAssociationList[i].groupLead:$scope.groupEditSection.groupAssociationList[i].name+":"+$scope.groupEditSection.groupAssociationList[i].groupLead;var options={url:"/sp/admin/group/memberGroupUpdate",data:$.param({groupAssociationList:newArr,memberEmail:$scope.groupEditSection.email})};ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){$scope.groupEditSection.groupAssociationList.length?$scope.memberList[$scope.indexToChange]=$scope.groupEditSection:($scope.groupEditSection.groupAssociationList.push({name:"",groupLead:!1}),$scope.memberList[$scope.indexToChange]=$scope.groupEditSection);for(var i=0;i<$scope.masterMemberList.length;i++)$scope.masterMemberList[i].email===$scope.memberList[$scope.indexToChange].email&&($scope.masterMemberList[i]=$scope.groupEditSection);ngDialog.close("ngdialog1"),ngDialog.open({template:"/sp/admin/member/confirmation"})}else ngDialog.close("ngdialog1"),ngDialog.open({template:"/sp/admin/member/errorGroup"})})},$scope.memberTakeAway=function(email,id){$localStorage.set("candidateEmail",email).set("candidateID",id),window.location.href="/sp/tools/hiring/profile"},$scope.updatedEmaiList=function(emailList){var allEmailList=emailList,updatedEmails={membersToInvite:[],membersToAdd:[]},count=0;return $.each(allEmailList,function(i){$.each($scope.memberList,function(j){$scope.memberList[j].email===allEmailList[i]&&null===$scope.memberList[j].spUserId?updatedEmails.membersToInvite.push(allEmailList[i]):$scope.memberList[j].email===allEmailList[i]&&null!==$scope.memberList[j].spUserId&&null===$scope.memberList[j].existingCandidate&&updatedEmails.membersToAdd.push(allEmailList[i])}),count++}),count===allEmailList.length?(parseInt(updatedEmails.membersToInvite.length+updatedEmails.membersToAdd.length)>$scope.availableSubscriptions?($scope.submitDisabled=!0,$scope.candidateCountException=!0):($scope.submitDisabled=!1,$scope.candidateCountException=!1),updatedEmails):void 0},$scope.processImportList=function(f){$scope.noSelectionError=!1,$scope.importCandidateForm.submitted=!1,$scope.exceededAvailability=!1,$scope.noEmailsError=!1;var emailist,_params={};if($scope.importCandidateForm.$valid)if("all"===f.options)emailist=$scope.updatedEmaiList($scope.allMembersEmailId),_params={membersToInvite:emailist.membersToInvite.toString(),membersToAdd:emailist.membersToAdd.toString(),day:"undefined"!=typeof f.dueDate?f.dueDate.getDate():0,month:"undefined"!=typeof f.dueDate?f.dueDate.getMonth()+1:0,year:"undefined"!=typeof f.dueDate?f.dueDate.getFullYear():0},emailist.membersToInvite.length>0||emailist.membersToAdd.length>0?($scope.noEmailsError=!1,$scope.submitDisabled=!1,$scope.addInviteMultipleCandidates(_params)):($scope.noEmailsError=!0,$scope.importCandidateForm.submitted=!0);else{var emails=[],counter=0;$.each($scope.userEmail.email,function(i){emails.push($scope.userEmail.email[i].email),counter++}),counter===$scope.userEmail.email.length&&$scope.userEmail.email.length<=$scope.availableSubscriptions?(emailist=$scope.updatedEmaiList(emails),_params={membersToInvite:emailist.membersToInvite.toString(),membersToAdd:emailist.membersToAdd.toString(),day:"undefined"!=typeof f.dueDate?f.dueDate.getDate():0,month:"undefined"!=typeof f.dueDate?f.dueDate.getMonth()+1:0,year:"undefined"!=typeof f.dueDate?f.dueDate.getFullYear():0},emailist.membersToInvite.length>0||emailist.membersToAdd.length>0?($scope.noEmailsError=!1,$scope.addInviteMultipleCandidates(_params)):($scope.noEmailsError=!0,$scope.importCandidateForm.submitted=!0)):($scope.importCandidateForm.submitted=!0,$scope.exceededAvailability=!0)}else $scope.importCandidateForm.submitted=!0},$scope.addInviteMultipleCandidates=function(o){var options={url:"/sp/hiring/multiInvite",data:$.param(o)};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success&&0===response.error.length&&($localStorage.set("gNotify","import"),setTimeout(function(){window.location="/sp/tools/hiring/"},100))})},$scope.candidateCompare=function(email,id){$localStorage.set("candidateEmail",email).set("candidateID",id),window.location.href="/sp/tools/hiring/compare"},$scope.candidateAdvisor=function(email,id){$localStorage.set("candidateEmail",email).set("candidateID",id),window.location.href="/sp/tools/hiring/advisor"},$scope.calltoAction=function(select){return""===select?!1:void(window.location.href=select)},$scope.archiveDialog=function(e,n,r){$scope.archiveCandidate={name:n,email:e,roles:r},ngDialog.open({template:"/sp/resources/html/tools/hiring/archive-candidate.html",scope:$scope})},$scope.archiveAllCandidate=function(cEmail,isHired,single){var emailList=[];single!==!0?jQuery.each(cEmail,function(i,j){emailList.push(cEmail[i].email)}):emailList=cEmail;var options={url:"/sp/hiring/archiveCandidate",data:$.param({candidateEmail:emailList.toString(),isHired:isHired})};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success&&(ngDialog.close("ngdialog1"),$.growl({icon:"glyphicon glyphicon-ok",title:"<strong> Candidate</strong>",message:" archived successfully"}),$scope.getMembersData(),$scope.negative=!$scope.negative)})},$scope.archiveAllDialog=function(emails){emails.length>0&&($scope.archiveCandidateAll={emails:emails},ngDialog.open({template:"/sp/resources/html/tools/hiring/archive-candidate-list.html",scope:$scope}))},$scope.sendViewProfileRequest=function(e,n){$scope.profileRequest={email:e,name:n,heading:"Request Access"},ngDialog.open({template:"/sp/resources/html/tools/hiring/send-profile-invite.html",scope:$scope}),$scope.sendRequest=function(e){var options={url:"/sp/notifications/sendNotification",data:$.param({memberEmail:e,type:""}).replace(/%40/g,"@")};ajaxService.getAjaxResponse(options).then(function(response){"true"!==response.Success&&$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong> ",message:"Not able to send invite"})})}},$scope.getArchiveCandidateList=function(){var options={url:"/sp/hiring/getAllArchivedCandidates"};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success&&(response["hiring-archived"].length>0?$scope.showArchive=!0:$scope.showArchive=!1)})},$scope.sendReminder=function(e,n){$scope.profileRequest={email:e,name:n,heading:"Reminder"},ngDialog.open({template:"/sp/resources/html/tools/hiring/send-profile-invite.html",scope:$scope}),$scope.sendRequest=function(e){var options={url:"/sp/notifications/sendNotification",data:$.param({memberEmail:e,type:""}).replace(/%40/g,"@")};ajaxService.getAjaxResponse(options).then(function(response){"true"!==response.Success&&$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong> ",message:"Not able to send invite"})})}}}function notification($scope,sharedProperties){$scope.name=[];var memberList=sharedProperties.getObject(),emails=sharedProperties.getEmail();$scope.emailId=emails,angular.forEach(memberList,function(val,index){for(var i=0;i<emails.length;i++)emails[i]===val.email&&$scope.name.push(val.name)})}angular.module("spApp").controller("validateImportedListController",validateImportedListController),angular.module("spApp").controller("notification",notification),validateImportedListController.$inject=["$scope","$q","$element","$attrs","$http","ajaxService","$location","$state","$filter","ngDialog","sharedProperties","$timeout","$localStorage"],notification.$inject=["$scope","sharedProperties"];