function emailManagerController($scope,ajaxService,$localStorage,ngDialog,sharedProperties,filterFilter,$filter,$rootScope,$timeout){function switchView(){"normal"===self.viewMode?(self.emailForm.submitted=!1,self.emailForm.$valid?self.viewMode="preview":self.emailForm.submitted=!0):self.viewMode="normal"}function getAllCompaniesWithEmailSettings(){ajaxService.getAjaxResponse({url:self.serviceApis.getAllCompaniesWithEmailSettings,method:"POST"}).then(function(response){"true"===response.Success?(self.responseAvailable=!0,self.masterList=response.emailManagement,self.companiesWithEmailCustomization=angular.copy(self.masterList)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getAllCompaniesWithoutEmailSettings(){ajaxService.getAjaxResponse({url:self.serviceApis.getAllNonCustomizedCompanies,method:"POST"}).then(function(response){"true"===response.Success?(self.companyList=response.companies,openSelectCompanyModal(),self.responseAvailableForModal=!0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getAllEmailTemplates(){ajaxService.getAjaxResponse({url:self.serviceApis.getAllEmailTemplates,method:"POST"}).then(function(response){"true"===response.Success?(self.emailList=response.notificationList,openSelectEmailModal(),self.responseAvailableForModal=!0,null===self.emailData.notificationTypeMap&&(self.emailData.notificationTypeMap={}),self.emailList=self.emailList.filter(function(obj){return void 0===self.emailData.notificationTypeMap[obj.type]})):null!==response.error&&sharedProperties.ajaxError(response.error)})}function openSelectCompanyModal(){ngDialog.open({template:self.serviceApis.openCompanyModal,scope:$scope}).closePromise.then(function(data){self.companySearchText=""})}function openSelectEmailModal(){null===self.emailData.notificationTypeMap&&(self.emailData.notificationTypeMap={}),self.emailList=self.emailList.filter(function(obj){return void 0===self.emailData.notificationTypeMap[obj.type]}),ngDialog.open({template:self.serviceApis.openEmailsModal,scope:$scope}).closePromise.then(function(data){self.emailSearchText=""})}function selectCompany(){self.companyList.length?openSelectCompanyModal():getAllCompaniesWithoutEmailSettings()}function selectEmailTemplate(){self.emailList.length?openSelectEmailModal():getAllEmailTemplates()}function displayEmailInfo(obj){obj.type!==self.selectedEmailKey&&(self.emailForm.submitted=!1,self.selectedEmailContent={},self.selectedEmailKey=obj.type,self.selectedEmailDisplayName=obj.name,self.selectedEmailContent=angular.copy(self.emailData.content[obj.type]))}function addToEmailDataMap(obj){null===self.emailData.content&&(self.emailData.content={}),self.selectedEmailKeyNamesList.push(obj),self.selectedEmailKey=obj.type,self.selectedEmailContent={},self.selectedEmailDisplayName=obj.name,self.emailData.notificationTypeMap[obj.type]=obj.name,ngDialog.close()}function getEmailData(type){var param=getParameter("id");null===param&&(param="default"),self.selectedCompanyId=param,ajaxService.getAjaxResponse({url:self.serviceApis.getDetails,data:$.param({companyId:"SuperAdmin"===type?self.selectedCompanyId:""}),method:"POST"}).then(function(response){if("true"===response.Success){if(self.responseAvailableGet=!0,self.emailData=response.emailManagement,null!==response.emailManagement.content){for(var keyname in self.emailData.notificationTypeMap)self.selectedEmailObj={},self.selectedEmailObj.type=keyname,self.selectedEmailObj.name=self.emailData.notificationTypeMap[keyname],self.selectedEmailKeyNamesList.push(self.selectedEmailObj);self.selectedEmailKeyNamesList.length>0&&(self.selectedEmailKeyNamesList=$filter("orderBy")(self.selectedEmailKeyNamesList,"name")),self.selectedEmailKey=self.selectedEmailKeyNamesList[0].type,self.selectedEmailDisplayName=self.selectedEmailKeyNamesList[0].name,self.selectedEmailContent=angular.copy(self.emailData.content[self.selectedEmailKeyNamesList[0].type])}self.selectedCompanyAdminAccess=self.emailData.companyAllowed,null!==self.emailData.company&&(self.selectedCompanyName=self.emailData.company.name)}else null!==response.error&&(self.responseAvailableGet=!0,sharedProperties.ajaxError(response.error))})}function updateEmailCustomization(type){self.emailFormData={},self.emailFormData.companyId="AccountAdmin"===type?"":self.selectedCompanyId,self.emailFormData.type=self.selectedEmailKey,self.emailFormData.content=self.selectedEmailContent,ajaxService.getAjaxResponse({url:self.serviceApis.createOrUpdate,data:self.emailFormData,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(sharedProperties.growlMessage("Email Template Updated"),self.emailData.content[self.selectedEmailKey]=angular.copy(self.emailFormData.content),$timeout(function(){self.viewMode="normal"},500)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function deleteEmailsModal(options){self.emailDeleteOptions=options,ngDialog.open({template:"/sp/resources/html/sysAdmin/emails/delete-emails-modal.html",scope:$scope})}function deleteEmailCustomization(){self.emailFormData={},self.emailFormData.companyId=self.emailDeleteOptions.id,self.emailFormData.deleteAll=self.emailDeleteOptions.deleteAll,self.emailFormData.type=self.emailDeleteOptions.emailTemplate,ajaxService.getAjaxResponse({url:self.serviceApis.delete,data:self.emailFormData,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?location.reload():null!==response.error&&sharedProperties.ajaxError(response.error)})}function updateAdminAccess(status){self.emailFormData={},self.emailFormData.companyId=self.selectedCompanyId,self.emailFormData.companyAllowed=status,ajaxService.getAjaxResponse({url:self.serviceApis.updateAdminAccess,data:self.emailFormData,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?sharedProperties.growlMessage("Status Updated Successfully"):null!==response.error&&sharedProperties.ajaxError(response.error)})}function resetResults(){self.searchText="",self.companiesWithEmailCustomization=[],self.companiesWithEmailCustomization=angular.copy(self.masterList),sortResults()}function active(event,setting){self.lastPredicate=setting.predicate,self.lastReverse=setting.reverse,sharedProperties.toggleFilterClick(event,self.lastPredicate),self.sortResults(self.lastPredicate,self.lastReverse)}function sortResults(predicate,reverse){self.lastPredicate=predicate,self.lastReverse=reverse;var resp=$filter("orderBy")(self.masterList,predicate,reverse);self.companiesWithEmailCustomization=[],self.companiesWithEmailCustomization=resp}var self=this;self.serviceApis={getAllCompaniesWithEmailSettings:"/sp/sysAdmin/emailManagement/getAll",createOrUpdate:"/sp/emailManagement/createUpdate",getDetails:"/sp/emailManagement/get",delete:"/sp/emailManagement/delete",getCompanies:"/sp/sysAdmin/blueprint/getCompanies",openCompanyModal:"/sp/sysAdmin/emailManagement/selectCompany",getAllNonCustomizedCompanies:"/sp/sysAdmin/emailManagement/getCompanies",getAllEmailTemplates:"/sp/emailManagement/getNotifications",openEmailsModal:"/sp/emailManagement/selectEmails",updateAdminAccess:"/sp/sysAdmin/emailManagement/companyPermission"},self.responseAvailable=!1,self.responseAvailableForModal=!1,self.responseAvailableGet=!1,self.companySearchText="",self.emailSearchText="",self.searchText="",self.masterList=[],self.companyList=[],self.companiesWithEmailCustomization=[],self.emailList=[],self.selectedEmailKeyNamesList=[],self.selectedEmailObj={},self.selectedEmailContent={},self.selectedEmailKey="",self.selectedEmailDisplayName="",self.emailData={},self.selectedCompanyId="default",self.selectedCompanyName="default",self.selectedCompanyAdminAccess=!1,self.lastPredicate="name",self.lastReverse=!1,self.companyInfo={},self.companyDisplayName="",self.viewMode="normal",self.emailDeleteOptions={},self.selectCompany=selectCompany,self.selectEmailTemplate=selectEmailTemplate,self.getAllCompaniesWithEmailSettings=getAllCompaniesWithEmailSettings,self.getEmailData=getEmailData,self.active=active,self.sortResults=sortResults,self.resetResults=resetResults,self.deleteEmailsModal=deleteEmailsModal,self.deleteEmailCustomization=deleteEmailCustomization,self.updateEmailCustomization=updateEmailCustomization,self.getAllEmailTemplates=getAllEmailTemplates,self.displayEmailInfo=displayEmailInfo,self.addToEmailDataMap=addToEmailDataMap,self.switchView=switchView,self.updateAdminAccess=updateAdminAccess;var getParameter=function(val){for(var query=window.location.search.substring(1),vars=query.split("&"),pair=[],i=0;i<vars.length;i++)return pair=vars[i].split("="),pair[0]===val?pair[1]:null}}angular.module("spApp").controller("emailManagerController",emailManagerController),emailManagerController.$inject=["$scope","ajaxService","$localStorage","ngDialog","sharedProperties","filterFilter","$filter","$rootScope","$timeout"];