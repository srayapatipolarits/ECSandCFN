function dashBoardController($scope,ajaxService,sharedProperties,$localStorage,$rootScope){function localStorageTaskCheck(){"true"===$localStorage.get("pulseDone")&&sharedProperties.growlMessage($rootScope.pullInterNationalization("dashboard.pulse.completion"))&&$localStorage.remove("pulseDone")}function getTasks(){ajaxService.getAjaxResponse({url:vm.config.getTasks}).then(function(response){"true"===response.Success?(vm.getTasks=void 0!==response.tasks?response.tasks:[],createTaskArray(vm.getTasks)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function createTaskArray(task){for(var i=0;i<task.length;i++)"WorkspacePulse"===task[i].type&&(vm.pulseTask={pulseRequestId:task[i].params.pulseRequestId,endDate:task[i].params.endDate,type:task[i].type}),"CompetencyEvaluationInitiate"!==task[i].type&&"CompetencyEvaluationSelf"!==task[i].type||(vm.competencyTask={endDate:task[i].endDate,description:task[i].params.description,linkText:task[i].params.linkText,title:task[i].params.title,type:task[i].type})}function redirectToCompetency(type){$localStorage.set("competencyAlertType",type),window.location.href="/sp/competency/home"}function getFeedBack(){ajaxService.getAjaxResponse({url:vm.config.getFeedBack+"?accountDashboardRequest=false&groupMemberEmail="+$rootScope.noSelf,method:"get"}).then(function(response){"true"===response.Success?vm.feedBackResult=response.feedbackTeam:null!==response.error&&sharedProperties.ajaxError(response.error)})}function getGrowth(){ajaxService.getAjaxResponse({url:vm.config.getGrowth}).then(function(response){"true"===response.Success?(vm.growthResult=response.growthTeam,vm.pageSetting.growthAjaxDone=!0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getTopNotesAndFeedback(){ajaxService.getAjaxResponse({url:vm.config.getTopNotesAndFeedback}).then(function(response){"true"===response.Success?(vm.notesAndFeedbackList=response.allNotesFeedback,vm.pageSetting.notesAndFeedbackDone=!0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getNotification(){ajaxService.getAjaxResponse({url:vm.config.getNotification}).then(function(response){"true"===response.Success?(vm.logTypes=response.logType,vm.notifcationMessages=response.notifications,vm.pageSetting.notifcationAjaxDone=!0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getActivites(){ajaxService.getAjaxResponse({url:vm.config.getActivites}).then(function(response){"true"===response.Success?(vm.activitiesMessages=response.activityMessages,vm.pageSetting.activityAjaxDone=!0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getRecentlyVisited(){ajaxService.getAjaxResponse({url:vm.config.getRecentlyVisited,method:"get"}).then(function(response){"true"===response.Success?(vm.recentlyVisited=response.trackingResponse,vm.recentlyVisited.length||(vm.getGoals(),vm.pageSetting.pullRight=!0,$scope.tabSet0=1)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getGoals(){ajaxService.getAjaxResponse({url:vm.config.getGoals,method:"get"}).then(function(response){if("true"===response.Success){vm.logName=[],vm.goalResult=response.userGoal;for(var i=0;i<vm.goalResult.length;i++)vm.logName.push(vm.goalResult[i].goal.name);vm.pageSetting.goalAjaxDone=!0,vm.selectSearch(vm.logName[0])}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function selectSearch(searchKey){for(var i=0;i<vm.goalResult.length;i++)if(vm.goalResult[i].goal.name===searchKey){vm.goalResultModified=vm.goalResult[i];break}}function startPulseLink(){window.location.href="/sp/pulseUser/pulseStartAssessment?pulseRequestId="+vm.pulseTask.pulseRequestId}function moreNotification(type,size){switch(type){case"notification":vm.pageSetting.pageSize=size;break;case"activity":vm.pageSetting.activeSize=size}}function callAjax(check,fn){check||fn()}var vm=this,userRoles=$localStorage.get("loggegdInProfile").member.roles;vm.isPrismLensAvailable=-1!==userRoles.indexOf("PrismLens"),vm.collaborativeTask={},vm.competencyTask=null,vm.pulseTask=null,vm.pageSetting={pageSize:10,activeSize:10,activityAjaxDone:!1,growthAjaxDone:!1,goalAjaxDone:!1,pullRight:!1,pulseInactive:!1,notifcationAjaxDone:!1,notesAndFeedbackDone:!1},vm.config={getTasks:"/sp/dashboard/getTasks",getFeedBack:"/sp/dashboard/feedback/myrequests",getGrowth:"/sp/dashboard/growth/myrequests",getNotification:"/sp/logs/getDashboardNotificationLogs",getActivites:"/sp/logs/getDashboardActivityLogs",getRecentlyVisited:"/sp/tracking/recentVistedArticles",getGoals:"/sp/dashboard/getUserGoals",getTopNotesAndFeedback:"/sp/dashboard/getNotesAndFeedback"},vm.feedBackResult=[],vm.growthResult=[],vm.activitiesMessages=[],vm.logTypes=[],vm.notifcationMessages=[],vm.recentlyVisited=[],vm.goalResult=[],vm.notesAndFeedbackList=[],vm.getTasks=getTasks,vm.getFeedBack=getFeedBack,vm.getGrowth=getGrowth,vm.getNotification=getNotification,vm.getActivites=getActivites,vm.getRecentlyVisited=getRecentlyVisited,vm.getGoals=getGoals,vm.selectSearch=selectSearch,vm.startPulseLink=startPulseLink,vm.moreNotification=moreNotification,vm.getTopNotesAndFeedback=getTopNotesAndFeedback,vm.callAjax=callAjax,vm.redirectToCompetency=redirectToCompetency,function(){localStorageTaskCheck()}()}function dashBoardListing($scope,ajaxService,sharedProperties,ngDialog,$filter,$localStorage,$rootScope,$state){function sendEmailReminders(status,email){ajaxService.getAjaxResponse({url:vm.config.sendReminders,data:$.param({brandHeader:"",ctaLabel:"",ctaUrl:"",logType:"PROFILE_INCOMPLETE"===status?"ProfileIncomplete":"Profile",type:"PROFILE_INCOMPLETE"===status?"ProfileIncompleteReminder":"AssessmentPendingReminder",memberList:email})}).then(function(response){"true"===response.Success?(sharedProperties.growlMessage($rootScope.pullInterNationalization("growl.notificationSent")),sharedProperties.fireAnalyticsEvent("Dashboard Groups | Send Reminder",status)):null!=response.error&&sharedProperties.ajaxError(response.error)})}function getMembersData(){var options={url:vm.config.getMembersData};ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){if(vm.masterMemberList=response.memberList.length?response.memberList:[],vm.masterMemberList.length)for(var i=0;i<vm.masterMemberList.length;i++){var list=vm.masterMemberList[i];"VALID"===list.userStatus&&(list.userStatusFormatted=$rootScope.pullInterNationalization("admin.member."+list.userStatus))}vm.groupList=response.groupList,vm.responseRecieved=!0,vm.groupBasedResult(""),angular.forEach(response.memberList,function(val,index){vm.allMembersEmailId.push({email:val.email})})}else null!==response.error&&(vm.responseRecieved=!0,sharedProperties.ajaxError(response.error))})}function groupBasedResult(selectedSearch){vm.memberList=""===selectedSearch||null===selectedSearch?angular.copy(vm.masterMemberList):vm.masterMemberList.filter(function(e){return-1!==e.groups.indexOf(selectedSearch)}),!vm.pageSetting.alltoggle&&(vm.pageSetting.negative=!1,vm.pageSetting.userEmail.email=[]),vm.pageSetting.negative&&vm.checkAll(),vm.returnMemberList(vm.pageSetting.pageSize)}function returnMemberList(pageSize){if(!vm.masterMemberList.length)return!0;vm.pageSetting.pageSize=pageSize,pageSize>=vm.masterMemberList.length&&(vm.pageSetting.disabledInfinite=!0,vm.pageSetting.pageSize=vm.masterMemberList.length),vm.order(vm.pageSetting.lastPredicate,vm.pageSetting.lastReverse),vm.numOfMembers=vm.memberList.length}function order(predicate,reverse){vm.pageSetting.lastPredicate=predicate,vm.pageSetting.lastReverse=reverse,vm.memberList=$filter("orderBy")(vm.memberList,vm.pageSetting.lastPredicate,vm.pageSetting.lastReverse)}function active(event,setting){vm.pageSetting.lastPredicate=setting.predicate,vm.pageSetting.lastReverse=setting.reverse,sharedProperties.toggleFilterClick(event,vm.pageSetting.lastPredicate),vm.order(vm.pageSetting.lastPredicate,vm.pageSetting.lastReverse)}function checkAll(){vm.pageSetting.checkedAll=!vm.pageSetting.checkedAll,vm.pageSetting.negative?vm.pageSetting.userEmail.email=vm.memberList.map(function(item){return{userId:item.id,email:item.email,name:item.name,title:item.title,userStatus:item.userStatus}}):vm.pageSetting.userEmail.email=[]}function checkUncheck(){vm.pageSetting.alltoggle=!1,vm.pageSetting.checkedAll&&(vm.pageSetting.negative=!vm.pageSetting.negative,vm.pageSetting.checkedAll=!vm.pageSetting.checkedAll)}function searchTextFilter(search){vm.pageSetting.textSearching=search}function clearSearch(){vm.pageSetting.textSearching.length&&(vm.pageSetting.textSearching="",vm.pageSetting.searchText="")}function memberTakeAway(email){$localStorage.set("memEmail",email),window.location.href="/sp/dashboardUserAnalysis"}function resetfilter(){vm.pageSetting=angular.copy(vm.originalpageSetting),vm.groupBasedResult(vm.pageSetting.selectedSearch)}var vm=this;$localStorage.remove("printEmail","printName"),vm.memberList=[],vm.masterMemberList=[],vm.groupList=[],vm.responseRecieved=!1,vm.config={getMembersData:"/sp/groupLead/getMembersAndGroups",sendReminders:"/sp/notifications/sendNotificationWithParams"},vm.pageSetting={pageSize:10,userEmail:{email:[]},lastPredicate:"name",lastReverse:!1,textSearching:"",disabledInfinite:!1,selectedSearch:"",negative:!1,alltoggle:!1},vm.originalpageSetting=angular.copy(vm.pageSetting),vm.allMembersEmailId=[],vm.allUsersMenu=!1,vm.getMembersData=getMembersData,vm.groupBasedResult=groupBasedResult,vm.returnMemberList=returnMemberList,vm.order=order,vm.active=active,vm.checkAll=checkAll,vm.searchTextFilter=searchTextFilter,vm.clearSearch=clearSearch,vm.memberTakeAway=memberTakeAway,vm.resetfilter=resetfilter,vm.checkUncheck=checkUncheck,vm.sendEmailReminders=sendEmailReminders,$rootScope.openPrintWin=function(url,_this,profileName){window.open(url,"_blank"),window.focus()},vm.viewCompare=function(groupId,groupType,groupName){$scope.groupType=groupType,$scope.groupId=groupId,$scope.groupName=groupName,$scope.groupUsers=vm.pageSetting.userEmail.email,sharedProperties.fireAnalyticsEvent("Dashboard | Groups compare Portraits","N/A"),ngDialog.open({template:"/sp/resources/html/common/team-advisor.html",scope:$scope,className:"roles-compare-full-view"})},function(){$state.go("dashboardModule");var groupName=sharedProperties.getParam("groupName");null!==groupName&&(vm.pageSetting.selectedSearch=groupName,vm.groupBasedResult(vm.pageSetting.selectedSearch))}()}dashBoardListing.$inject=["$scope","ajaxService","sharedProperties","ngDialog","$filter","$localStorage","$rootScope","$state"],angular.module("spApp").controller("dashBoardController",dashBoardController),angular.module("spApp").controller("dashBoardListing",dashBoardListing),dashBoardController.$inject=["$scope","ajaxService","sharedProperties","$localStorage","$rootScope"];