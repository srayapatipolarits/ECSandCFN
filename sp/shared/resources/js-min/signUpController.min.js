function signUpController($scope,$http,$element,$attrs,ajaxService,$location,$state,$localStorage,sharedProperties,$timeout,ngDialog,$q,$rootScope){window.scrollTo(0,0);var _month=30;$scope.pwd={min:8,max:32,toggle:!1,err:!1,inputType:"password"},$scope.pwdFlag=!1,$scope.signup={},$scope.editSignup={},$scope.proRatedTotals={members:0,admins:0,hiringAdmins:0,candidates:0,bundles:0},$scope.getExceeded=!1,$scope.overlayClose=!1,$scope.timeout=0,$scope.validCoupoun=!0,$scope.subErrorMessage=!1,$scope.sfailure=!1,$scope.shownoError=!1,$scope.failure=[],$scope.localstorage=[],$scope.ageError=!1,$scope.localStorageEMp=null===$localStorage.get("employeeCount")?20:$localStorage.get("employeeCount"),$scope.disableEmail=!1,$scope.memberOverrideCheckbox=!1,$scope.adminOverrideCheckbox=!1,$scope.candidateOverrideCheckbox=!1,$scope.bundleOverrideCheckbox=!1,$scope.hiringAdminOverrideCheckbox=!1,$scope.signup.showHiringFeature=!1,$scope.planDetails=[],$scope.featuresList=[],$scope.selectedFeatures=["Prism","Erti"],$scope.showCustomMonths=!1,$scope.hiringPackageType="Bundles",$scope.customMonths=0,$scope.totalChargesPerMonth=0,$scope.signup.platformLicencePrice=null,$scope.signup.hiringLicencePrice=null,$scope.signup.adminTotalAmount=0,$scope.signup.memberTotalAmount=0,$scope.signup.candidateTotalAmount=0,$scope.signup.bundleTotalAmount=0,$scope.signup.hiringAdminTotalAmount=0,$scope.signup.intellgentHiring=!1,$scope.selectedFeaturesList=[],$scope.signup.spMatchCheck=!1,$scope.featuresSectionHiring=!1,$scope.featuresSectionPrimary=!1,$scope.hiringBundle=10,$scope.isEditMode=!1,$scope.existingHiringPlan=!1,$scope.serializeIgnore=!0,$scope.creditInfo={},$scope.remainingDaysInCycle=0,$scope.signup.existingMember=!1,$scope.signup.enhancedPasswordSecurity=!1,$scope.checkPwd=function(){return sharedProperties.passwordCriterionCheck($("#reg_pwd").val())},$scope.addCreditPop=function(page){$scope.acPageType=page,$scope.creditInfo={},$scope.creditInfo.cpt=$scope.account.account.paymentInstrument.paymentType,$scope.creditInfo.ccomment=$scope.account.account.paymentInstrument.comment,$scope.serverError=!1,$scope.serverErrorMsg=null,ngDialog.open({template:"/sp/resources/html/admin/account/addcreditspop.html",scope:$scope})},$scope.addCredit=function(form){$scope.submitted=!1,this.spSubscribe.$valid&&"0"!==this.amount?ajaxService.getAjaxResponse({url:"/sp/sysAdmin/alternateBilling/account/addCredit",data:$.param({accountId:$scope.account.account.id,chargeAmount:$scope.creditInfo.amount,paymentType:$scope.creditInfo.cpt,comment:$scope.creditInfo.ccomment})}).then(function(response){if("true"===response.Success)$scope.getAccountInfo(!0),!0===$scope.sfailure&&($scope.signup.submitted=!1,$scope.sfailure=!1,$scope.failure=null),ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("billing.amoutcred"));else{for(var key in response.error)$scope.errorMessage=response.error[key];$scope.serverError=!0,$scope.serverErrorMsg=$scope.errorMessage}}):$scope.submitted=!0},$scope.showPassword=function($event){$event.preventDefault(),!1===$scope.pwd.toggle?($scope.pwd.toggle=!0,$scope.pwd.inputType="text"):($scope.pwd.toggle=!1,$scope.pwd.inputType="password")},$scope.pullLocalStorage=function(){ajaxService.getAjaxResponse({url:"/sp/incompleteProfile"}).then(function(response){"true"===response.Success&&($scope.localstorage=response,$scope.signup.firstName="firstName"in $scope.localstorage?$scope.localstorage.firstName:"",$scope.signup.lastName="lastName"in $scope.localstorage?$scope.localstorage.lastName:"",$scope.signup.title="title"in $scope.localstorage?$scope.localstorage.title:"",$scope.signup.email="email"in $scope.localstorage?$scope.localstorage.email:"",$scope.signup.address1="address1"in $scope.localstorage?$scope.localstorage.address1:"",$scope.signup.address2="address2"in $scope.localstorage?$scope.localstorage.address2:"",$scope.signup.city="city"in $scope.localstorage?$scope.localstorage.city:"",$scope.signup.state="state"in $scope.localstorage?$scope.localstorage.state:null,$scope.signup.zip="zip"in $scope.localstorage?$scope.localstorage.zip:"",$scope.signup.phone="phone"in $scope.localstorage?$scope.localstorage.phone:"")})},$scope.getDetails=function(type){var templates={Members:"/sp/resources/html/sysAdmin/alternateBilling/memberDetails.html",Admins:"/sp/resources/html/sysAdmin/alternateBilling/memberDetails.html"};$scope.getDetailsType=type,ngDialog.open({template:templates[type],scope:$scope})},$scope.updateEmpCount=function(e,v,checkboxSelected){var thisClass=$(e.target).attr("class"),empVal=parseInt(v);checkboxSelected=$($element).find("."+checkboxSelected).val(),!0===$scope.alternateBillingMode&&(checkboxSelected=$scope.products[$scope.activeIndex].unitPrice),empVal>$scope.signup.maximum&&void 0===$scope.alternateBillingMode?($scope.getExceeded=!0,$scope.overlayClose=!0):!0===$scope.getExceeded&&!0===$scope.overlayClose&&(""===$scope.appliedPromotionId?($scope.getExceeded=!1,$scope.overlayClose=!1):$scope.getExceeded=!1),angular.isNumber(empVal)&&("up"===thisClass&&empVal>=$scope.signup.minimum?$scope.signup.emp=parseInt($scope.signup.emp,10)+parseInt(1,10):"down"===thisClass&&empVal>=parseInt($scope.signup.minimum,10)+parseInt(1,10)&&($scope.signup.emp=parseInt($scope.signup.emp,10)-parseInt(1,10)),$scope.totalCount($scope.signup.emp,checkboxSelected,$scope.products[$scope.activeIndex].validityType)),e&&e.preventDefault()},$scope.keyUpEvent=function(e,v,checkboxSelected){if(""===v)return!1;if(38===e.keyCode?(v=parseInt(v,10)+parseInt(1,10),$scope.signup.emp=parseInt(v)):40===e.keyCode&&(v=parseInt(v,10)-parseInt(1,10),$scope.signup.emp=parseInt(v)),v>=$scope.signup.maximum&&void 0===$scope.alternateBillingMode)return $scope.getExceeded=!0,$scope.overlayClose=!0,!1;!0===$scope.getExceeded&&!0===$scope.overlayClose&&(""===$scope.appliedPromotionId?($scope.getExceeded=!1,$scope.overlayClose=!1):$scope.getExceeded=!1);var empVal=($(e.target).attr("class"),parseInt(v));checkboxSelected=$($element).find("."+checkboxSelected).val(),!0===$scope.alternateBillingMode&&(checkboxSelected=$scope.products[$scope.activeIndex].unitPrice),angular.isNumber(empVal)&&(clearTimeout($scope.timeout),$scope.timeout=setTimeout(function(){$scope.signup.emp=empVal<$scope.signup.minimum||isNaN(empVal)?$scope.signup.minimum:parseInt($scope.signup.emp,10),$scope.totalCount($scope.signup.emp,checkboxSelected,$scope.products[$scope.activeIndex].validityType),$scope.$apply()},$attrs.delay||1e3))},$scope.totalCount=function(empVal,unitPrice,validity){void 0!==validity&&"yearly"===validity.toLowerCase()?$scope.signup.total=parseFloat(empVal,10)*parseFloat(unitPrice,10)*12:$scope.signup.total=parseFloat(empVal,10)*parseFloat(unitPrice,10)},$scope.updateSelectedBox=function(event,item,min,max,unitPrice,index,validity){if($scope.overlayClose&&$scope.closeOverlaySuccessMsg(),$scope.signup.minimum=min,$scope.signup.maxEmployee=max,$scope.activateCheck=item,$scope.activeIndex=index,$scope.contractPlan=$scope.products[index].name,$scope.contractTerm=$scope.products[index].validityKey,$scope.lastcheckedItem===$scope.activateCheck)return!1;$scope.lastcheckedItem=item,$scope.totalCount($scope.signup.emp,unitPrice,$scope.products[$scope.activeIndex].validityType)},$scope.processincompleteSignUpIndividual=function(fData){$scope.spSignUpIndividual.submitted=!1,$scope.sfailure=!1;var elem=angular.element($element),obj={firstName:$scope.signup.firstName,lastName:$scope.signup.lastName,title:$scope.signup.title,email:$scope.signup.email,password:$scope.signup.password,phone:$scope.signup.phone,zip:$scope.signup.zip,address1:$scope.signup.address1,address2:$scope.signup.address2,country:$scope.signup.country,city:$scope.signup.city,state:$scope.signup.state,gender:$scope.signup.gender,month:$scope.signup.month,year:$scope.signup.year,day:$scope.signup.day},vCount=0;for(var k in obj)"default"!==obj[k]&&"default1"!==obj[k]||vCount++;if($scope.spSignUpIndividual.$valid&&$scope.ageLimitCheck($scope.signup.month,$scope.signup.year,$scope.signup.day)&&0===vCount){var ur="/sp/updateProfile",options={url:ur,data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?window.location.reload():null!=response.error&&($scope.failure=response.error,$scope.sfailure=!0)})}else $scope.spSignUpIndividual.submitted=!0,elem=angular.element($element),$scope.ageError||$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300)},$scope.addmemberSignUpIndividual=function(fData,alternate){$scope.pwdFlag=!1;var token=window.location.pathname.substring(window.location.pathname.lastIndexOf("/")+1);$scope.addMemberSignUp.submitted=!1,$scope.sfailure=!1,$scope.pwdFlag=$scope.checkPwd();var elem=angular.element($element),obj={firstName:$scope.signup.firstName,lastName:$scope.signup.lastName,title:$scope.signup.title,email:$scope.signup.email,password:$scope.signup.password,phone:$scope.signup.phone,zip:$scope.signup.zip,address1:$scope.signup.address1,address2:$scope.signup.address2,country:$scope.signup.country,city:$scope.signup.city,state:$scope.signup.state,gender:$scope.signup.gender,month:$scope.signup.month,year:$scope.signup.year,day:$scope.signup.day,token:token};if($scope.addMemberSignUp.$valid&&$scope.ageLimitCheck($scope.signup.month,$scope.signup.year,$scope.signup.day)&&$scope.pwdFlag){var options={url:void 0===alternate?"/sp/signup/member":"/sp/signup/individual/member",data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?($localStorage.flush(),null!==sharedProperties.getParam("lang")&&sessionStorage.setItem("langParam",sharedProperties.getParam("lang")),window.location.href="/sp"):null!=response.error&&($scope.failure=response.error,$scope.sfailure=!0)})}else $scope.addMemberSignUp.submitted=!0,elem=angular.element($element),$scope.ageError||$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300)},$scope.processSignUpIndividual=function(fData){$scope.spSignUpIndividual.submitted=!1,$scope.sfailure=!1;var sourceRefer;sourceRefer="other"===$scope.signup.referSource.toLowerCase()?$scope.signup.referSourceOther:"default2"===$scope.signup.referSource?"":$scope.signup.referSource;var elem=angular.element($element),obj={firstName:$scope.signup.firstName,lastName:$scope.signup.lastName,title:$scope.signup.title,email:$scope.signup.email,password:$scope.signup.password,phone:$scope.signup.phone,zip:$scope.signup.zip,address1:$scope.signup.address1,address2:$scope.signup.address2,country:$scope.signup.country,city:$scope.signup.city,state:$scope.signup.state,gender:$scope.signup.gender,month:$scope.signup.month,year:$scope.signup.year,day:$scope.signup.day,referSource:sourceRefer},vCount=0;for(var k in obj)"default"!==obj[k]&&"default1"!==obj[k]||vCount++;if($scope.spSignUpIndividual.$valid&&$scope.ageLimitCheck($scope.signup.month,$scope.signup.year,$scope.signup.day)&&0===vCount){var ur="/sp/signup/"+angular.lowercase($location.path().replace("/signup_","")),options={url:ur,data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?$state.go(angular.lowercase($location.path().replace("/signup_",""))):null!=response.error&&($scope.failure=response.error,$scope.sfailure=!0)})}else $scope.spSignUpIndividual.submitted=!0,elem=angular.element($element),$scope.ageError||$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300)},$scope.processSignUp=function(fData){$scope.spSignUp.submitted=!1;var sourceRefer,elem=angular.element($element);sourceRefer="other"===$scope.signup.referSource.toLowerCase()?$scope.signup.referSourceOther:"default2"===$scope.signup.referSource?"":$scope.signup.referSource;var obj={firstName:$scope.signup.firstName,lastName:$scope.signup.lastName,title:$scope.signup.title,email:$scope.signup.email,password:$scope.signup.password,company:$scope.signup.company,industry:$scope.signup.industry,numEmp:$scope.signup.noEmp,phone:$scope.signup.phone,zip:$scope.signup.zip,address1:$scope.signup.address1,address2:$scope.signup.address2,country:$scope.signup.country,city:$scope.signup.city,state:$scope.signup.state,referSource:sourceRefer},vCount=0;for(var k in obj)"default"!==obj[k]&&"default1"!==obj[k]||vCount++;if($scope.spSignUp.$valid&&0===vCount){$localStorage.set("businessUserCred",obj);var ur="/sp/signup/"+angular.lowercase($location.path().replace("/signup_","")),options={url:ur,data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?$state.go(angular.lowercase($location.path().replace("/signup_",""))):null!=response.error&&($scope.failure=response.error,$scope.sfailure=!0)})}else $scope.spSignUp.submitted=!0,elem=angular.element($element),$scope.ageError||$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300)},$scope.processAlternateSignUp=function(fData){$scope.spSignUp.submitted=!1;var obj={firstName:$scope.signup.firstName,lastName:$scope.signup.lastName,title:$scope.signup.title,email:$scope.signup.email,company:$scope.signup.company,industry:$scope.signup.industry,numEmp:$scope.signup.noEmp,phone:$scope.signup.phone,zip:$scope.signup.zip,address1:$scope.signup.address1,address2:$scope.signup.address2,country:$scope.signup.country,city:$scope.signup.city,state:$scope.signup.state,existingMember:$scope.signup.existingMember},vCount=0;for(var k in obj)"default"!==obj[k]&&"default1"!==obj[k]||vCount++;if($scope.spSignUp.$valid&&0===vCount){$localStorage.set("alternativeBUserCred",obj);var options={url:"/sp/sysAdmin/alternateBilling/signup/business",data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?window.location.href="/sp/sysAdmin/alternateBilling/businessStep2Form":null!=response.error&&($scope.failure=response.error,$scope.sfailure=!0)})}else{$scope.spSignUp.submitted=!0;var elem=angular.element($element);$scope.ageError||$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300)}},$scope.processAlternateIndividualSignUp=function(fData){$scope.spSignUp.submitted=!1,$scope.sfailure=!1;var obj={firstName:$scope.signup.firstName,lastName:$scope.signup.lastName,title:$scope.signup.title,email:$scope.signup.email,password:$scope.signup.password,phone:$scope.signup.phone,zip:$scope.signup.zip,address1:$scope.signup.address1,address2:$scope.signup.address2,country:$scope.signup.country,city:$scope.signup.city,state:$scope.signup.state,gender:$scope.signup.gender,month:$scope.signup.month,year:$scope.signup.year,day:$scope.signup.day},vCount=0;for(var k in obj)"default"!==obj[k]&&"default1"!==obj[k]||vCount++;if($scope.spSignUp.$valid&&$scope.ageLimitCheck($scope.signup.month,$scope.signup.year,$scope.signup.day)&&0===vCount){var options={url:"/sp/sysAdmin/alternateBilling/signup/individual",data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?window.location.href="/sp/sysAdmin/alternateBilling/individualStep2Form":null!=response.error&&($scope.failure=response.error,$scope.sfailure=!0)})}else{$scope.spSignUp.submitted=!0;var elem=angular.element($element);$scope.ageError||$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300)}},$scope.contactUs=function(){var elem=angular.element($element);$(elem.find("form")).serialize()},$scope.processSubscribe=function(fData){var elem=angular.element($element);$(elem.find("form")).serialize();$scope.shownoError=!1;var obj={},options={};if("subscribe"===fData){$scope.spSubscribe.submitted=!1,$scope.subErrorMessage=!1,obj={nameOnCard:$scope.signup.ccname,cardNumber:$scope.signup.ccno,month:$scope.signup.month,year:$scope.signup.year,cvv:$scope.signup.ccv,country:$scope.signup.country,zip:$scope.signup.zip,total:$scope.signup.total,action:"submitsubscribe",numEmp:$scope.signup.emp,productId:$scope.activateCheck.replace("index_","")};var vCount=0;void 0!==$scope.appliedPromotionId&&""!==$scope.appliedPromotionId&&(obj.promotionId=$scope.appliedPromotionId);for(var k in obj)"default"!==obj[k]&&"default1"!==obj[k]||vCount++;$scope.spSubscribe.$valid&&0===vCount?(options={url:"/sp/signup/"+angular.lowercase($location.path().replace("/",""))+"/account",data:$.param(obj)},ajaxService.getAjaxResponse(options).then(function(response){if(void 0!==response.error){var keyname="";for(var key in response.error)keyname=key;$scope.errorMessage=response.error[keyname],$scope.subErrorMessage=!0}else $localStorage.remove("employeeCount"),window.location.href="/sp"})):($scope.spSubscribe.submitted=!0,elem=angular.element($element),$scope.ageError||$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300))}else"cancel"===fData?($scope.shownoError=!0,window.location.replace("/pricing/")):"contactus"===fData&&($scope.contactUsForm.submitted=!0,$scope.contactUsForm.$valid?(obj={name:$scope.signup.vciname,company:$scope.signup.vcicompname,phone:$scope.signup.vcitel,action:"contact",numEmp:$scope.signup.emp},options={url:"/sp/signup/business/assisted/account",data:$.param(obj)},ajaxService.getAjaxResponse(options).then(function(response){$state.go("thankYou")})):($scope.contactUsForm.submitted=!0,elem=angular.element($element),$scope.ageError||$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300)))},$scope.priorityCode=function(val,productId){var promoCode=$scope.signup.coupon;if(!/^[a-zA-Z0-9]{3,8}$/.test(promoCode))return $scope.validCoupoun=!1,!1;$scope.validCoupoun=!0;var obj={code:promoCode.toUpperCase(),productId:productId.replace("index_","")},options={url:"/sp/signup/promotion",data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){if($scope.getResult=void 0!==response.Success&&response.Success,$scope.getResult){if("Active"!==response.promotion.status)return $scope.getResult=!1,!1;$scope.appliedPromotionId=response.promotion.id,$scope.getContent=void 0!==response.promotion.message?response.promotion.message:"No Discount Available",$scope.overlayClose=$scope.getResult,$scope.getDiscountedPrice=response.promotion.unitPrice,$scope.discountedActivated=$scope.activateCheck,$scope.withoutDiscountedPrice=$($element).find("."+$scope.discountedActivated).val(),!0===$scope.alternateBillingMode&&($scope.withoutDiscountedPrice=$scope.products[$scope.activeIndex].unitPrice),$scope.originproduct=$scope.products,$scope.discountedItemIndex=$scope.activeIndex,$scope.products[$scope.activeIndex].unitPrice=$scope.getDiscountedPrice,$scope.totalCount($scope.signup.emp,$scope.getDiscountedPrice,$scope.products[$scope.activeIndex].validityType)}else void 0!==response.error&&($scope.getResult=!1,$scope.PromotionsValidationException=response.error.Promotion_Not_Found)})},$scope.closeOverlaySuccessMsg=function(event){$scope.overlayClose=!1,$scope.appliedPromotionId="",$scope.products[$scope.discountedItemIndex].unitPrice=$scope.withoutDiscountedPrice,$scope.totalCount($scope.signup.emp,$scope.products[$scope.activeIndex].unitPrice,$scope.products[$scope.activeIndex].validityType),event&&event.preventDefault()},$scope.checkStatus=function(param1,param2){return param1===param2},$scope.highlighter=function(index){return!(!$scope.getResult||!$scope.overlayClose||$scope.discountedActivated!==$scope.activateCheck||$scope.discountedItemIndex!==index)},$scope.getAnnualMonthlyEmpData=function(mode){var obj={productType:angular.uppercase($location.path().replace("/",""))},options={url:"/sp/signup/getProducts",data:$.param(obj)};$scope.userMode=mode,ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){if(void 0!==response.Product_Not_Found)return!1;$scope.products=response.products;var countStore=$localStorage.get("employeeCount"),empyType=$localStorage.get("emplyeeType"),_index=0;if($scope.minEmpCount=response.products[_index].minEmployee,null!=empyType){"m"===empyType?empyType="MONTHLY":"y"===empyType&&(empyType="YEARLY");for(var i=0;i<$scope.products.length;i++)$scope.products[i].validityType===empyType&&(_index=i)}$scope.signup.minimum=response.products[_index].minEmployee,$scope.signup.maximum=void 0!==response.products[_index].maxEmployee?response.products[_index].maxEmployee:1e3,$scope.signup.contract=[],$scope.signup.emp=void 0!==countStore&&countStore>$scope.signup.minimum?countStore:response.products[_index].minEmployee,$scope.activateCheck="index_"+response.products[_index].id,$scope.lastcheckedItem="index_"+response.products[_index].id,$scope.contractPlan=response.products[_index].name,$scope.contractTerm=response.products[_index].validityKey,$scope.activeIndex=_index,$scope.totalCount($scope.signup.emp,response.products[_index].unitPrice,response.products[_index].validityType),$scope.annualCheckbox=!0,$scope.master=angular.copy($scope.signup)}else{$scope.updateStatusError=!0;for(var key in response.error)$scope.updateStatusErrorMsg=response.error[key];sharedProperties.growlMessage($scope.updateStatusErrorMsg)}})},$scope.ageLimitCheck=function(month,year,date){if(void 0===month||void 0===year)return!0;var today=new Date,birthDate=new Date(year+"/"+month+"/"+date),age=today.getFullYear()-birthDate.getFullYear(),m=today.getMonth()-birthDate.getMonth();return(m<0||0===m&&today.getDate()<birthDate.getDate())&&age--,age>=18?($scope.ageError=!1,!0):($scope.ageError=!0,!1)},$scope.pullContactUsDetails=function(){var storage=$localStorage.get("businessUserCred");null!==storage&&($scope.signup.vciname=storage.firstName+" "+storage.lastName,$scope.signup.vcicompname=storage.company,$scope.signup.vcitel=storage.phone);$scope.signup.firstName,$scope.signup.lastName,$scope.signup.title,$scope.signup.email,$scope.signup.password,$scope.signup.company,$scope.signup.industry,$scope.signup.noEmp,$scope.signup.phone,$scope.signup.zip,$scope.signup.address1,$scope.signup.address2,$scope.signup.country,$scope.signup.city,$scope.signup.state},$scope.historyGoBack=function(type){switch(type){case"business":window.location.href="/sp/sysAdmin/alternateBilling/business";break;case"individual":window.location.href="/sp/sysAdmin/alternateBilling/individual"}},$scope.getAllProducts=function(type){$scope.alternateBillingMode=!0,ajaxService.getAjaxResponse({url:"/sp/sysAdmin/alternateBilling/signup/getProducts",data:$.param({productType:type})}).then(function(response){"true"===response.Success?($scope.products=response.products,$scope.signup.emp=0,$scope.signup.minimum=0,$scope.signup.maximum=0,$scope.totalCount(0,0,"MONTHLY")):sharedProperties.ajaxError(response)})},$scope.paymentTypeChange=function(_this){if($scope.overlayClose&&$scope.closeOverlaySuccessMsg(),""===_this.signup.paymentType)return $scope.signup.emp=0,$scope.signup.minimum=0,$scope.signup.maximum=0,$scope.totalCount(0,0,"MONTHLY"),!0;var _index=_this.signup.paymentType;$scope.signup.minimum=$scope.products[_index].minEmployee,$scope.signup.maximum=void 0!==$scope.products[_index].maxEmployee?$scope.products[_index].maxEmployee:1e3,$scope.signup.contract=[],$scope.signup.emp=$scope.products[_index].minEmployee,$scope.activateCheck="index_"+$scope.products[_index].id,$scope.lastcheckedItem="index_"+$scope.products[_index].id,$scope.contractPlan=$scope.products[_index].name,$scope.contractTerm=$scope.products[_index].validityKey,$scope.activeIndex=_index,$scope.totalCount($scope.signup.emp,$scope.products[_index].unitPrice,$scope.products[_index].validityType),$scope.annualCheckbox=!0,$scope.master=angular.copy($scope.signup)},$scope.validateSendResponse=function(signup,editMode){$scope.signup.submitted=!1;var hiringAgreementCheck,_data=$("#accountsBillingStep2 :not(.serialize-ignore)").serialize(),accountIdInfo=!0===editMode?"&accountId="+$scope.accountId:"",totalAmountCheck=!(!$scope.isEditMode&&$scope.signup.camountOverride)||$scope.signup.camountOverride>=$scope.totalForBillingCycle;hiringAgreementCheck=!$scope.signup.intellgentHiring&&!$scope.signup.existingHiringPlan||$scope.signup.hiringAgreement<=$scope.signup.agreement;var response;if(signup.$valid&&totalAmountCheck&&hiringAgreementCheck){var options={url:editMode?"/sp/sysAdmin/alternateBilling/updateAccount":"/sp/sysAdmin/alternateBilling/signup/business/account",data:_data+accountIdInfo};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?editMode?($localStorage.set("updateAccount","Account updated successfully !"),window.location.href="/sp/sysAdmin/alternateBilling/viewDetailAccount?accountId="+sharedProperties.getParam("accountId")):($localStorage.set("createAccount","Account created successfully !"),window.location.href="undefined"==typeof individual?"/sp/sysAdmin/alternateBilling/business":"/sp/sysAdmin/alternateBilling/individual"):null!=response.error&&($scope.failure=response.error,$scope.sfailure=!0)})}else{$scope.signup.submitted=!0;var elem=angular.element($element);$scope.ageError||($(elem).find("form .ng-invalid:first").length>0?$("html,body").animate({scrollTop:$(elem).find("form .ng-invalid:first").length>0?$(elem).find("form .ng-invalid:first").offset().top-20:0},300):sharedProperties.ajaxError(response))}},$scope.toggleOverrideField=function(type){"Member"===type?(!1===$scope.memberOverrideCheckbox?($scope.memberOverrideCheckbox=!0,$scope.signup.memberPrice=$scope.isEditMode?$scope.account.account.spPlans.Primary.unitMemberPrice:0):($scope.memberOverrideCheckbox=!1,$scope.signup.overrideMemberAmount=0),$scope.updateMemberAccountSummary("Member")):(!1===$scope.adminOverrideCheckbox?($scope.adminOverrideCheckbox=!0,$scope.signup.adminPrice=$scope.isEditMode?$scope.account.account.spPlans.Primary.unitAdminPrice:0):($scope.adminOverrideCheckbox=!1,$scope.signup.overrideAdminAmount=0),$scope.updateMemberAccountSummary("Admin"))},$scope.toggleHiringOverrideField=function(type){"Candidate"===type?(!1===$scope.candidateOverrideCheckbox?($scope.candidateOverrideCheckbox=!0,$scope.signup.candidatePrice=$scope.isEditMode?$scope.account.account.spPlans.IntelligentHiring.unitMemberPrice:null):($scope.candidateOverrideCheckbox=!1,$scope.signup.overrideCandidateAmount=0),$scope.updateHiringAccountSummary("Candidate")):"Bundle"===type?(!1===$scope.bundleOverrideCheckbox?($scope.bundleOverrideCheckbox=!0,$scope.signup.bundlePrice=$scope.isEditMode?$scope.account.account.spPlans.IntelligentHiring.availalbeMemberSubscriptions/$scope.hiringBundle:null):($scope.byndleOverrideCheckbox=!1,$scope.signup.overrideBundleAmount=0),$scope.updateHiringAccountSummary("Bundle")):(!1===$scope.hiringAdminOverrideCheckbox?($scope.hiringAdminOverrideCheckbox=!0,$scope.signup.hiringAdminPrice=$scope.isEditMode?$scope.account.account.spPlans.IntelligentHiring.unitAdminPrice:null):($scope.hiringAdminOverrideCheckbox=!1,$scope.signup.overrideHiringAdminAmount=0),$scope.updateHiringAccountSummary("Admin"))},$scope.getPlanDetails=function(){ajaxService.getAjaxResponse({url:"/sp/sysAdmin/alternateBilling/getPlansFeature",method:"POST"}).then(function(response){if("true"===response.Success){$scope.planDetails=response.plansFeatures;for(var i=0;i<$scope.planDetails.length;i++)"Primary"===$scope.planDetails[i].spPlanType&&($scope.featuresList=$scope.planDetails[i].spFeatures);$scope.updateSerializeFlags()}else sharedProperties.ajaxError(response)})},$scope.toggleFeatureSelection=function(featureName){var index=$scope.selectedFeatures.indexOf(featureName);index>-1?$scope.selectedFeatures.splice(index,1):$scope.selectedFeatures.push(featureName)},$scope.updateMemberAccountSummary=function(type){var overRidePrice=0,previousCharge=0,chargableAmount=0;"Member"===type?$scope.memberOverrideCheckbox?$scope.signup.overrideMemberAmount>0?($scope.signup.memberTotalAmount=$scope.signup.overrideMemberAmount,$scope.updateTotalPerMonth(),$scope.isEditMode&&(overRidePrice=$scope.signup.overrideMemberAmount,previousCharge=$scope.account.account.spPlans.Primary.planMemberNextChargeAmount,chargableAmount=(overRidePrice-previousCharge)*($scope.remainingDays/_month),chargableAmount<0?($scope.proRatedTotals.members=0,$scope.updateTotalPerMonth()):($scope.proRatedTotals.members=chargableAmount,$scope.updateTotalPerMonth()),$scope.signup.memberCount<$scope.editSignup.memberCount&&($scope.signup.memberCount=$scope.editSignup.memberCount,$scope.proRatedTotals.members=0,$scope.updateTotalPerMonth()))):($scope.signup.memberTotalAmount=parseInt($scope.signup.memberCount)*parseFloat($scope.signup.memberPrice),$scope.updateTotalPerMonth()):($scope.signup.memberTotalAmount=parseInt($scope.signup.memberCount)*parseFloat($scope.signup.memberPrice),$scope.updateTotalPerMonth(),$scope.isEditMode&&($scope.signup.memberCount>$scope.editSignup.memberCount?($scope.proRatedTotals.members=0,$scope.proRatedTotals.members=$scope.editSignup.memberPrice/_month*($scope.signup.memberCount-$scope.editSignup.memberCount)*$scope.remainingDays,$scope.updateTotalPerMonth()):$scope.signup.memberCount<=$scope.editSignup.memberCount&&($scope.signup.memberCount=$scope.editSignup.memberCount,$scope.proRatedTotals.members=0,$scope.updateTotalPerMonth()))):$scope.adminOverrideCheckbox?$scope.signup.overrideAdminAmount>0?($scope.signup.adminTotalAmount=$scope.signup.overrideAdminAmount,$scope.updateTotalPerMonth(),$scope.isEditMode&&(overRidePrice=$scope.signup.overrideAdminAmount,previousCharge=$scope.account.account.spPlans.Primary.planAdminNextChargeAmount,chargableAmount=(overRidePrice-previousCharge)*($scope.remainingDays/_month),chargableAmount<0?($scope.proRatedTotals.admins=0,$scope.updateTotalPerMonth()):($scope.proRatedTotals.admins=chargableAmount,$scope.updateTotalPerMonth()),$scope.signup.adminCount<$scope.editSignup.adminCount&&($scope.signup.adminCount=$scope.editSignup.adminCount,$scope.proRatedTotals.admins=0,$scope.updateTotalPerMonth()))):($scope.signup.adminTotalAmount=parseInt($scope.signup.adminCount)*parseFloat($scope.signup.adminPrice),$scope.updateTotalPerMonth()):($scope.signup.adminTotalAmount=parseInt($scope.signup.adminCount)*parseFloat($scope.signup.adminPrice),$scope.updateTotalPerMonth(),$scope.isEditMode&&($scope.signup.adminCount>$scope.editSignup.adminCount?($scope.proRatedTotals.admins=0,$scope.proRatedTotals.admins=$scope.editSignup.adminPrice/_month*($scope.signup.adminCount-$scope.editSignup.adminCount)*$scope.remainingDays,$scope.updateTotalPerMonth()):$scope.signup.adminCount<=$scope.editSignup.adminCount&&($scope.signup.adminCount=$scope.editSignup.adminCount,$scope.proRatedTotals.admins=0,$scope.updateTotalPerMonth())))},$scope.updateHiringAccountSummary=function(type){var overRidePrice=0,previousCharge=0,chargableAmount=0;"Candidate"===type?$scope.candidateOverrideCheckbox&&$scope.signup.overrideCandidateAmount>0?($scope.signup.candidateTotalAmount=$scope.signup.overrideCandidateAmount,$scope.updateTotalPerMonth()):($scope.signup.candidateTotalAmount=parseInt($scope.signup.candidateCount)*parseFloat($scope.signup.candidatePrice),$scope.updateTotalPerMonth()):"Bundle"===type?$scope.bundleOverrideCheckbox&&$scope.signup.overrideBundleAmount>0?($scope.signup.bundleTotalAmount=$scope.signup.overrideBundleAmount,$scope.updateTotalPerMonth()):($scope.signup.bundleTotalAmount=parseInt($scope.signup.bundleCount)*parseFloat($scope.signup.bundlePrice),$scope.updateTotalPerMonth()):$scope.hiringAdminOverrideCheckbox?$scope.signup.overrideHiringAdminAmount>0?($scope.signup.hiringAdminTotalAmount=$scope.signup.overrideHiringAdminAmount,$scope.updateTotalPerMonth(),
$scope.isEditMode&&$scope.existingHiringPlan?(overRidePrice=$scope.signup.overrideHiringAdminAmount,previousCharge=$scope.account.account.spPlans.IntelligentHiring.planAdminNextChargeAmount,chargableAmount=(overRidePrice-previousCharge)*($scope.remainingDays/_month),chargableAmount<0?($scope.proRatedTotals.hiringAdmins=0,$scope.updateTotalPerMonth()):($scope.proRatedTotals.hiringAdmins=chargableAmount,$scope.updateTotalPerMonth()),$scope.signup.hiringAdminCount<$scope.editSignup.hiringAdminCount&&($scope.signup.hiringAdminCount=$scope.editSignup.hiringAdminCount,$scope.proRatedTotals.hiringAdmins=0,$scope.updateTotalPerMonth())):$scope.isEditMode&&!1===$scope.existingHiringPlan&&($scope.proRatedTotals.hiringAdmins=$scope.signup.overrideHiringAdminAmount/_month*$scope.remainingDays,$scope.updateTotalPerMonth())):($scope.signup.hiringAdminTotalAmount=$scope.signup.overrideHiringAdminAmount/_month*$scope.remainingDays*$scope.existingBillingDays,$scope.updateTotalPerMonth()):($scope.signup.hiringAdminTotalAmount=parseInt($scope.signup.hiringAdminCount)*parseFloat($scope.signup.hiringAdminPrice),$scope.updateTotalPerMonth(),$scope.isEditMode&&$scope.existingHiringPlan?$scope.signup.hiringAdminCount>$scope.editSignup.hiringAdminCount?($scope.proRatedTotals.hiringAdmins=0,$scope.proRatedTotals.hiringAdmins=$scope.editSignup.hiringAdminPrice/_month*($scope.signup.hiringAdminCount-$scope.editSignup.hiringAdminCount)*$scope.remainingDays,$scope.updateTotalPerMonth()):$scope.signup.hiringAdminCount<=$scope.editSignup.hiringAdminCount&&($scope.signup.hiringAdminCount=$scope.editSignup.hiringAdminCount,$scope.proRatedTotals.hiringAdmins=0,$scope.updateTotalPerMonth()):$scope.isEditMode&&!1===$scope.existingHiringPlan&&($scope.proRatedTotals.hiringAdmins=$scope.signup.hiringAdminCount*($scope.signup.hiringAdminPrice/_month)*$scope.remainingDays*$scope.existingBillingDays,$scope.updateTotalPerMonth())),$scope.isEditMode&&!1===$scope.existingHiringPlan&&!0===$scope.signup.intellgentHiring&&($scope.hiringAdminOverrideCheckbox?$scope.signup.overrideHiringAdminAmount>0?(overRidePrice=$scope.signup.overrideHiringAdminAmount,previousCharge=0,chargableAmount=(overRidePrice-previousCharge)*($scope.remainingDays/_month),chargableAmount<0?($scope.proRatedTotals.hiringAdmins=0,$scope.updateTotalPerMonth()):($scope.proRatedTotals.hiringAdmins=chargableAmount,$scope.updateTotalPerMonth())):($scope.signup.hiringAdminTotalAmount=parseInt($scope.signup.hiringAdminCount)*parseFloat($scope.signup.hiringAdminPrice),$scope.updateTotalPerMonth()):($scope.proRatedTotals.hiringAdmins=0,$scope.proRatedTotals.hiringAdmins=$scope.signup.hiringAdminPrice/_month*$scope.signup.hiringAdminCount*$scope.remainingDays,$scope.updateTotalPerMonth()))},$scope.calcAgreementAmount=function(){$scope.totalAgreementAmount=0;var hiringAdminTotal=0,hiringLicenceTotal=0,totalHiringAgreement=0;$scope.totalAgreementAmount+=null!==$scope.signup.platformLicencePrice&&void 0!==$scope.signup.platformLicencePrice&&$scope.signup.platformLicencePrice>0?$scope.signup.platformLicencePrice:0,$scope.totalAgreementAmount+=null!==$scope.signup.adminTotalAmount&&void 0!==$scope.signup.adminTotalAmount&&$scope.signup.adminTotalAmount>0?$scope.signup.adminTotalAmount:0,$scope.totalAgreementAmount+=null!==$scope.signup.memberTotalAmount&&void 0!==$scope.signup.memberTotalAmount&&$scope.signup.memberTotalAmount>0?$scope.signup.memberTotalAmount:0;var candidatesPack=null!==$scope.signup.candidateTotalAmount&&void 0!==$scope.signup.candidateTotalAmount&&$scope.signup.candidateTotalAmount>0?$scope.signup.candidateTotalAmount:0,bundlesPack=null!==$scope.signup.bundleTotalAmount&&void 0!==$scope.signup.bundleTotalAmount&&$scope.signup.bundleTotalAmount>0?$scope.signup.bundleTotalAmount:0;hiringLicenceTotal=null!==$scope.signup.hiringLicencePrice&&void 0!==$scope.signup.hiringLicencePrice&&$scope.signup.hiringLicencePrice>0?$scope.signup.hiringLicencePrice:0,hiringAdminTotal=null!==$scope.signup.hiringAdminTotalAmount&&void 0!==$scope.signup.hiringAdminTotalAmount&&$scope.signup.hiringAdminTotalAmount>0?$scope.signup.hiringAdminTotalAmount:0,totalHiringAgreement=parseFloat(12*(hiringLicenceTotal+hiringAdminTotal)*$scope.signup.hiringAgreement),$scope.totalAgreementAmount=parseFloat(12*$scope.totalAgreementAmount*$scope.signup.agreement+candidatesPack+bundlesPack+(totalHiringAgreement||0)),$scope.totalAgreementAmount=Math.round($scope.totalAgreementAmount)},$scope.updateTotalPerMonth=function(){$scope.totalChargesPerMonth=0,$scope.totalChargesPerMonth+=null!==$scope.signup.platformLicencePrice&&void 0!==$scope.signup.platformLicencePrice&&$scope.signup.platformLicencePrice>0?$scope.signup.platformLicencePrice:0,$scope.totalChargesPerMonth+=null!==$scope.signup.hiringLicencePrice&&void 0!==$scope.signup.hiringLicencePrice&&$scope.signup.hiringLicencePrice>0?$scope.signup.hiringLicencePrice:0,$scope.totalChargesPerMonth+=null!==$scope.signup.adminTotalAmount&&void 0!==$scope.signup.adminTotalAmount&&$scope.signup.adminTotalAmount>0?$scope.signup.adminTotalAmount:0,$scope.totalChargesPerMonth+=null!==$scope.signup.memberTotalAmount&&void 0!==$scope.signup.memberTotalAmount&&$scope.signup.memberTotalAmount>0?$scope.signup.memberTotalAmount:0,$scope.totalChargesPerMonth+=null!==$scope.signup.hiringAdminTotalAmount&&void 0!==$scope.signup.hiringAdminTotalAmount&&$scope.signup.hiringAdminTotalAmount>0?$scope.signup.hiringAdminTotalAmount:0,$scope.totalChargesPerMonth=Math.round($scope.totalChargesPerMonth),$scope.calcAgreementAmount(),void 0!==$scope.signup.billingCycle&&null!==$scope.signup.billingCycle&&$scope.calcBillingCycleAmount($scope.signup.billingCycle,"Custom"===$scope.signup.billingCycle)},$scope.calcBillingCycleAmount=function(billingCycleTerm,isCustom){$scope.totalForBillingCycle=0;var term=null!==billingCycleTerm&&void 0!==billingCycleTerm?billingCycleTerm.toLowerCase().replace("-",""):0,billingMonths={monthly:1,quaterly:3,semiannually:6,anually:12},billingTerm=0,candidatesTotal=0,bundlesTotal=0;if(billingTerm=!0!==isCustom?parseInt(billingMonths[term]):parseInt($scope.signup.customMonths),$scope.totalForBillingCycle=parseFloat($scope.totalChargesPerMonth*billingTerm),$scope.isEditMode){if($scope.signup.camount=0,$scope.signup.camountOverride=0,$scope.signup.hiringLicencePrice>$scope.editSignup.hiringLicencePrice){var hiringLicencePrice=($scope.signup.hiringLicencePrice-$scope.editSignup.hiringLicencePrice)/_month*$scope.remainingDays;$scope.signup.camount+=hiringLicencePrice}if($scope.signup.platformLicencePrice>$scope.editSignup.platformLicencePrice){var platformLicencePrice=($scope.signup.platformLicencePrice-$scope.editSignup.platformLicencePrice)/_month*$scope.remainingDays;$scope.signup.camount+=platformLicencePrice}var existingCandidates=void 0===$scope.editSignup.candidateTotalAmount||null===$scope.editSignup.candidateTotalAmount?0:$scope.editSignup.candidateTotalAmount;void 0===$scope.editSignup.bundleTotalAmount||null===$scope.editSignup.bundleTotalAmount||$scope.editSignup.bundleTotalAmount;$scope.signup.candidateTotalAmount>existingCandidates&&($scope.signup.camount+=null!==$scope.signup.candidateTotalAmount&&void 0!==$scope.signup.candidateTotalAmount&&$scope.signup.candidateTotalAmount>0?$scope.signup.candidateTotalAmount:0),$scope.signup.bundleTotalAmount>existingCandidates&&($scope.signup.camount+=null!==$scope.signup.bundleTotalAmount&&void 0!==$scope.signup.bundleTotalAmount&&$scope.signup.bundleTotalAmount>0?$scope.signup.bundleTotalAmount:0),$scope.signup.camount+=$scope.proRatedTotals.members,$scope.signup.camount+=$scope.proRatedTotals.admins,$scope.signup.camount+=$scope.proRatedTotals.hiringAdmins,$scope.signup.camountOverride=parseFloat($scope.signup.camount).toFixed(2),$scope.signup.camountOverride=Math.round($scope.signup.camountOverride)}else candidatesTotal=null!==$scope.signup.candidateTotalAmount&&void 0!==$scope.signup.candidateTotalAmount&&$scope.signup.candidateTotalAmount>0?$scope.signup.candidateTotalAmount:0,bundlesTotal=null!==$scope.signup.bundleTotalAmount&&void 0!==$scope.signup.bundleTotalAmount&&$scope.signup.bundleTotalAmount>0?$scope.signup.bundleTotalAmount:0,$scope.signup.camountOverride=$scope.signup.camount=Math.round($scope.totalForBillingCycle+bundlesTotal+candidatesTotal)},!1===$scope.signup.showHiringFeature&&($scope.candidateOverrideCheckbox=!1,$scope.signup.candidateTotalAmount=0,$scope.signup.candidateCount=null,$scope.signup.candidatePrice=null,$scope.signup.overrideCandidateAmount=null,$scope.bundleOverrideCheckbox=!1,$scope.signup.bundleTotalAmount=0,$scope.signup.bundleCount=null,$scope.signup.bundlePrice=null,$scope.signup.overrideBundleAmount=0,$scope.hiringAdminOverrideCheckbox=!1,$scope.signup.hiringAdminTotalAmount=0,$scope.signup.hiringAdminCount=null,$scope.signup.hiringAdminPrice=null,$scope.signup.overrideHiringAdminAmount=null,$scope.signup.hiringLicencePrice=null,$scope.updateTotalPerMonth()),$scope.foramttedDate=function(dateObj){return dateObj.month.toUpperCase().substring(0,3)+" "+dateObj.dayOfMonth+", "+dateObj.year},$scope.getTotalPrice=function(priceObj){return null!==priceObj.unitPrice&&void 0!==priceObj.unitPrice&&0!==priceObj.unitPrice?parseFloat(priceObj.unitPrice*priceObj.noOfAccounts).toFixed(2):parseFloat(priceObj.overridePrice).toFixed(2)},$scope.getAccountCount=function(type,plan){var count=0;return"Members"===type&&"Primary"===plan?jQuery.each($scope.paymentsPrimary,function(i,j){"PlanMember"===$scope.paymentsPrimary[i].accountUpdateType&&(count+=parseInt($scope.paymentsPrimary[i].noOfAccounts))}):"Admins"===type&&"Primary"===plan&&jQuery.each($scope.paymentsPrimary,function(i,j){"PlanAdmin"===$scope.paymentsPrimary[i].accountUpdateType&&(count+=parseInt($scope.paymentsPrimary[i].noOfAccounts))}),count},$scope.getgrandTotal=function(type,plan){var count=0;return"Members"===type&&"Primary"===plan?jQuery.each($scope.paymentsPrimary,function(i,j){"PlanMember"===$scope.paymentsPrimary[i].accountUpdateType&&($scope.paymentsPrimary[i].overridePrice>0?count+=$scope.paymentsPrimary[i].overridePrice:count+=$scope.paymentsPrimary[i].unitPrice*$scope.paymentsPrimary[i].noOfAccounts)}):"Admins"===type&&"Primary"===plan&&jQuery.each($scope.paymentsPrimary,function(i,j){"PlanAdmin"===$scope.paymentsPrimary[i].accountUpdateType&&($scope.paymentsPrimary[i].overridePrice>0?count+=$scope.paymentsPrimary[i].overridePrice:count+=$scope.paymentsPrimary[i].unitPrice*$scope.paymentsPrimary[i].noOfAccounts)}),count},$scope.updateSerializeFlags=function(ih){var flag=void 0!==ih&&null!==ih&&ih;!1===$scope.isEditMode?($scope.serializeIgnore=!flag,$scope.candidateOverrideCheckbox=!1,$scope.signup.candidateTotalAmount=0,$scope.signup.candidateCount=null,$scope.signup.candidatePrice=null,$scope.signup.overrideCandidateAmount=null,$scope.bundleOverrideCheckbox=!1,$scope.signup.bundleTotalAmount=0,$scope.signup.bundleCount=null,$scope.signup.bundlePrice=null,$scope.signup.overrideBundleAmount=null,$scope.updateHiringAccountSummary("Bundle"),$scope.updateTotalPerMonth()):!1===$scope.existingHiringPlan&&!1===flag?$scope.serializeIgnore=!0:$scope.serializeIgnore=!1,"Bundles"===$scope.hiringPackageType?$scope.updatePackageFlag("Bundles"):$scope.updatePackageFlag("Candidates")},$scope.updatePackageFlag=function(type){$scope.signup.hiringPackageFlag=null,$scope.signup.hiringPackageFlag=type,"Bundles"===$scope.signup.hiringPackageFlag?($scope.candidateOverrideCheckbox=!1,$scope.signup.candidateTotalAmount=0,$scope.signup.candidateCount=null,$scope.signup.candidatePrice=null,$scope.signup.overrideCandidateAmount=null,$scope.updateHiringAccountSummary("Bundle"),$scope.updateTotalPerMonth()):"Candidates"===$scope.signup.hiringPackageFlag&&($scope.bundleOverrideCheckbox=!1,$scope.signup.bundleTotalAmount=0,$scope.signup.bundleCount=null,$scope.signup.bundlePrice=null,$scope.signup.overrideBundleAmount=null,$scope.updateHiringAccountSummary("Candidate"),$scope.updateTotalPerMonth())},$scope.updateMonthsDays=function(days){var totalMonths=Math.floor(days/30),totalDays=days%30;return totalMonths>=1?totalMonths+" Months "+totalDays+" Days":"0 Months "+totalDays+" Days"},$scope.getAccountInfo=function(isAddCredit){ajaxService.getAjaxResponse({url:"/sp/sysAdmin/alternateBilling/account/businessAccountDetails",data:$.param({accountId:sharedProperties.getParam("accountId"),isEditAccountRequest:!0})}).then(function(response){if("true"===response.Success)if(isAddCredit)$scope.account.account.creditBalance=response.account.creditBalance;else{$scope.signup={},$scope.account=response,$scope.creditInfo.cpt=response.account.paymentInstrument.paymentType,$scope.creditInfo.ccomment=response.account.paymentInstrument.comment;var primaryPlan=$scope.account.account.spPlans.Primary,hiringPlan=$scope.account.account.spPlans.IntelligentHiring,isHiringPlanAvailable=null!==hiringPlan&&void 0!==hiringPlan,billingMonths={monthly:1,quaterly:3,semiannually:6,anually:12};$scope.existingHiringPlan=!!isHiringPlanAvailable,$scope.existingBillingDays="Custom"!==$scope.account.account.accountInfo.planBillingCycleType?parseInt(billingMonths[$scope.account.account.accountInfo.planBillingCycleType.toLowerCase().replace("-","")]):parseInt($scope.account.account.accountInfo.planBillingCycle),$scope.remainingDays=$scope.account.account.remainingChargableDays,$scope.remainingDaysInCycle=$scope.updateMonthsDays($scope.account.account.remainingChargableDays),$scope.primaryPlansFeatures=primaryPlan.features,$scope.paymentsPrimary=$scope.account.account.spPlans.Primary.updateDetails,$scope.paymentsHiring=isHiringPlanAvailable?$scope.account.account.spPlans.IntelligentHiring.updateDetails:[],$scope.memberOverrideCheckbox=void 0!==primaryPlan.overrideMemberPrice&&null!==primaryPlan.overrideMemberPrice&&primaryPlan.overrideMemberPrice>0,$scope.adminOverrideCheckbox=void 0!==primaryPlan.overrideAdminPrice&&null!==primaryPlan.overrideAdminPrice&&primaryPlan.overrideAdminPrice>0,$scope.memberOverrideCheckboxEdit=void 0!==primaryPlan.overrideMemberPrice&&null!==primaryPlan.overrideMemberPrice&&primaryPlan.overrideMemberPrice>0,$scope.adminOverrideCheckboxEdit=void 0!==primaryPlan.overrideAdminPrice&&null!==primaryPlan.overrideAdminPrice&&primaryPlan.overrideAdminPrice>0,$scope.hiringAdminOverrideCheckbox=!!(isHiringPlanAvailable&&void 0!==hiringPlan.overrideAdminPrice&&null!==hiringPlan.overrideAdminPrice&&hiringPlan.overrideAdminPrice>0),$scope.hiringAdminOverrideCheckboxEdit=!!(isHiringPlanAvailable&&void 0!==hiringPlan.overrideAdminPrice&&null!==hiringPlan.overrideAdminPrice&&hiringPlan.overrideAdminPrice>0),$scope.hiringPackageType=isHiringPlanAvailable&&!0===hiringPlan.isBundle?"Bundles":"Candidates",$scope.bundleOverrideCheckbox=!!(isHiringPlanAvailable&&hiringPlan.isBundle&&void 0!==hiringPlan.overrideMemberPrice&&null!==hiringPlan.overrideMemberPrice&&hiringPlan.overrideMemberPrice>0),$scope.candidateOverrideCheckbox=!!(isHiringPlanAvailable&&!hiringPlan.isBundle&&void 0!==hiringPlan.overrideMemberPrice&&null!==hiringPlan.overrideMemberPrice&&hiringPlan.overrideMemberPrice>0),$scope.signup={planName:primaryPlan.planName,agreement:0===primaryPlan.aggrementTerm?null:primaryPlan.aggrementTerm.toString(),platformLicencePrice:primaryPlan.licensePrice,memberCount:primaryPlan.availalbeMemberSubscriptions,memberPrice:null!==primaryPlan.unitMemberPrice&&void 0!==primaryPlan.unitMemberPrice?primaryPlan.unitMemberPrice:0,overrideMemberAmount:null!==primaryPlan.overrideMemberPrice&&void 0!==primaryPlan.overrideMemberPrice?primaryPlan.overrideMemberPrice:0,adminCount:primaryPlan.availalbeAdminSubscriptions,adminPrice:null!==primaryPlan.unitAdminPrice&&void 0!==primaryPlan.unitAdminPrice?primaryPlan.unitAdminPrice:0,overrideAdminAmount:null!==primaryPlan.overrideAdminPrice&&void 0!==primaryPlan.overrideAdminPrice?primaryPlan.overrideAdminPrice:0,intellgentHiring:isHiringPlanAvailable,spMatchCheck:!(!isHiringPlanAvailable||"SPMatch"!==hiringPlan.features[0]),hiringLicencePrice:isHiringPlanAvailable?hiringPlan.licensePrice:null,hiringAgreement:isHiringPlanAvailable?0===hiringPlan.aggrementTerm?null:hiringPlan.aggrementTerm.toString():null,hiringAdminCount:isHiringPlanAvailable&&hiringPlan.availalbeAdminSubscriptions?hiringPlan.availalbeAdminSubscriptions:null,hiringAdminPrice:isHiringPlanAvailable&&null!==hiringPlan.unitAdminPrice&&void 0!==hiringPlan.unitAdminPrice?hiringPlan.unitAdminPrice:0,overrideHiringAdminAmount:isHiringPlanAvailable&&null!==hiringPlan.overrideAdminPrice&&void 0!==hiringPlan.overrideAdminPrice?hiringPlan.overrideAdminPrice:0,bundleCount:isHiringPlanAvailable&&"Bundles"===$scope.hiringPackageType?hiringPlan.availalbeMemberSubscriptions/$scope.hiringBundle:0,bundlePrice:isHiringPlanAvailable&&"Bundles"===$scope.hiringPackageType&&null!==hiringPlan.unitMemberPrice&&void 0!==hiringPlan.unitMemberPrice?hiringPlan.unitMemberPrice*$scope.hiringBundle:0,overrideBundleAmount:isHiringPlanAvailable&&"Bundles"===$scope.hiringPackageType&&null!==hiringPlan.overrideMemberPrice&&void 0!==hiringPlan.overrideMemberPrice?hiringPlan.overrideMemberPrice:0,candidateCount:isHiringPlanAvailable&&"Bundles"!==$scope.hiringPackageType?hiringPlan.availalbeMemberSubscriptions:null,candidatePrice:isHiringPlanAvailable&&"Bundles"!==$scope.hiringPackageType&&null!==hiringPlan.unitMemberPrice&&void 0!==hiringPlan.unitMemberPrice?hiringPlan.unitMemberPrice:0,overrideCandidateAmount:isHiringPlanAvailable&&"Bundles"!==$scope.hiringPackageType&&null!==hiringPlan.overrideMemberPrice&&void 0!==hiringPlan.overrideMemberPrice?hiringPlan.overrideMemberPrice:0,cpt:$scope.account.account.paymentType,billingCycle:$scope.account.account.accountInfo.planBillingCycleType,camount:$scope.account.account.accountInfo.renewalTotal,customMonths:-1===jQuery.inArray($scope.account.account.planBillingCycleType)?$scope.account.account.accountInfo.planBillingCycle:null},$scope.editSignup=angular.copy($scope.signup),!0===$scope.signup.intellgentHiring&&($scope.featuresSectionHiring=!0),primaryPlan.features.length&&($scope.featuresSectionPrimary=!0,$scope.selectedFeatures=[],$scope.selectedFeatures=angular.copy($scope.account.company.featureList),-1===$scope.selectedFeatures.indexOf("Prism")&&$scope.selectedFeatures.push("Prism"),-1===$scope.selectedFeatures.indexOf("Erti")&&$scope.selectedFeatures.push("Erti")),$timeout(function(){$scope.updateTotalPerMonth(),$scope.updateMemberAccountSummary("Member"),$scope.signup.adminCount>0&&$scope.updateMemberAccountSummary("Admin"),$scope.signup.intellgentHiring&&($scope.signup.hiringAdminCount>0&&$scope.updateHiringAccountSummary(),"Bundles"===$scope.hiringPackageType?($scope.updateHiringAccountSummary("Bundle"),$scope.updatePackageFlag("Bundles")):($scope.updateHiringAccountSummary("Candidate"),$scope.updatePackageFlag("Candidates"))),$scope.updateSerializeFlags(),$scope.signup.enhancedPasswordSecurity=$scope.account.company.enhancePasswordSecurity},100)}else{$scope.serverError=!0;for(var key in response.error)$scope.errorMessage=response.error[key]}})},$scope.getMembersModal=function(){$scope.isCompanySelect=!0,$scope.isMemberSelect=!1,$scope.inputRequired=!1,$scope.disableEmail=!1,ajaxService.getAjaxResponse({url:"/sp/sysAdmin/hk/getCompanyList",method:"GET"}).then(function(response){"true"===response.Success?($scope.companyList=response.companies,ngDialog.open({template:"/sp/resources/html/sysAdmin/alternateBilling/memberModal.html",scope:$scope})):null!=response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response))})},$scope.getCompanyMembers=function(id,name,city,country){$scope.isCompanySelect=!1,$scope.storeCompany={name:name,city:city,country:country},ajaxService.getAjaxResponse({url:"/sp/sysAdmin/alternateBilling/allCompanyMembers",data:$.param({companyId:id})}).then(function(response){"true"===response.Success?($scope.isMemberSelect=!0,$scope.emailMemberList=response.memberList):null!=response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response))})},$scope.searchTag=[],$scope.inputRequired=!1,$scope.loadTags=function(query){var deferred=$q.defer(),result=$scope.emailMemberList.filter(function(e){return-1!==e.name.toLowerCase().indexOf(query.toLowerCase())||-1!==e.email.toLowerCase().indexOf(query.toLowerCase())});return deferred.resolve(result),deferred.promise},$scope.tagAdded=function(tag){$scope.searchTag.push(tag.email),-1!==tag.roles.indexOf("AccountAdministrator")?$scope.inputRequired=!0:($scope.inputRequired=!1,$scope.selectedUser=tag)},$scope.tagRemoved=function(tag){$scope.selectedUser=null,$scope.inputRequired=!1,$scope.searchTag.splice($scope.searchTag.indexOf(tag.email),1)},$scope.userMemberDetails=function(userObj){$scope.signup={firstName:userObj.firstName,lastName:userObj.lastName,title:userObj.title,email:userObj.email,confirmEmail:userObj.email,existingMember:!0,industry:"default",country:"default"},$scope.disableEmail=!0,ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("billing.membersAdd"))},$scope.pwdRules=function(){ngDialog.open({template:"/sp/resources/html/sysAdmin/alternateBilling/password-rules.html"}),$rootScope.$on("ngDialog.opened",function(e,$dialog){$timeout(function(){$(".contentArea").scrollTop(0)},100)})},function(){$scope.updatePackageFlag("Bundles"),$scope.isEditMode=null!==sharedProperties.getParam("accountId")&&void 0!==sharedProperties.getParam("accountId"),$scope.isEditMode&&($scope.getAccountInfo(),$scope.accountId=sharedProperties.getParam("accountId"))}(),null===$localStorage.get("countriesFullList")||void 0===$localStorage.get("countriesFullList")||""===$localStorage.get("countriesFullList")?(sharedProperties.countriesList(),$timeout(function(){$scope.countries=$localStorage.get("countriesFullList").countries},300)):$scope.countries=$localStorage.get("countriesFullList").countries}angular.module("spApp").controller("signUpController",signUpController),signUpController.$inject=["$scope","$http","$element","$attrs","ajaxService","$location","$state","$localStorage","sharedProperties","$timeout","ngDialog","$q","$rootScope"];