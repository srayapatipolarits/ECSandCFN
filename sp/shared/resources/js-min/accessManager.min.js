function accessManager($scope,ajaxService,ngDialog,$localStorage,sharedProperties,$filter,$rootScope,$timeout,$q){function cancelUserSelection(){1===self.companiesList.length?ngDialog.close():(self.isCompanySelect=!0,self.isMemberSelect=!1)}function changePasswordModal(){ngDialog.open({template:"/sp/resources/html/sysAdmin/accessManager/change-master-password.html",scope:$scope}),$rootScope.$on("ngDialog.opened",function(e,$dialog){$timeout(function(){self.resetPwdError=!1,self.resetPwdForm.validationErrors=!1,jQuery("body").find('form[name="ctrl.resetPwdForm"]')[0].reset()},100)})}function changeMasterPassword(fData){self.resetPwdForm.validationErrors=!1,self.resetPwdError=!1,self.resetPwdForm.$valid?ajaxService.getAjaxResponse({url:self.serviceApis.changeMasterPassword,data:$.param({oldPassword:fData.oldPassword,newPassword:fData.newPassword})}).then(function(response){if("true"===response.Success)self.resetPwdError=!1,jQuery("body").find('form[name="ctrl.resetPwdForm"]')[0].reset(),ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("growl.passwordChange"));else{self.resetPwdForm.validationErrors=!1,self.resetPwdError=!0;for(var key in response.error)self.resetPwdErrorMsg=response.error[key]}}):(self.resetPwdError=!1,self.resetPwdForm.validationErrors=!0)}function getUserAccess(){self.userInfo=JSON.parse(window.sessionStorage.getItem("userInfo")),null!==self.userInfo?ajaxService.getAjaxResponse({url:self.serviceApis.getUserPermissions,data:$.param({email:self.userInfo.email})}).then(function(response){if("true"===response.Success){self.responseAvailable=!0,self.accessRoles=response.rolesGroups;for(var i=0;i<self.accessRoles.length;i++)for(var j=0;j<self.accessRoles[i].roles.length;j++)self.accessRoles[i].roles[j].exist&&self.userRoles.push(self.accessRoles[i].roles[j].roleType)}else null!==response.error&&sharedProperties.ajaxError(response.error)}):window.location.href="/sp/sysAdmin/accessManager"}function toggleRoleSelection(roleName){var index=self.userRoles.indexOf(roleName);index>-1?self.userRoles.splice(index,1):self.userRoles.push(roleName)}function removeAllAccessModal(userEmail){self.userInfo.email=userEmail,self.userRoles=[],ngDialog.open({template:"/sp/resources/html/sysAdmin/accessManager/remove-access-modal.html",scope:$scope})}function updateUserAccess(type){if(!self.userRoles.length&&"form"===type)return void(self.accessFormError=!0);self.accessFormError=!1;var _params;_params={email:self.userInfo.email,roles:self.userRoles.toString()},ajaxService.getAjaxResponse({url:self.serviceApis.updateUserAccess,data:$.param(_params)}).then(function(response){"true"===response.Success?(ngDialog.close(),sharedProperties.growlMessage($rootScope.pullInterNationalization("growl.userAccessUpdated")),$timeout(function(){window.location.href="/sp/sysAdmin/accessManager"},1e3)):null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))})}function getAllUsersWithPermissions(){ajaxService.getAjaxResponse({url:self.serviceApis.getAllUsersWithPermissions}).then(function(response){"true"===response.Success?(self.responseAvailable=!0,self.masterUserPermissionList=response.sysUserList,self.returnMemberList(),self.userPermissionList=angular.copy(self.masterUserPermissionList)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getCompanyMembers(id,name,city,country){self.isCompanySelect=!1,self.storeCompany={name:name,city:city,country:country},ajaxService.getAjaxResponse({url:self.serviceApis.getCompanyMembers,data:$.param({companyId:id})}).then(function(response){"true"===response.Success?(self.isMemberSelect=!0,self.emailMemberList=response.memberList):null!=response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response.error))})}function redirectToAccessPage(userObj){self.disableEmail=!0,self.userInfo={firstName:userObj.firstName,lastName:userObj.lastName,title:userObj.title,email:userObj.email,smallProfileImage:userObj.smallProfileImage,userInitials:userObj.userInitials},window.sessionStorage.setItem("userInfo",JSON.stringify(self.userInfo)),window.location.href="/sp/sysAdmin/updateAccess"}function selectCompany(){self.isCompanySelect=!0,self.isMemberSelect=!1,self.inputRequired=!1,self.disableEmail=!1,self.companiesList.length?openCompanyModal():getAllCompanies()}function openCompanyModal(){var dialog=ngDialog.open({template:self.serviceApis.selectCompanyAndUserModal,scope:$scope});1===self.companiesList.length&&getCompanyMembers(self.companiesList[0].id,self.companiesList[0].name,self.companiesList[0].address.city,self.companiesList[0].address.country),dialog.closePromise.then(function(data){self.pageVariables.companySearchText="",self.selectedUser=null})}function getAllCompanies(){ajaxService.getAjaxResponse({url:self.serviceApis.surepeopleCompanies,method:"GET"}).then(function(response){"true"===response.Success?(self.companiesList=response.companies,self.companiesList.length&&openCompanyModal()):null!=response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response.error))})}function returnMemberList(pageSize){if(!self.masterUserPermissionList.length)return!0;self.order(self.pageVariables.lastPredicate,self.pageVariables.lastReverse)}function order(predicate,reverse){self.pageVariables.lastPredicate=predicate,self.pageVariables.lastReverse=reverse,self.userPermissionList=$filter("orderBy")(self.userPermissionList,predicate,reverse)}function searchTextFilter(search){self.pageVariables.textSearching=search,self.returnMemberList()}function active(event,setting){self.pageVariables.lastPredicate=setting.predicate,self.pageVariables.lastReverse=setting.reverse,sharedProperties.toggleFilterClick(event,self.pageVariables.lastPredicate),self.order(self.pageVariables.lastPredicate,self.pageVariables.lastReverse)}function resetfilter(){self.pageVariables=angular.copy(self.originalpageVariables),self.returnMemberList();var curr=$(".memberHolder");curr.find(".heading h4").removeClass("reverseon").removeClass("on"),curr.find(".heading h4:eq(0)").addClass("on")}var self=this;self.serviceApis={getAllUsersWithPermissions:"/sp/sysAdmin/accessManager/getUserPermissionList",getCompaniesWithCompetencyFeature:"/sp/sysAdmin/competency/getCompanies",selectCompanyAndUserModal:"/sp/sysAdmin/accessManager/selectCompanyAndUser",getUserPermissions:"/sp/sysAdmin/accessManager/getSysPermissions",updateUserAccess:"/sp/sysAdmin/accessManager/savePermission",changeMasterPassword:"/sp/sysAdmin/changeSuperPassword",surepeopleCompanies:"/sp/sysAdmin/hk/getSurePeopleCompanies",getCompanyMembers:"/sp/sysAdmin/alternateBilling/allCompanyMembers"},self.masterUserPermissionList=[],self.userPermissionList=[],self.companiesList=[],self.accessRoles=[],self.pageVariables={searchText:"",disabledInfinite:!1,lastPredicate:"name",lastReverse:!1,companySearchText:""},self.responseAvailable=!1,self.responseAvailableForModal=!1,self.isCompanySelect=!0,self.isMemberSelect=!1,self.inputRequired=!1,self.disableEmail=!1,self.selectedUser="",self.userInfo={},self.userRoles=[],self.resetPwdError=!1,self.resetPwdForm={},self.resetPwdForm.validationErrors=!1,self.resetPwd={},self.accessFormError=!1,self.originalpageVariables=angular.copy(self.pageVariables),self.getAllUsersWithPermissions=getAllUsersWithPermissions,self.getAllCompanies=getAllCompanies,self.getCompanyMembers=getCompanyMembers,self.searchTextFilter=searchTextFilter,self.returnMemberList=returnMemberList,self.active=active,self.order=order,self.selectCompany=selectCompany,self.resetfilter=resetfilter,self.redirectToAccessPage=redirectToAccessPage,self.getUserAccess=getUserAccess,self.updateUserAccess=updateUserAccess,self.toggleRoleSelection=toggleRoleSelection,self.removeAllAccessModal=removeAllAccessModal,self.changePasswordModal=changePasswordModal,self.changeMasterPassword=changeMasterPassword,self.cancelUserSelection=cancelUserSelection,self.searchTag=[],self.inputRequired=!1,self.loadTags=function(query){var deferred=$q.defer(),result=self.emailMemberList.filter(function(e){return-1!==e.name.toLowerCase().indexOf(query.toLowerCase())||-1!==e.email.toLowerCase().indexOf(query.toLowerCase())});return deferred.resolve(result),deferred.promise},self.tagAdded=function(tag){self.emailMemberList.filter(function(obj){obj.email===tag.email&&(self.searchTag.push(tag.email),self.inputRequired=!1,self.selectedUser=tag)})},self.tagRemoved=function(tag){self.selectedUser=null,self.inputRequired=!1,self.searchTag.splice(self.searchTag.indexOf(tag.email),1)}}angular.module("spApp").controller("accessManager",accessManager),accessManager.$inject=["$scope","ajaxService","ngDialog","$localStorage","sharedProperties","$filter","$rootScope","$timeout","$q"];