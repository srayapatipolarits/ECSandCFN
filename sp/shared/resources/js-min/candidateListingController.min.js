function candidateListingController($scope,$q,$element,$attrs,ajaxService,$location,$http,$state,$filter,ngDialog,sharedProperties,$timeout,$rootScope,$localStorage){$scope.memberList=[],$scope.masterMemberList=[],$scope.backupMasterMemberList=[],$scope.showfilter=!1,$scope.pageSize=10,$scope.intialPageSize=10,$scope.searchTag=[],$scope.hiringRoles=[],$scope.alldisplay=!1,$scope.filter={},$scope.tags=[],$scope.userEmail={email:[]},$scope.checkBox=[],$scope.allMembersEmailId=[],$scope.statusInclude=[],$scope.setEditMode=!1,$scope.userStatus=[],$scope.groupModule=[],$scope.masterGroupModule=[],$scope.textSearching="",$scope.mainGroupInfoList=[],$scope.checkedAll=!1,$scope.deleteUser=!1,$scope.deleteUserError=!1,$scope.updateGroup=!1,$scope.updateGroupError=!1,$scope.updateError="",$scope.EditGroupEmail="",$scope.archiveDialog={},$scope.archiveDialog.addHiring=!1,$scope.showArchive=!1,$scope.load=!0,$scope.showIntro=!1,$scope.member={},$scope.dataWithFlags=[],$scope.memCountCheck=!1,$scope.newOrderFlag=0,$scope.addNewMember={},$scope.addNewMember.submitted=!1;var storedProfile=$localStorage.get("loggegdInProfile"),userRoles=storedProfile.member.roles.sort();$scope.isAccountAdmin=0===jQuery.inArray("AccountAdministrator",userRoles),$scope.isAdmin=0===jQuery.inArray("Administrator",userRoles),$localStorage.remove("showProfileTab"),$scope.formatDate=function(d){if(null!==d&&"undefined"!=typeof d){var splitDate=d.split("-"),monthData={"01":"Jan","02":"Feb","03":"Mar","04":"Apr","05":"May","06":"Jun","07":"Jul","08":"Aug","09":"Sep",10:"Oct",11:"Nov",12:"Dec"},formattedDate=monthData[splitDate[1].toString()]+" "+parseInt(splitDate[2])+", "+parseInt(splitDate[0]);return formattedDate}},$scope.formatName=function(n){if(null!==n||"undefined"!==n){var slpitName=n.split(", "),formatName=slpitName[1]+" "+slpitName[0];return formatName}},$scope.getMembersData=function(){var growlNotification=$localStorage.get("gNotify");null!==growlNotification&&"undefined"!=typeof growlNotification&&("AddSingle"===growlNotification&&$.growl({icon:"glyphicon glyphicon-ok",title:"<strong> Candidate</strong>",message:" added successfully"}),"AddHire"===growlNotification&&$.growl({icon:"glyphicon glyphicon-ok",title:"<strong> Member</strong>",message:" added successfully"}),"import"===growlNotification&&$.growl({icon:"glyphicon glyphicon-ok",title:"<strong> Candidate(s)</strong>",message:" imported successfully"}),"moved"===growlNotification&&$.growl({icon:"glyphicon glyphicon-ok",title:"<strong> Candidate</strong>",message:" added to list successfully"}),"deleted"===growlNotification&&$.growl({icon:"glyphicon glyphicon-ok",message:"Candidate deleted successfully"}),"profileError"===growlNotification&&$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:$localStorage.get("profileError")}),setTimeout(function(){$localStorage.remove("gNotify"),$localStorage.remove("profileError")},300));var options={url:"/sp/hiring/getAllCandidates"};ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){$scope.getArchiveCandidateList(),$localStorage.remove("isCandidateArchived","archiveCandidateId","candidateEmail","candidateID");var btnFlags,counter=0;$scope.backupMasterMemberList=response.hiring.length?response.hiring:[],$scope.newList=[],$scope.backupMasterMemberList.length>0?$scope.showIntro=!1:$scope.showIntro=!0,$.each($scope.backupMasterMemberList,function(i){"VALID"===$scope.backupMasterMemberList[i].userStatus?null===$scope.backupMasterMemberList[i].spUserId?(btnFlags=$.extend({},$scope.backupMasterMemberList[i],{btnFlags:{sendReminder:!1,archiveBtn:!0,SendInvite:!1,viewProfile:!0,viewCompare:!0,viewAdvisor:!0,requestAccess:!1}}),$scope.newList.push(btnFlags)):$scope.backupMasterMemberList[i].profileSettings.hiringAccessAllowed===!0?(btnFlags=$.extend({},$scope.backupMasterMemberList[i],{btnFlags:{sendReminder:!1,archiveBtn:!0,SendInvite:!1,viewProfile:!0,viewCompare:!0,viewAdvisor:!0,requestAccess:!1}}),$scope.newList.push(btnFlags)):(btnFlags=$.extend({},$scope.backupMasterMemberList[i],{btnFlags:{sendReminder:!1,archiveBtn:!0,SendInvite:!1,viewProfile:!1,viewCompare:!1,viewAdvisor:!1,requestAccess:!0}}),$scope.newList.push(btnFlags)):"INVITATION_SENT"===$scope.backupMasterMemberList[i].userStatus||"ASSESSMENT_PROGRESS"===$scope.backupMasterMemberList[i].userStatus||"ASSESSMENT_PENDING"===$scope.backupMasterMemberList[i].userStatus||"ADD_REFERENCES"===$scope.backupMasterMemberList[i].userStatus||"PROFILE_INCOMPLETE"===$scope.backupMasterMemberList[i].userStatus?(btnFlags=$.extend({},$scope.backupMasterMemberList[i],{btnFlags:{sendReminder:!0,archiveBtn:!1,SendInvite:!1,viewProfile:!1,viewCompare:!1,viewAdvisor:!1,requestAccess:!1}}),$scope.newList.push(btnFlags)):"INVITATION_NOT_SENT"!==$scope.backupMasterMemberList[i].userStatus&&"INVITATION_EXPIRED"!==$scope.backupMasterMemberList[i].userStatus||(btnFlags=$.extend({},$scope.backupMasterMemberList[i],{btnFlags:{sendReminder:!1,archiveBtn:!1,SendInvite:!0,viewProfile:!1,viewCompare:!1,viewAdvisor:!1,requestAccess:!1}}),$scope.newList.push(btnFlags)),counter++}),counter===$scope.backupMasterMemberList.length&&($scope.masterMemberList=$scope.newList,$scope.returnMemberList($scope.pageSize),$scope.tagListArray=[],$scope.mokroles=[],$scope.userRoles=[],angular.forEach($scope.backupMasterMemberList,function(val,index){$scope.allMembersEmailId.push(val.email),null!=val.tagList&&($scope.tagListArray=val.tagList.concat($scope.tagListArray).unique()),null!=val.userStatusFormatted&&$scope.mokroles.push(val.userStatusFormatted),null!==val.hiringRoles&&($scope.userRoles=val.hiringRoles.concat($scope.userRoles).unique())}),$scope.tagListArray=$scope.autoCompleteType($scope.tagListArray),$scope.userStatus=$scope.mokroles.unique().sort(),$scope.hiringRoles=$scope.userRoles.unique(),$scope.listLoaded=!0)}})},$scope.intersection=function(a,b){var result=[],ai=0,bi=0;for(a.sort(),b.sort();a.length>ai&&b.length>bi;)a[ai]<b[bi]?ai++:a[ai]>b[bi]?bi++:(result.push(a[ai]),ai++,bi++);return result},$scope.enableAdvanceSection=function(event){$(event.currentTarget).closest(".complete-profile").find(".editable-section").show()},$scope.autoCompleteType=function(arr){for(var customarray=[],i=0;i<arr.length;i++)customarray.push({text:arr[i]});return customarray},$scope.order=function(predicate,reverse){$scope.lastPredicate=predicate,$scope.lastReverse=reverse,$scope.memberList=$filter("orderBy")($scope.memberList,predicate,reverse)},$scope.loadTags=function(query){var deferred=$q.defer();return deferred.resolve($scope.getLoadSuggestion(query)),deferred.promise},$scope.getLoadSuggestion=function(query){for(var copyArray=[],i=0;i<$scope.tagListArray.length;i++)angular.lowercase($scope.tagListArray[i].text).indexOf(angular.lowercase(query))>-1&&copyArray.push($scope.tagListArray[i]);return copyArray.slice(0,5)},$scope.tagAdded=function(tag){$scope.searchTag.push(tag.text),$scope.refineSearch($scope.searchTag)},$scope.tagRemoved=function(tag){$scope.searchTag.splice($scope.searchTag.indexOf(tag.text),1),$scope.refineSearch($scope.searchTag)},$scope.refineSearch=function(list){$scope.newArr=[],angular.forEach($scope.masterMemberList,function(val,key){null!=val.tagList&&$scope.intersection(val.tagList,list).length===list.length&&$scope.newArr.push(val)}),$scope.checkboxFilter()},$scope.includeCheck=function(status){var i=$.inArray(status,$scope.statusInclude);i>-1?$scope.statusInclude.splice(i,1):$scope.statusInclude.push(status),$scope.checkboxFilter()},$scope.checkboxFilter=function(status){$scope.statusInclude.length>0&&($scope.checkBox=[],angular.forEach($scope.masterMemberList,function(val,index){for(var i=0;i<$scope.statusInclude.length;i++)for(var j=0;j<val.roles[i].length;j++)val.roles[j]===$scope.statusInclude[i]&&$scope.checkBox.push(val)})),$scope.returnMemberList($scope.pageSize)},$scope.searchTextFilter=function(search){$scope.textSearching=search,$scope.returnMemberList($scope.pageSize)},$scope.enableCancel=function(search){return"undefined"!=typeof search&&search.length>1},$scope.clearSearch=function(){$scope.textSearching.length&&($scope.textSearching="",$scope.searchText="",$scope.returnMemberList($scope.pageSize))},$scope.active=function(event){var currentElem=$(event.currentTarget);currentElem.find("h4").hasClass("on")?currentElem.find("h4").hasClass("reverseon")?currentElem.find("h4").removeClass("reverseon"):currentElem.find("h4").addClass("reverseon"):(currentElem.parent().find(".tog h4").removeClass("on"),currentElem.find("h4").addClass("on"))},$scope.returnMemberList=function(pageSize){if($scope.searchTag.length&&!$scope.statusInclude.length&&($scope.memberList=angular.copy($scope.newArr)),$scope.searchTag.length&&$scope.statusInclude.length){$scope.combineArray=[];for(var i=0;i<$scope.newArr.length;i++)for(var j=0;j<$scope.checkBox.length;j++)$scope.newArr[i].email===$scope.checkBox[j].email&&$scope.combineArray.push($scope.newArr[i]);$scope.memberList=angular.copy($scope.combineArray)}!$scope.searchTag.length&&$scope.statusInclude.length&&($scope.memberList=angular.copy($scope.checkBox)),$scope.searchTag.length||$scope.statusInclude.length||($scope.memberList=angular.copy($scope.masterMemberList)),$scope.memberList=sharedProperties.searchModule($scope.textSearching,$scope.memberList,2),$scope.pageSize=pageSize,pageSize>=$scope.masterMemberList.length&&($scope.disabledInfinite=!0,$scope.pageSize=$scope.masterMemberList.length),$scope.load&&($scope.lastPredicate="name",$scope.lastReverse=!1,$scope.loadBtnCLicked=!1,$scope.load=!1),$scope.loadBtnCLicked&&($scope.loadBtnCLicked=!1),$scope.order($scope.lastPredicate,$scope.lastReverse),$scope.memberList=$scope.memberList},$scope.checkAll=function(){$scope.checkedAll=!$scope.checkedAll,this.negative?$scope.userEmail.email=$scope.masterMemberList.map(function(item){return{email:item.email,name:item.name}}):$scope.userEmail.email=[]},$scope.checkUncheck=function(){$scope.alltoggle=!1,$scope.checkedAll&&($scope.negative=!$scope.negative,$scope.checkedAll=!$scope.checkedAll)},$scope.resetfilter=function(allmembers){$scope.pageSize=$scope.intialPageSize,$scope.newArr=[],$scope.searchTag=[],$scope.tags=[],$scope.filter={},$scope.userEmail.email=[],$scope.statusInclude=[],$scope.adminc=!1,$scope.leadC=!1,$scope.textSearching="",$scope.searchText="","undefined"!=typeof this.selectedSearch&&(this.selectedSearch.userStatusFormatted="",this.selectedSearch.hiringRoles=""),$scope.memberList=angular.copy($scope.masterMemberList),"undefined"!=typeof allmembers&&($scope.pageSize=$scope.masterMemberList.length),$scope.checkUncheck(),angular.element($(".tags").find("input")).scope().newTag.text="",$scope.load=!0,$scope.disabledInfinite=!1,$rootScope.$broadcast("$scrollStart"),$scope.returnMemberList($scope.pageSize);var curr=$(".memberHolder");curr.find(".heading h4").removeClass("reverseon").removeClass("on"),curr.find(".heading h4:eq(0)").addClass("on")},$scope.confirmDelete=function(event){var email=$(event.target).closest(".complete-profile").find(".email").html(),options=(angular.element(event.currentTarget),{url:"/sp/hiring/deleteCandidate",data:$.param({candidateEmail:email})});ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?($scope.getMembersData(),$scope.userEmail.email=[],$scope.alltoggle=!1,$scope.checkedAll&&($scope.negative=!$scope.negative),$.growl({icon:"glyphicon glyphicon-ok",message:"Candidate(s) deleted successfully"})):$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:"Server Error"})})},$scope.certainDelete=function(){ngDialog.open({template:"/sp/resources/html/tools/hiring/deleteConfirmation.html",scope:$scope})},$scope.deleteUsers=function(emails){var emailList=[];jQuery.each(emails,function(i,j){emailList.push(emails[i].email)});var options={url:"/sp/hiring/deleteCandidate",data:$.param({candidateEmail:emailList.toString()})};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success&&($scope.getMembersData(),$scope.userEmail.email=[],$scope.alltoggle=!1,$scope.checkedAll&&($scope.negative=!$scope.negative),ngDialog.close("ngdialog1"),$.growl({icon:"glyphicon glyphicon-ok",message:"Candidate(s) deleted successfully"}))})},$scope.addClassActive=function(){$scope.dropUp=!$scope.dropUp},$scope.notificationEmail=function(emails){emails.length&&(sharedProperties.setEmail(emails),sharedProperties.setObject($scope.memberList),ngDialog.open({template:"return-visitor.html"}))},$scope.profileRoute=function(event){var groupname=$(event.currentTarget).data("routeparam");$localStorage.set("groupname",groupname),window.location.href="/sp/admin/group/#profile"},$scope.showFullList=function(){$scope.resetfilter("full")},$scope.editGroupSection=function(index){$scope.EditGroupEmail=this.memberList.email;for(var currentEmail=this.memberList.email,i=0;i<$scope.memberList.length;i++)currentEmail===$scope.memberList[i].email&&(index=i);$scope.setEditMode=!0,$scope.indexToChange=index,$scope.groupEditSection=angular.copy($scope.memberList[index]),$scope.groupSelectOption=[];for(var j=0;j<$scope.groupEditSection.groupAssociationList.length;j++)$scope.groupSelectOption.push($scope.groupEditSection.groupAssociationList[j].name);ngDialog.open({template:"/sp/admin/member/editGroup",scope:$scope})},$scope.enableLeadDialog=function(leadValue,index,groupName){for(var i=0;i<$scope.mainGroupInfoList.length;i++)if(groupName===$scope.mainGroupInfoList[i].name){if(null!==$scope.mainGroupInfoList[i].groupLead&&$scope.mainGroupInfoList[i].groupLead.email!==$scope.EditGroupEmail)return!1;$scope.groupEditSection.groupAssociationList[index].groupLead=!leadValue}},$scope.setStyle=function(lead){return $scope.viewMode(),lead===!0},$scope.isItEnabled=function(groupName,id){$scope.classActivate=[];for(var i=0;i<$scope.mainGroupInfoList.length;i++)groupName===$scope.mainGroupInfoList[i].name&&null!==$scope.mainGroupInfoList[i].groupLead&&$scope.mainGroupInfoList[i].groupLead.email!==$scope.EditGroupEmail&&($scope.classActivate.push("#mode_"+id),$scope.classActivate.push("#modeprop_"+id))},$scope.viewMode=function(){if($scope.classActivate.length)for(var i=0;i<$scope.classActivate.length;i++)$($scope.classActivate[i]).addClass("disabled")},$scope.addGroupToModule=function(groupName,lead){return $scope.selectedGroup=groupName,"default"===groupName?!1:(""===$scope.groupEditSection.groupAssociationList[0].name&&$scope.groupEditSection.groupAssociationList.splice(0,1),$scope.groupEditSection.groupAssociationList.push({name:groupName,groupLead:!1}),void $scope.groupSelectOption.push(groupName))},$scope.addGroupMember=function(names){return""!==names},$scope.removeGroupDialog=function(event,groupName){for(var _this=event.target,current=($(_this).closest(".blockGroup").remove(),""),i=0;i<$scope.groupEditSection.groupAssociationList.length;i++)$scope.groupEditSection.groupAssociationList[i].name===groupName.name&&($scope.groupEditSection.groupAssociationList.splice(i,1),current=i);$scope.groupSelectOption.splice(current,1)},$scope.saveGroupToModule=function(groupName){for(var newArr="",i=0;i<$scope.groupEditSection.groupAssociationList.length;i++)newArr=newArr.length?newArr+","+$scope.groupEditSection.groupAssociationList[i].name+":"+$scope.groupEditSection.groupAssociationList[i].groupLead:$scope.groupEditSection.groupAssociationList[i].name+":"+$scope.groupEditSection.groupAssociationList[i].groupLead;var options={url:"/sp/admin/group/memberGroupUpdate",data:$.param({groupAssociationList:newArr,memberEmail:$scope.groupEditSection.email})};ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){$scope.groupEditSection.groupAssociationList.length?$scope.memberList[$scope.indexToChange]=$scope.groupEditSection:($scope.groupEditSection.groupAssociationList.push({name:"",groupLead:!1}),$scope.memberList[$scope.indexToChange]=$scope.groupEditSection);for(var i=0;i<$scope.masterMemberList.length;i++)$scope.masterMemberList[i].email===$scope.memberList[$scope.indexToChange].email&&($scope.masterMemberList[i]=$scope.groupEditSection);ngDialog.close("ngdialog1"),ngDialog.open({template:"/sp/admin/member/confirmation"})}else ngDialog.close("ngdialog1"),ngDialog.open({template:"/sp/admin/member/errorGroup"})})},$scope.memberTakeAway=function(email,id,spProfile){$localStorage.set("candidateEmail",email).set("candidateID",id),spProfile===!0&&$localStorage.set("showProfileTab",!0),window.location.href="/sp/tools/hiring/profile?cemail="+email},$scope.candidateCompare=function(email,id){$localStorage.set("candidateEmail",email).set("candidateID",id),window.location.href="/sp/tools/hiring/compare"},$scope.candidateAdvisor=function(email,id){$localStorage.set("candidateEmail",email).set("candidateID",id),window.location.href="/sp/tools/hiring/advisor?c="+email},$scope.calltoAction=function(select){return""===select?!1:void(window.location.href=select)},$scope.archiveDialog=function(e,n,r){$scope.archiveCandidate={name:n,email:e,roles:r},ngDialog.open({template:"/sp/resources/html/tools/hiring/archive-candidate.html",scope:$scope})},$scope.archiveAllCandidate=function(cEmail,isHired,single){var emailList=[];single!==!0?jQuery.each(cEmail,function(i,j){emailList.push(cEmail[i].email)}):emailList=cEmail;var options={url:"/sp/hiring/archiveCandidate",data:$.param({candidateEmail:emailList.toString(),isHired:!1})};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success&&(ngDialog.close("ngdialog1"),$.growl({icon:"glyphicon glyphicon-ok",title:"<strong> Candidate(s)</strong>",message:" archived successfully"}),$scope.getMembersData(),$scope.negative=!$scope.negative,$scope.archiveDialog.addHiring=!1)})},$scope.archiveAllDialog=function(emails){emails.length>0&&($scope.archiveCandidateAll={emails:emails},ngDialog.open({template:"/sp/resources/html/tools/hiring/archive-candidate-list.html",scope:$scope}),$scope.userEmail.email=[],$scope.alltoggle=!1,$scope.checkedAll&&($scope.negative=!$scope.negative))},$scope.sendViewProfileRequest=function(e,n){$scope.profileRequest={email:e,name:n,heading:"Request Access"},ngDialog.open({template:"/sp/resources/html/tools/hiring/send-profile-invite.html",scope:$scope}),$scope.sendRequest=function(e){var options={url:"/sp/notifications/sendNotification",data:$.param({memberEmail:e,type:""}).replace(/%40/g,"@")};ajaxService.getAjaxResponse(options).then(function(response){"true"!==response.Success&&$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong> ",message:"Not able to send invite"})})}},$scope.getArchiveCandidateList=function(){var options={url:"/sp/hiring/getAllArchivedCandidates"};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success&&(response["hiring-archived"].length>0?$scope.showArchive=!0:$scope.showArchive=!1)})},$scope.sendReminder=function(e,n){$scope.profileRequest={email:e,name:n,heading:"Reminder"},ngDialog.open({template:"/sp/resources/html/tools/hiring/send-profile-invite.html",scope:$scope}),$scope.sendRequest=function(e){var options={url:"/sp/notifications/sendNotification",data:$.param({memberEmail:e,type:""}).replace(/%40/g,"@")};ajaxService.getAjaxResponse(options).then(function(response){"true"!==response.Success&&$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong> ",message:"Not able to send invite"})})}},$scope.hireCandidate=function(e,n,r,id){$scope.hireCandidateDetails={name:n,email:e,roles:r,cId:id},$scope.member={},$scope.member.firstName=$scope.hireCandidateDetails.name.split(" ")[0],$scope.member.lastName=$scope.hireCandidateDetails.name.split(" ")[1],$scope.isAdmin||$scope.isAccountAdmin?ajaxService.getAjaxResponse({url:"/sp/admin/member/availalbeMemberSubscriptions"}).then(function(response){"true"===response.Success&&($scope.memberAccountsCount=response.availalbeMemberSubscriptions,$scope.memberAccountsCount>0?($scope.getGroupList(),ngDialog.open({template:"/sp/resources/html/tools/hiring/hire-candidate.html",scope:$scope})):ngDialog.open({template:"/sp/resources/html/tools/hiring/hire-candidate-no-members.html",scope:$scope}))}):ngDialog.open({template:"/sp/resources/html/tools/hiring/hire-candidate-not-admin.html",scope:$scope}),$scope.hireCandidateArchive=function(){ajaxService.getAjaxResponse({url:"/sp/hiring/archiveCandidate",data:$.param({candidateEmail:$scope.hireCandidateDetails.email,isHired:!0})}).then(function(response){if("true"===response.Success)$scope.getMembersData(),ngDialog.close("ngdialog1"),$.growl({icon:"glyphicon glyphicon-ok",title:"<strong> Candidate</strong>",message:" status changed to 'Hired' and archived successfully"});else{for(var key in response.error)$scope.errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:$scope.errorMessage})}})},$scope.addMember=function(fData){this.addNewMember.submitted=!1;var _data=$.extend(fData,{candidateId:$scope.hireCandidateDetails.cId});this.addNewMember.$valid?ajaxService.getAjaxResponse({url:"/sp/hiring/archiveCandidate",data:$.param({candidateEmail:$scope.hireCandidateDetails.email,isHired:!0})}).then(function(response){if("true"===response.Success)ajaxService.getAjaxResponse({url:"/sp/admin/member/addSingle",data:$.param(_data).replace(/%2C/g,",")}).then(function(response){if("true"===response.Success)$scope.getMembersData(),ngDialog.close("ngdialog1"),$.growl({icon:"glyphicon glyphicon-ok",title:"<strong> Member</strong>",message:" added successfully"});else{ngDialog.close("ngdialog1");for(var key in response.error)$scope.errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:$scope.errorMessage})}});else{ngDialog.close("ngdialog1");for(var key in response.error)$scope.errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:$scope.errorMessage})}}):this.addNewMember.submitted=!0}},$scope.getGroupList=function(){$scope.groupDataSet=[],$scope.groupDataSetBackup=[],$scope.dataWithFlags=[],ajaxService.getAjaxResponse({url:"/sp/admin/group/all"}).then(function(response){if("true"===response.Success)$scope.groupDataSet=response.groupInfoList,$scope.groupDataSetBackup=response.groupInfoList,jQuery.each($scope.groupDataSet,function(i,j){$scope.dataWithFlags.push(jQuery.extend({},$scope.groupDataSet[i],{selectedFlag:!1,isGroupLead:!1}))}),$scope.flagCounter=$scope.dataWithFlags.length;else{$scope.serverError=!0;for(var key in response.error)$scope.errorMessage=response.error[key]}})},$scope.updateTagList=function(single,multiple){$scope.member.groupAssociationList=null,$scope.tagList=[],jQuery.each($scope.dataWithFlags,function(i,j){$scope.dataWithFlags[i].selectedFlag===!0&&multiple===!0?$scope.tagList.push($scope.dataWithFlags[i].name):$scope.dataWithFlags[i].selectedFlag===!0&&single===!0&&($scope.dataWithFlags[i].isGroupLead===!0?$scope.tagList.push($scope.dataWithFlags[i].name+":true"):$scope.tagList.push($scope.dataWithFlags[i].name+":false")),$scope.member.groupAssociationList=$scope.tagList.join()})},$scope.updateGroupLeadStatus=function(i,email,single,multiple,j){var _a=jQuery("body").find("a#gl_"+j);"undefined"!=typeof $scope.dataWithFlags[i]&&null===email&&($scope.dataWithFlags[i].isGroupLead===!0?($scope.dataWithFlags[i].isGroupLead=!1,_a.removeClass("on")):($scope.dataWithFlags[i].isGroupLead=!0,_a.addClass("on")),$scope.updateTagList(single,multiple))},$scope.changeGroup=function(flag,single,multiple){"default"!==flag&&("createGroupCall_custom"===flag?($scope.params={p1:single,p2:multiple},$scope.errornewEmptyGroup=!1,$scope.errornewGroup=!1,ngDialog.open({template:"/sp/admin/group/createGroup",scope:$scope}),$scope.member.gList="default"):($scope.dataWithFlags[flag].selectedFlag=!0,$scope.flagCounter-=1,$scope.updateTagList(single,multiple),$scope.member.gList="default",$scope.dataWithFlags[flag].newOrder=$scope.newOrderFlag++,$scope.dataWithFlags[flag].originalIndex=flag))},$scope.removeGroup=function(flag,single,multiple){"default"!==flag&&($scope.dataWithFlags[flag].selectedFlag=!1,$scope.dataWithFlags[flag].isGroupLead=!1,$scope.flagCounter+=1,$scope.updateTagList(single,multiple))},$scope.saveNewGroup=function(groupname,groupLeadEmailId){var $this=this;if($scope.errornewEmptyGroup=!1,$scope.errornewGroup=!1,""===groupname||"undefined"==typeof groupname)return $scope.errornewEmptyGroup=!0,!1;var obj={name:groupname},options={url:"/sp/admin/group/create",data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?($this.closeThisDialog(),$scope.dataWithFlags.push({name:groupname,groupLead:null,numOfMembers:0,memberSummaryList:null,selectedFlag:!0,originalIndex:$scope.dataWithFlags.length,newOrder:$scope.newOrderFlag}),$scope.flagCounter-=1,$scope.member.gList="default",$scope.newOrderFlag+=1,$scope.updateTagList($scope.params.p1,$scope.params.p2)):null!=response.error&&($scope.member.gList="default",$scope.errornewGroup=!0)})},$scope.closeGroup=function(){$scope.member.gList="default",this.closeThisDialog()}}function notification($scope,sharedProperties){$scope.name=[];var memberList=sharedProperties.getObject(),emails=sharedProperties.getEmail();$scope.emailId=emails,angular.forEach(memberList,function(val,index){for(var i=0;i<emails.length;i++)emails[i]===val.email&&$scope.name.push(val.name)})}angular.module("spApp").controller("candidateListingController",candidateListingController),angular.module("spApp").controller("notification",notification),candidateListingController.$inject=["$scope","$q","$element","$attrs","ajaxService","$location","$http","$state","$filter","ngDialog","sharedProperties","$timeout","$rootScope","$localStorage"],notification.$inject=["$scope","sharedProperties"];