function notesAndFeedbackController($scope,ajaxService,$localStorage,ngDialog,sharedProperties,filterFilter,$filter,$rootScope){function stateControl(list){var result=list.actionData.filter(function(e){return e.permissions.Completion&&!e.completed});return!!result.length}function checktype(index,category,id){self.noBlue=!1,"Blueprint"===category?(self.getBluePrintDetails(index,id),self.getBluePrintSetting(id)):(self.toggleFeedbackOverlay(index),self.noBlue=!0)}function getBluePrintSetting(id){ajaxService.getAjaxResponse({url:self.serviceApis.bluePrintSetting,data:$.param({feedbackId:id})}).then(function(response){if("true"===response.Success)self.dataMap=response.blueprintSettings.dataMap;else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})}function getBluePrintDetails(index,id){return self.blueprintReady=!1,self.cachedBluePrintId===id?(self.blueprintReady=!0,self.toggleFeedbackOverlay(index),!0):void ajaxService.getAjaxResponse({url:self.serviceApis.blueprintDetails,data:$.param({feedbackId:id})}).then(function(response){if("true"===response.Success)self.blueprint=response.blueprint,self.blueprintReady=!0,self.toggleFeedbackOverlay(index),self.cachedBluePrintId=id;else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})}function mouseEventHandler(eventType,index){self.editEnable||("enter"===eventType?(jQuery("#editIcon_"+index).fadeIn(),jQuery("#deleteIcon_"+index).fadeIn()):(jQuery("#editIcon_"+index).hide(),jQuery("#deleteIcon_"+index).hide()))}function editEnableToggle(index){self.updateFormSubmitted=!1,self.validationError=!1,self.editEnable===!1?(self.noteContentForUpdate=self.notesAndFeedbackInfo.notesFeedbackList[index].content,self.editEnable=!0,jQuery("#noteEditSection_"+index).fadeIn(),jQuery("#noteViewSection_"+index).hide()):(self.editEnable=!1,jQuery("#noteEditSection_"+index).hide(),jQuery("#noteViewSection_"+index).fadeIn(),self.notesAndFeedbackInfo.notesFeedbackList[index].content=self.noteContentForUpdate)}function toggleNotification(){self.winWidth>767?self.showNotification===!1?(self.showNotification=!0,sharedProperties.fireAnalyticsEvent("Notes & Feedback | View Feedback Requests","N/A")):self.showNotification=!1:toggleNotificationResponsive()}function toggleNotificationResponsive(){self.winHeight=$(window).height()+100+"px";ngDialog.open({template:"/sp/resources/html/goals/notesAndFeedback/notificationResponsive.html",className:"ngdialog-lnd-theme",scope:$scope})}function toggleFeedbackOverlay(index){self.winWidth>767?(self.showNotification=!1,self.showFeedbackOverlay===!1?(self.showFeedbackOverlay=!0,self.requestNotificationInfo=self.requestNotificationList[index]):(self.requestNotificationInfo.feedbackResponse="",self.showFeedbackOverlay=!1,self.requestFormSubmitted=!1)):(self.requestNotificationInfo=self.requestNotificationList[index],feedbackOverlayResponsive())}function feedbackOverlayResponsive(){self.winHeight=$(window).height()+100+"px";ngDialog.open({template:"/sp/resources/html/goals/notesAndFeedback/feedbackOverlayResponsive.html",className:"ngdialog-lnd-theme",scope:$scope})}function displayDetailedInfo(index){self.editEnable=!1,self.selectedIndex=index,self.notesAndFeedbackInfo=self.notesAndFeedbackList[index];var goalType=getGoalType(self.notesAndFeedbackInfo.goalCategory);"NOTE"===self.notesAndFeedbackInfo.type?sharedProperties.fireAnalyticsEvent("Notes & Feedback | View Notes on","Blueprint"===goalType?goalType:goalType+" - "+self.notesAndFeedbackInfo.name):sharedProperties.fireAnalyticsEvent("Notes & Feedback | View Feedback on","Blueprint"===goalType?goalType:goalType+" - "+self.notesAndFeedbackInfo.name),$("html,body").animate({scrollTop:$(".top-content").offset().top},500),self.winWidth<767&&displayDetailedResponsive()}function displayDetailedResponsive(){self.winHeight=$(window).height()+100+"px";ngDialog.open({template:"/sp/resources/html/goals/notesAndFeedback/notesFeedbackResponsive.html",className:"ngdialog-lnd-theme",scope:$scope})}function sendFeedbackRequest(options){self.requestFormSubmitted=!1,self.sendFeedbackForm.$valid?ajaxService.getAjaxResponse({url:self.serviceApis.sendFeedbackRequest,data:$.param({feedbackId:options.feedbackId,feedbackResponse:options.feedbackResponse})}).then(function(response){if("true"===response.Success){ngDialog.closeAll(),sharedProperties.spilceIndexWithBreak(self.requestNotificationList,"id",options.feedbackId),self.showFeedbackOverlay=!1,$.growl({icon:"glyphicon glyphicon-ok",message:$rootScope.pullInterNationalization("notesAndFeedback.ajaxSuccessMessage.sentFeedback")});var goalType=getGoalType(self.requestNotificationInfo.practiceAreaDTO.category);sharedProperties.fireAnalyticsEvent("Notes & Feedback | Reply to a feedback Request","Blueprint"===goalType?goalType:goalType+" - "+self.requestNotificationInfo.practiceAreaDTO.name),0===self.requestNotificationList.length&&(self.requestNotificationList=[])}else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}}):self.requestFormSubmitted=!0}function updateNoteModal(options){self.updateNote.call(this,options)}function updateNote(options){self.updateFormSubmitted=!1,self.validationError=!1,void 0!==options.desc&&""!==options.desc.trim()?ajaxService.getAjaxResponse({url:self.serviceApis.updateNote,data:$.param({noteId:options.noteId,desc:options.desc})}).then(function(response){if("true"===response.Success){self.editEnable=!1,$.growl({icon:"glyphicon glyphicon-ok",message:$rootScope.pullInterNationalization("notesAndFeedback.ajaxSuccessMessage.notesUpdated")});var goalType=getGoalType(self.notesAndFeedbackInfo.goalCategory);sharedProperties.fireAnalyticsEvent("Notes & Feedback | Update Note","Blueprint"===goalType?goalType:goalType+" - "+self.notesAndFeedbackInfo.name),getAllNotesAndFeedbackForUserForUpdate(options.noteId),"mobile"===options.type&&self.updateNoteDialog.close()}else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}}):(self.updateFormSubmitted=!0,self.validationError=!0)}function filterResults(val){"blueprint"===self.types.goalCategory&&(self.sortVal="date",self.predicate=""),""!==self.types.search?self.showClearSearchIcon=!0:self.showClearSearchIcon=!1;var tempList=angular.copy(self.masterList),resp=$filter("notesAndFeedbackFilter")(tempList,self.types,filterFilter,sharedProperties);resp=$filter("orderBy")(resp,self.predicate),self.notesAndFeedbackInfo={},self.notesAndFeedbackList=[],self.notesAndFeedbackList=resp,self.editEnable=!1,self.notesAndFeedbackInfo=resp[0],self.selectedIndex=0,tempList=[],resp=[]}function sortResults(){"name"===self.sortVal?self.predicate="name":self.predicate="";var tempList=angular.copy(self.masterList),resp=$filter("orderBy")(tempList,self.predicate);resp=$filter("notesAndFeedbackFilter")(resp,self.types,filterFilter,sharedProperties),self.notesAndFeedbackList=[],self.notesAndFeedbackList=resp,self.notesAndFeedbackInfo={},self.editEnable=!1,self.notesAndFeedbackInfo=resp[0],self.selectedIndex=0,tempList=[],resp=[]}function clearSearch(){""!==self.types.search&&(self.showClearSearchIcon=!1,self.types.search=""),self.filterResults("search")}function reset(){self.sortVal="date",self.types={note:!1,feedback:!1,pending:!1,declined:!1,search:"",goalCategory:"all"},self.showClearSearchIcon=!1,self.notesAndFeedbackList=[],self.notesAndFeedbackList=angular.copy(self.masterList),self.notesAndFeedbackInfo=self.notesAndFeedbackList[0],sortResults()}function openDeleteModal(deleteId,type){$scope.type=type,$scope.deleteId=deleteId,ngDialog.open({template:"/sp/resources/html/goals/notesAndFeedback/deleteModal.html",scope:$scope})}function openModalForUpdate(obj,index){self.updateFormSubmitted=!1,self.validationError=!1,self.noteContentForUpdate=obj.content,$scope.notesData=obj,$scope.indexedItem=index;var dialog=ngDialog.open({template:"/sp/resources/html/goals/notesAndFeedback/updateModal.html",scope:$scope});self.updateNoteDialog=dialog,dialog.closePromise.then(function(data){self.notesAndFeedbackInfo.notesFeedbackList[index].content=self.noteContentForUpdate})}var self=this;self.serviceApis={updateNote:"/sp/goals/note/update",deleteNote:"/sp/goals/note/delete",deleteFeedbackRequest:"/sp/goals/feedback/delete",getAllFeedbackRequestNotifications:"/sp/goals/feedback/received",sendFeedbackRequest:"/sp/goals/feedback/external/response",declineFeedbackStatus:"/sp/goals/feedback/updateStatus",getAllNotesAndFeedbackForUser:"/sp/goals/notesfeedback/all",deleteAll:"/sp/goals/notesFeedback/deleteAll",blueprintDetails:"/sp/goals/token/feedback/blueprint/details",bluePrintSetting:"/sp/blueprint/getSettings"},self.masterList=[],self.notesAndFeedbackList=[],self.requestNotificationList=[],self.requestNotificationInfo={},self.notesAndFeedbackInfo={},self.editEnable=!1,self.showNotification=!1,self.showFeedbackOverlay=!1,self.selectedIndex=0,self.notificationIndex=0,self.noteContentForUpdate="",self.showClearSearchIcon=!1,self.types={note:!1,feedback:!1,pending:!1,declined:!1,search:"",goalCategory:"all"},self.updateFormSubmitted=!1,self.requestFormSubmitted=!1,self.sortVal="date",self.predicate="",self.responseAvailable=!1,self.validationError=!1,self.blueprintReady=!1,self.noBlue=!1,self.cachedBluePrintId=-1,self.updateNote=updateNote,self.sendFeedbackRequest=sendFeedbackRequest,self.openDeleteModal=openDeleteModal,self.displayDetailedInfo=displayDetailedInfo,self.editEnableToggle=editEnableToggle,self.toggleNotification=toggleNotification,self.toggleFeedbackOverlay=toggleFeedbackOverlay,self.clearSearch=clearSearch,self.filterResults=filterResults,self.sortResults=sortResults,self.getParameter=getParameter,self.findById=findById,self.reset=reset,self.mouseEventHandler=mouseEventHandler,self.openModalForUpdate=openModalForUpdate,self.updateNoteModal=updateNoteModal,self.updateNoteDialog={},self.getBluePrintDetails=getBluePrintDetails,self.getBluePrintSetting=getBluePrintSetting,self.checktype=checktype,self.stateControl=stateControl,self.winWidth=$(window).width(),self.winHeight=$(window).height()+100+"px",self.showMobileFilter=!(self.winWidth<768);var getParameter=function(val){for(var query=window.location.search.substring(1),vars=query.split("&"),pair=[],i=0;i<vars.length;i++)return pair=vars[i].split("="),pair[0]===val?pair[1]:null},getGoalType=function(goalCategory){var goalType="";switch(goalCategory){case"GrowthAreas":goalType="ERT-i";break;case"ActionPlan":goalType="OrgPlans";break;case"Blueprint":goalType="Blueprint";break;case"Competency":goalType="Competency"}return goalType},findById=function(source,id){var itemFound=!1;if("dashboard"===source||"notesfeedback"===source)for(var zz=0;zz<self.notesAndFeedbackList.length;zz++)for(var k=0;k<self.notesAndFeedbackList[zz].notesFeedbackList.length&&(self.notesAndFeedbackList[zz].notesFeedbackList[k].id===id&&(itemFound=!0,self.notesAndFeedbackInfo=self.notesAndFeedbackList[zz],self.selectedIndex=zz),!itemFound);k++);else if("notifications"===source)for(var j=0;j<self.requestNotificationList.length&&(self.requestNotificationList[j].id===id&&(itemFound=!0,self.showFeedbackOverlay=!0,self.requestNotificationInfo=self.requestNotificationList[j]),!itemFound);j++);},getAllNotesAndFeedbackForUserForUpdate=function(id){ajaxService.getAjaxResponse({url:self.serviceApis.getAllNotesAndFeedbackForUser,method:"get"}).then(function(response){if("true"===response.Success)response.notesAndFeedbackList.length>0&&(self.masterList=response.notesAndFeedbackList,sortResults(),findById("notesfeedback",id));else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})},getAllNotesAndFeedbackForUser=function(index){ajaxService.getAjaxResponse({url:self.serviceApis.getAllNotesAndFeedbackForUser,method:"get"}).then(function(response){if("true"===response.Success){if(self.responseAvailable=!0,self.masterList=[],self.notesAndFeedbackList=[],response.notesAndFeedbackList.length>0){self.masterList=response.notesAndFeedbackList,self.notesAndFeedbackList=angular.copy(self.masterList),sortResults();var param=getParameter("id");null!==param?findById("dashboard",param):(self.notesAndFeedbackInfo=self.notesAndFeedbackList[index],self.selectedIndex=index)}}else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})};$scope.deleteInformation=function(deleteId,type){switch(type){case"NOTE":deleteNote.call(this,deleteId);break;case"FEEDBACK":deleteRequestFeedback.call(this,deleteId);break;case"DECLINE":declineFeedbackRequest.call(this,deleteId);break;case"ALL":deleteAll.call(this,deleteId)}};var deleteAll=function(id){var deleteNotes="NOTE"===self.notesAndFeedbackInfo.type,deleteFeedbacks="FEEDBACK"===self.notesAndFeedbackInfo.type;ajaxService.getAjaxResponse({url:self.serviceApis.deleteAll,data:$.param({goalId:id,deleteNote:deleteNotes,deleteFeedback:deleteFeedbacks})}).then(function(response){if("true"===response.Success){getAllNotesAndFeedbackForUser(0),ngDialog.closeAll(),$.growl({icon:"glyphicon glyphicon-ok",message:$rootScope.pullInterNationalization("notesAndFeedback.ajaxSuccessMessage.recordDeleted")});var goalType=getGoalType(self.notesAndFeedbackInfo.goalCategory);sharedProperties.fireAnalyticsEvent("Notes & Feedback | Delete All","Blueprint"===goalType?goalType:goalType+" - "+self.notesAndFeedbackInfo.name)}else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})},deleteNote=function(id){var _this=this;ajaxService.getAjaxResponse({url:self.serviceApis.deleteNote,data:$.param({noteId:id})}).then(function(response){if("true"===response.Success){sharedProperties.spilceIndexWithBreak(self.notesAndFeedbackInfo.notesFeedbackList,"id",id),0===self.notesAndFeedbackInfo.notesFeedbackList.length?(getAllNotesAndFeedbackForUser(0),ngDialog.closeAll()):_this.closeThisDialog(),$.growl({icon:"glyphicon glyphicon-ok",message:$rootScope.pullInterNationalization("notesAndFeedback.ajaxSuccessMessage.recordDeleted")});var goalType=getGoalType(self.notesAndFeedbackInfo.goalCategory);sharedProperties.fireAnalyticsEvent("Notes & Feedback | Delete Note","Blueprint"===goalType?goalType:goalType+" - "+self.notesAndFeedbackInfo.name)}else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})},declineFeedbackRequest=function(id){var _this=this;ajaxService.getAjaxResponse({url:self.serviceApis.declineFeedbackStatus,data:$.param({feedbackId:id,feedbackStatus:"DECLINED"})}).then(function(response){if("true"===response.Success)sharedProperties.spilceIndexWithBreak(self.requestNotificationList,"id",id),self.showNotification=!1,_this.closeThisDialog(),$.growl({icon:"glyphicon glyphicon-ok",message:$rootScope.pullInterNationalization("notesAndFeedback.ajaxSuccessMessage.requestDeclined")}),sharedProperties.fireAnalyticsEvent("Notes & Feedback | Decline a feedback Request","N/A"),0===self.requestNotificationList.length&&(self.requestNotificationList=[]);else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})},deleteRequestFeedback=function(id){var _this=this;ajaxService.getAjaxResponse({url:self.serviceApis.deleteFeedbackRequest,data:$.param({feedbackId:id})}).then(function(response){if("true"===response.Success){sharedProperties.spilceIndexWithBreak(self.notesAndFeedbackInfo.notesFeedbackList,"id",id),0===self.notesAndFeedbackInfo.notesFeedbackList.length?(getAllNotesAndFeedbackForUser(0),ngDialog.closeAll()):_this.closeThisDialog(),$.growl({icon:"glyphicon glyphicon-ok",message:$rootScope.pullInterNationalization("notesAndFeedback.ajaxSuccessMessage.recordDeleted")});var goalType=getGoalType(self.notesAndFeedbackInfo.goalCategory);sharedProperties.fireAnalyticsEvent("Notes & Feedback | Delete Feedback","Blueprint"===goalType?goalType:goalType+" - "+self.notesAndFeedbackInfo.name)}else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})},getAllFeedbackRequestNotifications=function(){ajaxService.getAjaxResponse({url:self.serviceApis.getAllFeedbackRequestNotifications,method:"get"}).then(function(response){if(self.requestNotificationList=[],"true"===response.Success){self.requestNotificationList=response.feedbackRequestList;var param=getParameter("feedbackId");null!==param&&findById("notifications",param)}else if(null!==response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$.growl({icon:"glyphicon glyphicon-ban-circle",title:"<strong> Alert </strong>",message:errorMessage})}})};!function(){getAllNotesAndFeedbackForUser(0),getAllFeedbackRequestNotifications()}()}angular.module("spApp").controller("notesAndFeedbackController",notesAndFeedbackController),angular.module("spApp").filter("notesAndFeedbackFilter",function(){function filterData(item,types,filtered,sharedProperties){if(types.note===!1&&types.feedback===!1&&types.pending===!1)filtered.push(item);else if(types.note===!0&&"NOTE"===item.type)filtered.push(item);else if(types.feedback===!0&&"FEEDBACK"===item.type)filtered.push(item);else if(types.feedback===!1&&types.pending===!0&&"FEEDBACK"===item.type){filtered.push(item);for(var i=0;i<filtered.length;i++)if("FEEDBACK"===filtered[i].type){for(var tmpList=[],j=0;j<filtered[i].notesFeedbackList.length;j++)"NOT_INITIATED"===filtered[i].notesFeedbackList[j].feedbackStatus&&tmpList.push(filtered[i].notesFeedbackList[j]);filtered[i].notesFeedbackList=angular.copy(tmpList),0===filtered[i].notesFeedbackList.length&&sharedProperties.spilceIndexWithBreak(filtered,"id",filtered[i].id)}}}return function(items,types,filterFilter,sharedProperties){var filtered=[];return angular.forEach(items,function(item){"all"===types.goalCategory?filterData(item,types,filtered,sharedProperties):"ind"===types.goalCategory?"GrowthAreas"===item.goalCategory&&filterData(item,types,filtered,sharedProperties):"org"===types.goalCategory?"ActionPlan"===item.goalCategory&&filterData(item,types,filtered,sharedProperties):"blueprint"===types.goalCategory?"Blueprint"===item.goalCategory&&filterData(item,types,filtered,sharedProperties):"competency"===types.goalCategory&&"Competency"===item.goalCategory&&filterData(item,types,filtered,sharedProperties),""!==types.search&&(filtered=filterFilter(filtered,types.search))}),filtered}}),notesAndFeedbackController.$inject=["$scope","ajaxService","$localStorage","ngDialog","sharedProperties","filterFilter","$filter","$rootScope"];