function partnersAdmin($scope,ajaxService,ngDialog,sharedProperties,$filter,$timeout){function getAllPartnerAccounts(){ajaxService.getAjaxResponse({url:self.serviceApis.getAllPartnerAccounts}).then(function(response){if("true"===response.Success){self.responseAvailable=!0,self.masterAccountsList=response.partnerAccountListing,self.returnMemberList(),self.accountsList=angular.copy(self.masterAccountsList);for(var i=0;i<self.masterAccountsList.length;i++)self.partnerCompanyIds.push(self.masterAccountsList[i].partnerAccount.companyDTO.id)}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function getAllCompanies(){var options={url:self.serviceApis.getAllCompanies,method:"get"};self.companiesList.length?openCompanyModal():ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){for(var tempList=[],i=0;i<response.companies.length;i++)-1===self.partnerCompanyIds.indexOf(response.companies[i].id)&&tempList.push(response.companies[i]);self.companiesList=tempList,openCompanyModal(),self.companiesList=$filter("orderBy")(self.companiesList,"name",!1)}})}function openCompanyModal(){ngDialog.open({template:"/sp/resources/html/sysAdmin/partners/select-account.html",scope:$scope}).closePromise.then(function(data){self.pageVariables.companySearchText=""})}function createPartnerAccount(companyId){self.partnerForm.companyId=companyId,self.partnerForm.active=!0,ajaxService.getAjaxResponse({url:self.serviceApis.createPartnerAccount,data:self.partnerForm,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?window.location.reload():null!==response.error&&sharedProperties.ajaxError(response.error)})}function updateStatus(id,status,companyId){self.partnerForm.id=id,self.partnerForm.active=status,self.partnerForm.companyId=companyId,ajaxService.getAjaxResponse({url:self.serviceApis.updatePartnerAccount,data:self.partnerForm,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(console.log("update"),window.location.reload()):null!==response.error&&sharedProperties.ajaxError(response.error)})}function resetPartnerId(id,companyId){self.partnerForm.id=id,self.partnerForm.companyId=companyId,self.partnerForm.active=!0,ajaxService.getAjaxResponse({url:self.serviceApis.updatePartnerAccount,data:self.partnerForm,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?window.location.reload():null!==response.error&&sharedProperties.ajaxError(response.error)})}function deleteAccountModal(id,companyId){self.partnerForm.id=id,self.partnerForm.active=!0,self.partnerForm.companyId=companyId,ngDialog.open({template:"/sp/resources/html/sysAdmin/partners/delete-account.html",scope:$scope}).closePromise.then(function(data){self.pageVariables.companySearchText=""})}function deletePartnerAccount(){ajaxService.getAjaxResponse({url:self.serviceApis.deletePartnerAccount,data:$.param({id:self.partnerForm.id})}).then(function(response){"true"===response.Success?(sharedProperties.growlMessage("Account Deleted Successfully"),$timeout(function(){window.location.reload()},1e3)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function returnMemberList(pageSize){if(!self.masterAccountsList.length)return!0;self.order(self.pageVariables.lastPredicate,self.pageVariables.lastReverse)}function order(predicate,reverse){self.pageVariables.lastPredicate=predicate,self.pageVariables.lastReverse=reverse,self.accountsList=$filter("orderBy")(self.accountsList,predicate,reverse)}function searchTextFilter(search){self.pageVariables.textSearching=search,self.returnMemberList()}function active(event,setting){self.pageVariables.lastPredicate=setting.predicate,self.pageVariables.lastReverse=setting.reverse,sharedProperties.toggleFilterClick(event,self.pageVariables.lastPredicate),self.order(self.pageVariables.lastPredicate,self.pageVariables.lastReverse)}function resetfilter(){self.pageVariables=angular.copy(self.originalpageVariables),self.returnMemberList();var curr=$(".memberHolder");curr.find(".heading h4").removeClass("reverseon").removeClass("on"),curr.find(".heading h4:eq(0)").addClass("on")}var self=this;self.serviceApis={getAllPartnerAccounts:"/sp/sysAdmin/partnerAccount/getAll",createPartnerAccount:"/sp/sysAdmin/partnerAccount/create",updatePartnerAccount:"/sp/sysAdmin/partnerAccount/update",deletePartnerAccount:"/sp/sysAdmin/partnerAccount/delete",getAllCompanies:"/sp/sysAdmin/hk/getCompanyList"},self.masterAccountsList=[],self.accountsList=[],self.companiesList=[],self.partnerCompanyIds=[],self.pageVariables={textSearching:"",disabledInfinite:!1,lastPredicate:"name",lastReverse:!1,companySearchText:""},self.responseAvailable=!1,self.responseAvailableForModal=!1,self.partnerForm={},self.originalpageVariables=angular.copy(self.pageVariables),self.getAllPartnerAccounts=getAllPartnerAccounts,self.searchTextFilter=searchTextFilter,self.returnMemberList=returnMemberList,self.active=active,self.order=order,self.resetfilter=resetfilter,self.getAllCompanies=getAllCompanies,self.openCompanyModal=openCompanyModal,self.createPartnerAccount=createPartnerAccount,self.updateStatus=updateStatus,self.resetPartnerId=resetPartnerId,self.deletePartnerAccount=deletePartnerAccount,self.deleteAccountModal=deleteAccountModal}angular.module("spApp").controller("partnersAdmin",partnersAdmin),partnersAdmin.$inject=["$scope","ajaxService","ngDialog","sharedProperties","$filter","$timeout"];