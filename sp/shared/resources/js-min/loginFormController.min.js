function loginFormController($scope,ajaxService,$state,sharedProperties,$localStorage,$rootScope,$timeout){$scope.pwd={min:8,max:14,toggle:!1,err:!1,inputType:"password"},$scope.resetPassword={},$scope.formData={},$scope.resetPasswordMessage=!1,$scope.resetPasswordErrorMessage=!1,$scope.changePasswordErrorMessage=!1,$scope.resetPasswordMessageErr=!1,$scope.pwdFlag=!1,$scope.serviceErrorMsg="",$scope.loginPageType=!1,null!==sessionStorage.getItem("pwdChangeMsg")&&void 0!==sessionStorage.getItem("pwdChangeMsg")&&(sharedProperties.growlMessage(sessionStorage.getItem("pwdChangeMsg")),$timeout(function(){sessionStorage.removeItem("pwdChangeMsg")},250)),$scope.setPageType=function(val){$scope.loginPageType=val},$scope.validateCredentials=function(fData){$scope.formData=fData,$scope.spLogin.submitted=!1,$scope.spLogin.$valid?($localStorage.set("loginEmail",$scope.login.email),document.getElementsByTagName("form")[0].submit()):$scope.spLogin.submitted=!0},$scope.returnHome=function(){window.location.replace("/sp")},$scope.showPassword=function($event){$event.preventDefault(),!1===$scope.pwd.toggle?($scope.pwd.toggle=!0,$scope.pwd.inputType="text"):($scope.pwd.toggle=!1,$scope.pwd.inputType="password")},$scope.resetCredentials=function(){if($scope.resetPasswordMessage=!1,$scope.resetPasswordErrorMessage=!1,$scope.resetPasswordMessageErr=!1,$scope.resetPassword.$valid){var options={url:"/sp/sendResetEmail",data:$.param({email:$scope.user.email})};ajaxService.getAjaxResponse(options).then(function(response){"true"===response.Success?(sharedProperties.setResetEmail(response.email),$state.go("resetConfirmation")):null!=response.error&&($scope.resetPasswordErrorMessage=!0)})}else $scope.resetPasswordMessageErr=!0},$scope.checkPwd=function(id){return sharedProperties.passwordCriterionCheck($(id).val())},$scope.changeCredentials=function(){if($scope.pwdFlag=!1,$scope.changePasswordErrorMessage=!1,$scope.pwdSubmit=!1,$scope.pwdFlag=$scope.checkPwd("#reset_password_page"),$scope.resetPassword.$valid&&$scope.pwdFlag){var options={url:"/sp/newPassword",data:$.param({newPassword:$scope.user.password})};ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success)window.location.href="/sp/signin";else if(null!=response.error){var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$scope.serviceErrorMsg=errorMessage,$scope.changePasswordErrorMessage=!0}})}else $scope.pwdSubmit=!0},$scope.getPropertyValues=function(){$scope.disResetEmail=sharedProperties.getResetEmail()},$scope.cookieCheck=function(){var cookieEnabled=!!navigator.cookieEnabled;return void 0!==navigator.cookieEnabled||cookieEnabled||(document.cookie="testcookie",cookieEnabled=-1!==document.cookie.indexOf("testcookie")),cookieEnabled?$scope.isLocalStorageNameSupported():$scope.showCookieFail()},$scope.isLocalStorageNameSupported=function(){$scope.clearStorage()},$scope.showCookieFail=function(){window.location.href="/sp/enable/cookie"},$scope.showLocalStorageFail=function(){window.location.href="/?status=privateBrowsing"},$scope.clearStorage=function(){$localStorage.flush(),window.sessionStorage.clear(),deleteCookie("udata")};var deleteCookie=function(cookieName){document.cookie=cookieName+"=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/; domain=.surepeople.com"};!function(){$scope.cookieCheck()}(),$scope.resetPwd={},$scope.resetPwdForm={},$scope.resetPwdForm.validationErrors=!1,$scope.resetPwdError=!1,$scope.processPasswordReset=function(fData){$scope.pwdFlag=!1,$scope.pwdFlag=$scope.checkPwd("#changeNewPwd"),this.resetPwdForm.validationErrors=!1,$scope.resetPwdError=!1,this.resetPwdForm.$valid&&$scope.pwdFlag?ajaxService.getAjaxResponse({url:"/sp/changePasword/expired",data:$.param({oldPassword:fData.oldPassword,newPassword:fData.newPassword,email:fData.email})}).then(function(response){if("true"===response.Success)$scope.resetPwdError=!1,jQuery("body").find('form[name="resetPwdForm"]')[0].reset(),jQuery("body").find('form[name="resetPwdForm"]').find("input.pwdField").prop("disabled",!0).addClass("disableThis"),jQuery("body").find('form[name="resetPwdForm"]').find("input.btn-block").removeClass("sp-btn-color").addClass("disableThis btn-grey-dark"),$localStorage.set("pwdChangeMsg",!0),sessionStorage.setItem("pwdChangeMsg",$rootScope.pullInterNationalization("growl.passwordChange")),$scope.redirectLogin();else{$scope.resetPwdForm.validationErrors=!1;var errorMessage="";for(var key in response.error)errorMessage=response.error[key];$scope.resetPwdErrorMsg=errorMessage,$scope.resetPwdError=!0}}):($scope.resetPwdError=!1,this.resetPwdForm.validationErrors=!0)},$scope.redirectLogin=function(){window.location.href="/sp/logout"}}function thankyouController($scope,ajaxService){$scope.redirect=function(){window.location.href="/sp"}}angular.module("spApp").controller("loginFormController",loginFormController),loginFormController.$inject=["$scope","ajaxService","$state","sharedProperties","$localStorage","$rootScope","$timeout"],angular.module("spApp").controller("thankyouController",thankyouController),thankyouController.$inject=["$scope","ajaxService"];