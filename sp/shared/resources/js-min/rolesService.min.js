function rolesService(ajaxService,sharedProperties,$localStorage,$q,spConfig,spValue){this.createRole=function(data,isUpdate){var _data=angular.copy(data);return _data.name=window.escape(_data.name),ajaxService.getAjaxResponse({headers:{"Content-Type":"application/json"},url:isUpdate?spConfig.talentAnalytics.roles.update:spConfig.talentAnalytics.roles.create,data:_data}).then(function(response){return"true"===response.Success?response:null!==response.error?response:void 0})},this.deleteRole=function(data){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.delete,data:$.param({id:data.id})}).then(function(response){return"true"===response.Success?response:null!==response.error?(sharedProperties.ajaxError(response.error),response):void 0})},this.getAll=function(){var deferred=$q.defer();return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.getAll}).then(function(response){"true"===response.Success?(spValue.getAllRoles=response.hiringRoleListing,deferred.resolve(response.hiringRoleListing)):null!==response.error&&sharedProperties.ajaxError(response.error)}),deferred.promise},this.addRole=function(param){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.add,data:$.param(param)}).then(function(response){return"true"===response.Success?response:null!==response.error?(sharedProperties.ajaxError(response.error),null):void 0})},this.removeRole=function(param){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.remove,data:$.param(param)}).then(function(response){return"true"===response.Success?response:null!==response.error?(sharedProperties.ajaxError(response.error),null):void 0})},this.get=function(param){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.get,data:$.param(param)}).then(function(response){return"true"===response.Success?response:null!==response.error?null:void 0})},this.assignPortrait=function(param){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.assignPortrait,headers:{"Content-Type":"application/json"},data:param}).then(function(response){if("true"===response.Success)return response})},this.removePortrait=function(param){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.removePortrait,headers:{"Content-Type":"application/json"},data:param}).then(function(response){if("true"===response.Success)return response})},this.getUserRolesAndMatch=function(userId){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.getUserRolesAndMatch,data:$.param({userId:userId})}).then(function(response){if("true"===response.Success)return response;null!==response.error&&sharedProperties.ajaxError(response.error)})},this.getRolesWithoutPortrait=function(){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.getRolesWithoutPortrait}).then(function(response){if("true"===response.Success)return response;null!==response.error&&sharedProperties.ajaxError(response.error)})},this.addRoleToUser=function(param){return ajaxService.getAjaxResponse({url:spConfig.talentAnalytics.roles.addUserToRole,data:param,headers:{"Content-Type":"application/json"}}).then(function(response){return"true"===response.Success?response:null!==response.error?(sharedProperties.ajaxError(response.error),null):void 0})}}rolesService.$inject=["ajaxService","sharedProperties","$localStorage","$q","spConfig","spValue"],angular.module("spApp").service("rolesService",rolesService);