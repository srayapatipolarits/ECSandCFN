function groupListController($scope,ajaxService,$filter,$state,ngDialog,$timeout,sharedProperties,$rootScope,$localStorage){function sendEmailReminders(status,email){ajaxService.getAjaxResponse({url:vm.config.sendReminders,data:$.param({brandHeader:"",ctaLabel:"",ctaUrl:"",logType:"PROFILE_INCOMPLETE"===status?"ProfileIncomplete":"Profile",type:"PROFILE_INCOMPLETE"===status?"ProfileIncompleteReminder":"AssessmentPendingReminder",memberList:email})}).then(function(response){"true"===response.Success?(sharedProperties.growlMessage($rootScope.pullInterNationalization("growl.notificationSent")),sharedProperties.fireAnalyticsEvent("Manage Account | Send Reminder",status)):null!=response.error&&sharedProperties.ajaxError(response.error)})}function getCompanyFeatures(){ajaxService.getAjaxResponse({url:vm.config.getCompanyDetails}).then(function(response){if("true"===response.Success){var _features=response.company.featureList;vm.companyFeatures={isPrismLens:-1!==_features.indexOf("PrismLens"),isOrganizationPlan:-1!==_features.indexOf("OrganizationPlan"),isPrism:-1!==_features.indexOf("Prism"),isBluePrint:-1!==_features.indexOf("Blueprint"),isCompetency:-1!==_features.indexOf("Competency")}}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function getActionPlans(){ajaxService.getAjaxResponse({url:vm.config.getCompanyActionPlans,data:$.param({includeUserId:!0})}).then(function(response){"true"===response.Success?actionPlanOperation(response):null!=response.error&&sharedProperties.ajaxError(response.error)})}function actionPlanOperation(response){vm.actionPlansList=response.actionPlanListing}function getUserActionPlans(email){vm.selectedActionPlans=[],vm.selectedActionPlanIds=[],ajaxService.getAjaxResponse({url:vm.config.selectedActionPlanList,data:$.param({memberEmail:email})}).then(function(response){if("true"===response.Success){if(vm.userActionPlansList=response.memberLndCompDetails.actionPlans,vm.userActionPlansList)for(var i=0;i<vm.userActionPlansList.length;i++)vm.selectedActionPlans.push(vm.userActionPlansList[i]),vm.selectedActionPlanIds.push(vm.userActionPlansList[i].id)}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function editActionPlan(memberObj,action,isSingle){var tempList=angular.copy(vm.actionPlansList);vm.activeOrgPlanIds=[],vm.inactiveOrgPlanIds=[],vm.actionPlansListCopy=[];for(var j=0;j<tempList.length;j++)tempList[j].active?vm.activeOrgPlanIds.push(tempList[j].id):vm.inactiveOrgPlanIds.push(tempList[j].id);if(vm.actionPlansListCopy=angular.copy(vm.actionPlansList),vm.actionPlanSettings={member:memberObj,action:action,isSingle:isSingle},vm.actionPlanUserList=[],vm.actionPlanUserIds=[],vm.selectedActionPlans=[],vm.selectedActionPlanIds=[],vm.currentSelectedActionPlans=[],vm.currentSelectedActionPlanIds=[],vm.noPlansSubmit=!1,vm.removeActionPlan="REMOVE"===vm.actionPlanSettings.action,isSingle)getUserActionPlans(memberObj.email),vm.actionPlanUserList.push(memberObj),vm.actionPlanUserIds.push(memberObj.id);else for(var i=0;i<vm.ps_pageSetting.userEmail.email.length;i++)vm.actionPlanUserList.push(vm.ps_pageSetting.userEmail.email[i]),vm.actionPlanUserIds.push(vm.ps_pageSetting.userEmail.email[i].userId);ngDialog.open({template:vm.config.assignRemoveOrgPlanModal,scope:$scope})}function trackactionActionPlans(data){vm.noPlansSubmit=!1;var existingId=$.inArray(data.id,vm.currentSelectedActionPlanIds);-1===existingId?(vm.currentSelectedActionPlans.push(data),vm.currentSelectedActionPlanIds.push(data.id)):(vm.currentSelectedActionPlans.splice(existingId,1),vm.currentSelectedActionPlanIds.splice(existingId,1))}function processActionPlan(){var service="REMOVE"===vm.actionPlanSettings.action?vm.config.removeActionPlan:vm.config.assignActionPlan;if("REMOVE"===vm.actionPlanSettings.action){vm.selectedActionPlanIds=[];for(var i=0;i<vm.actionPlansList.length;i++)vm.selectedActionPlanIds.push(vm.actionPlansList[i].id)}vm.currentSelectedActionPlanIds.length?(vm.noPlansSubmit=!1,ajaxService.getAjaxResponse({url:service,data:{actionPlanIdList:vm.currentSelectedActionPlanIds,userIdList:vm.actionPlanUserIds,groupPermissionsList:[]},headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(sharedProperties.setOrganization(null),ngDialog.close(),"REMOVE"===vm.actionPlanSettings.action?sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.removeMember")):sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.addMemberMsg")),"REMOVE"===vm.actionPlanSettings.action?sharedProperties.fireAnalyticsEvent("Manage Account | Remove Org Plan","N/A"):sharedProperties.fireAnalyticsEvent("Manage Account | Assign Org Plan","N/A")):null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))})):vm.noPlansSubmit=!0}function member_confirmDelete(event,email){var selectedUsersEmails=[];selectedUsersEmails.push(email);var options=(angular.element(event.currentTarget),{url:"/sp/admin/member/delete",data:$.param({memberEmail:email})});ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){var templList=angular.copy(vm.ps_profileList.memberSummaryList),tempList0=[];$.each(templList,function(i,j){-1===$.inArray(templList[i].email,selectedUsersEmails)&&tempList0.push(templList[i])}),vm.ps_profileList.memberSummaryList=angular.copy(tempList0),vm.ps_pageCounter(vm.ps_pageSetting.pageSize),ngDialog.close(),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.member.deleteMessage")),sharedProperties.fireAnalyticsEvent("Manage Account | Member Deleted","N/A")}else null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))})}function deleteMultiModal(){ngDialog.open({template:"/sp/resources/html/admin/manage-account/members-deleteMultiple.html",scope:$scope})}function deleteSingleModal(member,isGroupLead){vm.deleteMemberInfo=member,vm.isGroupsDelete=!0,vm.isGroupLeadDelete=!!isGroupLead,ngDialog.open({template:"/sp/resources/html/admin/manage-account/members-deleteSingle.html",scope:$scope})}function blockSingleModal(member,flag){vm.blockMemberInfo=member,vm.blockFlag=flag,ngDialog.open({template:"/sp/resources/html/admin/manage-account/members-blockSingle.html",scope:$scope})}function deleteMultiMembers(){for(var selectedUsersEmails=[],i=0;i<vm.ps_pageSetting.userEmail.email.length;i++)selectedUsersEmails.push(vm.ps_pageSetting.userEmail.email[i].email);ajaxService.getAjaxResponse({url:"/sp/admin/member/deleteMulti",data:$.param({memberEmails:selectedUsersEmails.join()})}).then(function(response){if("true"===response.Success){sharedProperties.setMember([]),sharedProperties.setGroup([]);var templList=angular.copy(vm.ps_profileList.memberSummaryList),tempList0=[];$.each(templList,function(i,j){-1===$.inArray(templList[i].email,selectedUsersEmails)&&tempList0.push(templList[i])}),vm.ps_profileList.memberSummaryList=angular.copy(tempList0),vm.ps_pageCounter(vm.ps_pageSetting.pageSize),ngDialog.close(),sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.memberDeleted"))}else null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))})}function blockMembers(email,single,flag){var selectedUsersEmails=[];if(single)selectedUsersEmails.push(email);else for(var i=0;i<vm.ps_pageSetting.userEmail.email.length;i++)selectedUsersEmails.push(vm.ps_pageSetting.userEmail.email[i].email);ajaxService.getAjaxResponse({url:"/sp/admin/blockUser",data:$.param({userList:selectedUsersEmails.join(),blockUser:!single||flag})}).then(function(response){if("true"===response.Success){var templList=angular.copy(vm.ps_profileList.memberSummaryList);$.each(templList,function(i,j){$.inArray(templList[i].email,selectedUsersEmails)>-1&&(templList[i].deactivated=!single||!templList[i].deactivated)}),vm.ps_profileList.memberSummaryList=angular.copy(templList),vm.ps_pageCounter(vm.ps_pageSetting.pageSize),ngDialog.close(),single?flag?sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.memberBlocked")):sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.memberUnblocked")):sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.memberBlocked")),single?sharedProperties.fireAnalyticsEvent("Manage Account | Block Single Member",flag?"Yes":"No"):sharedProperties.fireAnalyticsEvent("Manage Account | Block Multiple Members",flag?"Yes":"No")}else null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))})}function blockMembersModal(){vm.addGroupSubmit=!1,ngDialog.open({template:"/sp/resources/html/admin/manage-account/members-blockMultiple.html",scope:$scope})}function addMembersModal(){vm.addedList=[],vm.ps_callGetAllMembers(),vm.memberListSearch="",ngDialog.open({template:"/sp/resources/html/admin/manage-account/groups-addMembers.html",scope:$scope})}function showMenu(id){vm.allUsersMenu=!1,vm.showMenuId=id!==vm.showMenuId?id:-1}function getGroupData(){ajaxService.getAjaxResponse({url:vm.config.getGroupData}).then(function(response){"true"===response.Success?(vm.groupList=response.groupInfoList.length?response.groupInfoList:[],vm.responseRecieved=!0,vm.groupList.length&&(vm.pageCounter(vm.pageSetting.pageSize),$localStorage.get("selectedGroupName")?vm.ps_getProfileData($localStorage.get("selectedGroupName")):vm.ps_getProfileData(response.groupInfoList[0].name),vm.getActionPlans(),getCompanyFeatures()),$scope.$parent.ctrl.activeView="groups"):null!=response.error&&(vm.responseRecieved=!0,sharedProperties.ajaxError(response.error))})}function pageCounter(pageSize,nosorting){void 0===nosorting&&vm.order(vm.pageSetting.currentPredicate,vm.pageSetting.lastReverse),vm.pageSetting.pageSize=pageSize,pageSize>=vm.groupList.length&&(vm.pageSetting.disabledInfinite=!0,vm.pageSetting.pageSize=pageSize)}function order(predicate,reverse){vm.pageSetting.currentPredicate=predicate,vm.pageSetting.lastReverse=reverse,vm.groupList=$filter("orderBy")(vm.groupList,vm.pageSetting.currentPredicate,vm.pageSetting.lastReverse)}function resetCounter(){vm.pageSetting=angular.copy(vm.originalPageSetting),vm.order(vm.pageSetting.currentPredicate,vm.pageSetting.lastReverse);var curr=$(".groupsHolder");curr.find(".heading h4").removeClass("reverseon").removeClass("on"),curr.find(".heading h4:eq(0)").addClass("on")}function profileRoute(groupname){$localStorage.set("groupname",groupname),$state.go("profile")}function memberOperation(response){vm.allEmails=response}function getAllMembers(){sharedProperties.getMember().length?memberOperation(sharedProperties.getMember()):ajaxService.getAjaxResponse({url:vm.config.getAllMembers}).then(function(response){"true"===response.Success&&(sharedProperties.setMember(response.memberList),memberOperation(response.memberList))})}function actionToClear(){$rootScope.$broadcast("handleBroadcast")}function createNewGroup(){sharedProperties.setMember([]),vm.getAllMembers(),$scope.errornewGroup=!1,$scope.errornewEmptyGroup=!1,$scope.savenewGroup=!1,ngDialog.open({template:vm.config.createGroup,scope:$scope})}function resetCreateNewGroup(cancel){vm.showCreateGroup=!cancel,$scope.errornewEmptyGroup=!1,$scope.errornewGroup=!1,vm.createGroupName=""}function renameGroupReset(cancel){vm.showRenameGroup=!cancel,vm.ps_errornewEmptyGroup=!1,vm.ps_errornewGroup=!1,vm.newGroupSelector=vm.ps_profileList.name}function confirmDelete(groupname){ajaxService.getAjaxResponse({url:vm.config.deleteGroup,data:$.param({name:groupname})}).then(function(response){"true"===response.Success?(sharedProperties.spliceIndex(vm.groupList,"name",groupname),updateGroupCount(groupname),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.deleteFullMessage"))):null!=response.error&&sharedProperties.ajaxError(response.error)})}function removeGroupLead(groupname,groupMemberEmail){ajaxService.getAjaxResponse({url:vm.config.removeMember,data:$.param({name:groupname,memberEmail:groupMemberEmail,isGroupLead:!0})}).then(function(response){if("true"===response.Success){for(var i=0;i<vm.groupList.length;i++)if(vm.groupList[i].name===groupname){vm.groupList[i].groupLead=null,vm.groupList[i].numOfMembers=parseInt(vm.groupList[i].numOfMembers)-parseInt(1);break}sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.deleteMessage"))}else null!=response.error&&sharedProperties.ajaxError(response.error)})}function active(event,setting){vm.pageSetting.currentPredicate=setting.predicate,vm.pageSetting.lastReverse=setting.reverse,sharedProperties.toggleFilterClick(event,vm.pageSetting.currentPredicate),vm.order(vm.pageSetting.currentPredicate,vm.pageSetting.lastReverse)}function callreload(){window.location.reload()}function saveGroupName(savetosave,oldname,index){vm.errorNotification.updateGroupNameError=!1,vm.errorNotification.updateGroupEmptyError=!1,vm.errorNotification.saved=!1;var idToGo=index;return""===savetosave||void 0===savetosave?(vm.errorNotification.updateGroupEmptyError=!0,!1):savetosave===oldname?(vm.groupList[idToGo].editenabled=!1,!1):void ajaxService.getAjaxResponse({url:vm.config.updateName,data:$.param({name:savetosave,oldName:oldname})}).then(function(response){"true"===response.Success?(vm.errorNotification.saved=!0,vm.errorNotification.updateGroupName=!0,vm.groupList[idToGo].name=response.groupInfoList[0].name,vm.groupList[idToGo].editenabled=!1,sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.updateGroupName"))):null!=response.error&&(vm.errorNotification.updateGroupNameError=!0)})}function groupNameResult(){vm.errorNotification.updateGroupNameError=!1,vm.errorNotification.updateGroupEmptyError=!1}function ps_saveLeadData(lead){vm.ps_selectedGroupLead=lead}function ps_getProfileData(groupName){vm.ps_negative=!1,vm.ps_pageSetting.userEmail.email=[],vm.ps_selectedGroupLead=null,vm.ps_profileList.groupLead=null,vm.ps_resetCounter(),ajaxService.getAjaxResponse({url:vm.ps_config.getProfileData,data:$.param({name:groupName})}).then(function(response){if("true"===response.Success){$localStorage.remove("selectedGroupName");var userRoles=null!==$localStorage.get("loggegdInProfile")?$localStorage.get("loggegdInProfile").member.roles:[];vm.iamaccountadmin=-1!==userRoles.indexOf("AccountAdministrator"),vm.hasCompetencyRole=-1!==userRoles.indexOf("CompetencyAdmin"),vm.listingView="ASSESSMENT",vm.ps_profileList=response.groupInfo||[],vm.ps_groupId=response.groupInfo.id,vm.ps_responseRecieved=!0,vm.ps_pageSetting.pageSize=vm.ps_originalpageSetting.pageSize,vm.ps_pageSetting.disabledInfinite=!1,vm.ps_profileList.memberSummaryList.length&&vm.ps_order(vm.ps_pageSetting.lastPredicate,vm.ps_pageSetting.lastReverse),vm.loadCompetencyDetails(),updateGroupCount(vm.ps_profileList.name),vm.ps_profileList.groupLead=response.groupInfo.groupLead?response.groupInfo.groupLead:null}else null!=response.error&&(vm.ps_responseRecieved=!0,sharedProperties.ajaxError(response.error))})}function loadCompetencyDetails(){vm.ps_responseAvailableForCompetency=!1,ajaxService.getAjaxResponse({url:vm.ps_config.getCompetencyListing,data:$.param({groupId:vm.ps_groupId})}).then(function(response){if("true"===response.Success){vm.competencyList=response.competencyProfile,vm.competencyEvaluationInProgress=response.evaluationInProgress;for(var competencyUserMap={},competencyNameMap={},i=0;i<response.memberList.length;i++)competencyUserMap[response.memberList[i].userId]=response.memberList[i].competencyProfileId;for(var k=0;k<vm.competencyList.length;k++)competencyNameMap[vm.competencyList[k].id]=vm.competencyList[k].name;for(var j=0;j<vm.ps_profileList.memberSummaryList.length;j++)vm.ps_profileList.memberSummaryList[j].competencyProfileId=competencyUserMap[vm.ps_profileList.memberSummaryList[j].id],vm.ps_profileList.memberSummaryList[j].competencyProfileName=competencyNameMap[vm.ps_profileList.memberSummaryList[j].competencyProfileId];null!==vm.ps_profileList.groupLead&&(vm.ps_profileList.groupLead.competencyProfileId=competencyUserMap[vm.ps_profileList.groupLead.id],vm.ps_profileList.groupLead.competencyProfileName=competencyNameMap[vm.ps_profileList.groupLead.competencyProfileId]),vm.ps_responseAvailableForCompetency=!0}else null!=response.error&&(vm.ps_responseRecieved=!0,sharedProperties.ajaxError(response.error))})}function switchView(type){"status"===type?vm.listingView="ASSESSMENT":"reload"!==type&&"COMPETENCY"===vm.listingView||(sharedProperties.setCompetency(null),vm.loadCompetencyDetails(),vm.listingView="COMPETENCY")}function assignCompetency(value){vm.assignClick=!0,vm.selectedCompetencyDrop&&ajaxService.getAjaxResponse({url:vm.ps_config.assignCompetency,data:{competencyProfileId:value,userIdList:vm.selectedUsersList},headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(ngDialog.close(),sharedProperties.growlMessage($rootScope.pullInterNationalization("competency.ajaxSuccess.evaluationAssigned")),sharedProperties.fireAnalyticsEvent("Manage Account | Assign Competency","N/A"),vm.switchView("reload")):null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error),vm.switchView("reload"))})}function removeCompetency(){ajaxService.getAjaxResponse({url:vm.ps_config.removeCompetency,data:{competencyProfileId:vm.selectedCompetency,userIdList:vm.selectedUsersList},headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(ngDialog.close(),sharedProperties.growlMessage($rootScope.pullInterNationalization("competency.ajaxSuccess.evaluationRemoved")),sharedProperties.fireAnalyticsEvent("Manage Account | Remove Competency","N/A"),vm.switchView("reload")):null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error),vm.switchView("reload"))})}function assignRemoveCompetencyModalSingle(obj,action,competencyId){vm.competencyRemoveAction=!1,vm.assignClick=!1,vm.singleMemberCompetency=!0,vm.selectedCompetency=[],vm.competencyAssignRemoveOptions=[],vm.selectedUsersList=[],vm.competencyActionType=action,vm.competencyAssignRemoveOptions.push(obj),vm.selectedUsersList.push(obj.id),null!==typeof competencyId?(vm.selectedCompetencyDrop=competencyId,vm.selectedCompetency.push(competencyId)):vm.selectedCompetencyDrop=null,ngDialog.open({template:"/sp/resources/html/admin/manage-account/members-assignRemoveCompetency.html",scope:$scope}).closePromise.then(function(data){vm.competencyActionType="MORE"})}function assignRemoveCompetencyModalMultiple(action){if(vm.singleMemberCompetency=!1,vm.competencyActionType=action,"MORE"!==vm.competencyActionType){vm.selectedCompetency=[],vm.assignClick=!1,vm.competencyAssignRemoveOptions=[],vm.selectedUsersList=[],vm.selectedCompetencyDrop=null;for(var i=0;i<vm.ps_pageSetting.userEmail.email.length;i++)vm.competencyAssignRemoveOptions.push(vm.ps_pageSetting.userEmail.email[i]),vm.selectedUsersList.push(vm.ps_pageSetting.userEmail.email[i].userId),vm.selectedCompetency.push(vm.ps_pageSetting.userEmail.email[i].profileId);ngDialog.open({template:"/sp/resources/html/admin/manage-account/members-assignRemoveCompetency.html",scope:$scope}).closePromise.then(function(data){vm.competencyActionType="MORE"}),vm.allUsersMenu=!1}}function ps_order(predicate,reverse){vm.ps_pageSetting.lastPredicate=predicate,vm.ps_pageSetting.lastReverse=reverse;var orderedList=$filter("orderBy")(vm.ps_profileList.memberSummaryList,vm.ps_pageSetting.lastPredicate,vm.ps_pageSetting.lastReverse);vm.ps_profileList.memberSummaryList=function(array,key){if("name"===key){for(var list=[],empty=[],i=0;i<array.length;i++)null!==array[i][key]&&""!==array[i][key]&&void 0!==array[i][key]?list.push(array[i]):empty.push(array[i]);return $.merge(list,empty)}return orderedList}(orderedList,vm.ps_pageSetting.lastPredicate)}function ps_callGetAllMembers(){vm.ps_pageSetting.oneTime?(ps_getAllMembers(),vm.ps_pageSetting.oneTime=!1):updateSearchList()}function ps_getAllMembers(){ajaxService.getAjaxResponse({url:vm.ps_config.getAllMembers}).then(function(response){"true"===response.Success&&(vm.ps_fullEmailList=void 0!==response.memberList&&response.memberList.filter(function(obj){return null!==obj.name&&""!==obj.name}),updateSearchList())})}function updateSearchList(){for(var allMail=angular.copy(vm.ps_fullEmailList),i=0;i<vm.ps_profileList.memberSummaryList.length;i++)for(var j=vm.ps_fullEmailList.length-1;j>=0;j--)if(vm.ps_profileList.memberSummaryList[i].email===vm.ps_fullEmailList[j].email){delete allMail[j];break}vm.updatedSearchList=allMail.filter(function(e){return null!==vm.ps_profileList.groupLead?vm.ps_profileList.groupLead.email!==e.email:e})}function ps_active(event,setting){vm.ps_pageSetting.lastPredicate=setting.predicate,vm.ps_pageSetting.lastReverse=setting.reverse,sharedProperties.toggleFilterClick(event,vm.ps_pageSetting.lastPredicate),vm.ps_order(vm.ps_pageSetting.lastPredicate,vm.ps_pageSetting.lastReverse)}function ps_assignGroupLead(){vm.searchGroupLead=null,vm.ps_callGetAllMembers(),vm.ps_errorNotification.selectGroupLead=!1,ngDialog.open({template:vm.ps_config.groupLeadDialog,scope:$scope})}function makeMemberList(email){-1===$.inArray(email,vm.addedList)&&vm.addedList.push(email)}function updateGroupCount(groupName){for(var i=0;i<vm.groupList.length;i++)vm.groupList[i].name===groupName&&(vm.groupList[i].numOfMembers=vm.ps_profileList.memberSummaryList.length+vm.ps_countLead())}function ps_addMemberToGroup(){ajaxService.getAjaxResponse({url:vm.ps_config.addMember,data:$.param({groupNameList:vm.ps_profileList.name,memberEmailList:vm.addedList.join(),isGroupLead:!1})}).then(function(response){"true"===response.Success?(sharedProperties.setMember([]),sharedProperties.setGroup([]),vm.ps_getProfileData(vm.ps_profileList.name),ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("growl.memberAddedtogroup")),sharedProperties.fireAnalyticsEvent("Manage Account | Member(s) added to group","N/A")):null!=response.error&&sharedProperties.ajaxError(response.error)})}function ps_assignNewGroup(groupname,groupLeadEmailId){if(void 0===groupLeadEmailId||""===groupLeadEmailId)return vm.ps_errorNotification.selectGroupLead=!0,!0;for(var existingMember=!1,i=0;i<vm.ps_profileList.memberSummaryList.length;i++)if(vm.ps_profileList.memberSummaryList[i].email===groupLeadEmailId){existingMember=!0;break}existingMember?ajaxService.getAjaxResponse({url:vm.ps_config.removeMember,data:$.param({memberEmail:groupLeadEmailId,name:groupname})}).then(function(response){"true"===response.Success?ajaxService.getAjaxResponse({url:vm.ps_config.addMember,data:$.param({groupNameList:groupname,memberEmailList:groupLeadEmailId,isGroupLead:!0})}).then(function(response){if("true"===response.Success){vm.listingView="ASSESSMENT",vm.ps_profileList.groupLead=vm.ps_selectedGroupLead;for(var i=0;i<vm.ps_profileList.memberSummaryList.length;i++)vm.ps_profileList.memberSummaryList[i].email===vm.ps_selectedGroupLead.email&&vm.ps_profileList.memberSummaryList.splice(i,1);sharedProperties.spilceIndexWithBreak(vm.ps_allEmails,"email",vm.ps_selectedGroupLead.email),vm.ps_negative=!1,vm.ps_pageSetting.userEmail.email=[],vm.ps_selectedGroupLead="",sharedProperties.setMember([]),ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.profile.updateMessage")),sharedProperties.fireAnalyticsEvent("Manage Account | Assign group lead","N/A")}else null!=response.error&&sharedProperties.ajaxError(response.error)}):null!=response.error&&sharedProperties.ajaxError(response.error)}):ajaxService.getAjaxResponse({url:vm.ps_config.addMember,data:$.param({groupNameList:groupname,memberEmailList:groupLeadEmailId,isGroupLead:!0})}).then(function(response){if("true"===response.Success){vm.listingView="ASSESSMENT",vm.ps_profileList.groupLead=vm.ps_selectedGroupLead;for(var i=0;i<vm.ps_profileList.memberSummaryList.length;i++)vm.ps_profileList.memberSummaryList[i].email===vm.ps_selectedGroupLead.email&&vm.ps_profileList.memberSummaryList.splice(i,1);sharedProperties.spilceIndexWithBreak(vm.ps_allEmails,"email",vm.ps_selectedGroupLead.email),vm.ps_negative=!1,vm.ps_pageSetting.userEmail.email=[],vm.ps_selectedGroupLead="",ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.profile.updateMessage")),sharedProperties.fireAnalyticsEvent("Manage Account | Assign group lead","N/A")}else null!=response.error&&sharedProperties.ajaxError(response.error)})}function ps_removeGroupLead(leadDetails){vm.ps_leadDetails=leadDetails,ngDialog.open({template:vm.ps_config.removeGroupLeadDialog,scope:$scope})}function ps_removeGL(groupname,groupMemberEmail){var gEmail=groupMemberEmail;ajaxService.getAjaxResponse({url:vm.ps_config.removeGroupLead,data:$.param({name:groupname,groupLeadEmail:gEmail})}).then(function(response){"true"===response.Success?(sharedProperties.setMember([]),vm.ps_pageSetting.oneTime=!0,vm.ps_getProfileData(groupname),vm.ps_callGetAllMembers(),ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.profile.updateMessage")),sharedProperties.fireAnalyticsEvent("Manage Account | Removed Group Lead","N/A")):null!=response.error&&sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.profile.removeGroupLError"))})}function ps_memberTakeAway(email,f){$localStorage.set("memEmail",email),!0===f&&$localStorage.set("spProfileTab",!0),window.location.href="/sp/admin/account/member/details?email="+email}function viewMemberDetails(email,f){$localStorage.remove("memberDetailsNav"),$localStorage.set("previousView",$scope.$parent.ctrl.activeView),$scope.$parent.ctrl.switchViews("memberDetails",!1,email)}function ps_showFocus(event){var current=$(event.currentTarget).closest(".memprofile").find(".addMemberAnchor");$("html, body").animate({scrollTop:$(current).offset().top-50},"slow")}function ps_actionToClear(){vm.ps_negative=!1,vm.ps_pageSetting.userEmail.email=[],$rootScope.$broadcast("handleBroadcast")}function ps_confirmDelete(event,email,groupLead){angular.element(event.currentTarget);groupLead=groupLead,ajaxService.getAjaxResponse({url:vm.ps_config.removeMember,data:$.param({name:vm.ps_profileList.name,memberEmail:email,isGroupLead:groupLead})}).then(function(response){if("true"===response.Success){if(groupLead)vm.ps_allEmails.push(vm.ps_profileList.groupLead),vm.ps_profileList.groupLead=null;else for(var i=0;i<vm.ps_profileList.memberSummaryList.length;i++)if(vm.ps_profileList.memberSummaryList[i].email===email){vm.ps_allEmails.push(vm.ps_profileList.memberSummaryList[i].user),vm.ps_profileList.memberSummaryList.splice(i,1);break}ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.profile.deleteMessage")),vm.ps_negative=!1,vm.ps_pageSetting.userEmail.email=[],vm.isGroupsDelete=!1,updateGroupCount(vm.ps_profileList.name)}else null!=response.error&&(ngDialog.close("ngdialog1"),vm.isGroupsDelete=!1,sharedProperties.ajaxError(response.error))})}function ps_certainDelete(){vm.ps_callGetAllMembers();ngDialog.open({template:vm.ps_config.certainDeleteDialog,scope:$scope})}function ps_removeSingleMember(memberObj){vm.deleteMemberInfo=memberObj;ngDialog.open({template:vm.ps_config.removeSingle,scope:$scope})}function ps_deleteUsers(emails,single){var emailList=[];single?emailList.push(emails):$.each(emails,function(i,j){emailList.push(emails[i].email)});var options={url:vm.ps_config.removeMember,data:$.param({memberEmail:emailList.toString(),name:vm.ps_profileList.name})};ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){if(emailList.length){sharedProperties.setMember([]),sharedProperties.setGroup([]);var templList=angular.copy(vm.ps_profileList.memberSummaryList),tempList0=[];$.each(templList,function(i,j){-1===$.inArray(templList[i].email,emailList)&&tempList0.push(templList[i])}),vm.ps_profileList.memberSummaryList=angular.copy(tempList0),vm.ps_pageCounter(vm.ps_pageSetting.pageSize),void 0!==vm.ps_profileList.groupLead&&null!==vm.ps_profileList.groupLead&&-1!==emailList.indexOf(vm.ps_profileList.groupLead.email)&&(vm.ps_allEmails.push(vm.ps_profileList.groupLead),vm.ps_profileList.groupLead=null),vm.ps_negative=!1,vm.ps_pageSetting.userEmail.email=[],updateGroupCount(vm.ps_profileList.name),ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.profile.deleteMessage")),sharedProperties.fireAnalyticsEvent("Manage Account | Member removed from Group","N/A")}}else null!=response.error&&sharedProperties.ajaxError(response.error)})}function ps_checkAll(){vm.ps_negative?vm.ps_pageSetting.userEmail.email=[]:(vm.ps_pageSetting.userEmail.email=vm.ps_profileList.memberSummaryList.map(function(item){return{userId:item.id,email:item.email,name:item.name,title:item.title,userStatus:item.userStatus}}),vm.ps_profileList.groupLead&&vm.ps_pageSetting.userEmail.email.push({userId:vm.ps_profileList.groupLead.id,email:vm.ps_profileList.groupLead.email,name:vm.ps_profileList.groupLead.name,title:vm.ps_profileList.groupLead.title,userStatus:vm.ps_profileList.groupLead.userStatus}))}function ps_countLead(){return vm.ps_profileList.groupLead?1:0}function ps_renamePopup(){vm.ps_errornewGroup=!1,vm.ps_errornewEmptyGroup=!1,ngDialog.open({template:vm.ps_config.renameGroupDialog,scope:$scope}),vm.ps_newGroupSelector=vm.ps_profileList.name}function ps_renameGroup(savetosave,oldname){return vm.ps_errornewGroup=!1,vm.ps_errornewEmptyGroup=!1,""===savetosave?(vm.ps_errornewEmptyGroup=!0,!0):savetosave===oldname||void ajaxService.getAjaxResponse({url:vm.ps_config.updateName,data:$.param({name:savetosave,oldName:oldname})}).then(function(response){if("true"===response.Success){vm.ps_profileList.name=savetosave;var tempList=angular.copy(vm.groupList);$.each(tempList,function(i,j){if(tempList[i].name===oldname)return tempList[i].name=savetosave,!1}),vm.groupList=angular.copy(tempList),sharedProperties.setMember([]),sharedProperties.setGroup(vm.groupList),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.profile.updateGroupNameMessage")),sharedProperties.fireAnalyticsEvent("Manage Account | Group name Renamed","N/A"),vm.renameGroupReset(!0)}else null!=response.error&&(vm.ps_errornewGroup=!0)})}function ps_deletePopup(){ngDialog.open({template:vm.ps_config.deleteGroupDialog,scope:$scope})}function ps_deleteFullGroup(groupname){ajaxService.getAjaxResponse({url:vm.ps_config.deleteGroup,data:$.param({name:groupname})}).then(function(response){"true"===response.Success?(ngDialog.close("ngdialog1"),sharedProperties.setMember([]),sharedProperties.setGroup([]),$state.reload(),sharedProperties.growlMessage($rootScope.pullInterNationalization("growl.groupDeletedSuccefully")),sharedProperties.fireAnalyticsEvent("Manage Account | Group Deleted","N/A")):null!=response.error&&sharedProperties.ajaxError(response.error)})}function ps_allEmailPop(){var mailtoAll=vm.ps_profileList.memberSummaryList.map(function(item){return{userId:item.id,email:item.email,name:item.name,title:item.title}});vm.ps_profileList.groupLead&&mailtoAll.push({userId:vm.ps_profileList.groupLead.id,email:vm.ps_profileList.groupLead.email,name:vm.ps_profileList.groupLead.name,title:vm.ps_profileList.groupLead.title}),mailtoAll.length&&$rootScope.notificationEmailPoP(mailtoAll)}function ps_checkUncheck(checked){var userLength=vm.ps_pageSetting.userEmail.email.length,memberList=vm.ps_profileList.memberSummaryList.length+vm.ps_countLead();vm.ps_negative=checked?userLength+1===memberList:userLength-1===memberList}function ps_resetCounter(name,value){vm.ps_pageSetting=angular.copy(vm.ps_originalpageSetting);var curr=$(".row-header");curr.find(".tog h4").removeClass("reverseon").removeClass("on"),curr.find(".tog h4:eq(0)").addClass("on")}function ps_pageCounter(pageSize){
vm.ps_pageSetting.pageSize=pageSize,pageSize>=vm.ps_profileList.memberSummaryList.length&&(vm.ps_pageSetting.disabledInfinite=!0,vm.ps_pageSetting.pageSize=pageSize)}function displayRole(userObj){var userRoles=userObj.roles,complete=[];return-1!==userRoles.indexOf("AccountAdministrator")&&complete.push('<span class="thin">'+$rootScope.pullInterNationalization("manageAccountContent.admin")+"</span>"),userObj.deactivated&&complete.push('<span class="thin blocked">'+$rootScope.pullInterNationalization("manageAccountContent.blocked")+"</span>"),complete.join("")}var vm=this;vm.groupList=[],vm.responseRecieved=!1,vm.pageSetting={pageSize:10,intialVal:10,lastReverse:!1,saved:!1,groupPage:!0,currentPredicate:"name",disabledInfinite:!1},vm.originalPageSetting=angular.copy(vm.pageSetting),vm.errorNotification={updateGroupName:!1,updateGroupNameError:!1,updateGroupEmptyError:!1,errornewGroup:!1,errornewEmptyGroup:!1,savenewGroup:!1},vm.config={getGroupData:"/sp/admin/group/all",getAllMembers:"/sp/admin/member",createGroup:"/sp/admin/group/createGroup",deleteGroup:"/sp/admin/group/delete",removeMember:"/sp/admin/group/removeMember",updateName:"/sp/admin/group/updateName",saveGroup:"/sp/admin/group/create",getCompanyActionPlans:"/sp/admin/account/actionPlan/getCompanyActionPlans",assignActionPlan:"/sp/admin/account/actionPlan/assignActionPlan",removeActionPlan:"/sp/admin/account/actionPlan/removeActionPlan",selectedActionPlanList:"/sp/goals/groupView/getMemberLndCompDetails",assignRemoveOrgPlanModal:"/sp/resources/html/admin/manage-account/members-assignRemoveOrgPlans.html",getCompanyDetails:"/sp/admin/account/getCompanyDetails",sendReminders:"/sp/notifications/sendNotificationWithParams"},vm.companyFeatures={isPrismLens:!1,isOrganizationPlan:!1,isPrism:!1,isBluePrint:!1,isCompetency:!1},vm.allEmails=null,vm.getGroupData=getGroupData,vm.pageCounter=pageCounter,vm.order=order,vm.resetCounter=resetCounter,vm.confirmDelete=confirmDelete,vm.removeGroupLead=removeGroupLead,vm.active=active,vm.createNewGroup=createNewGroup,vm.profileRoute=profileRoute,vm.saveGroupName=saveGroupName,vm.callreload=callreload,vm.groupNameResult=groupNameResult,vm.getAllMembers=getAllMembers,vm.actionToClear=actionToClear,vm.searchForGroups="",vm.showMenu=showMenu,vm.showMenuId=-1,vm.allUsersMenu=!1,vm.showCreateGroup=!1,vm.resetCreateNewGroup=resetCreateNewGroup,vm.renameGroupReset=renameGroupReset,vm.showRenameGroup=!1,vm.blockMembers=blockMembers,vm.blockSingleModal=blockSingleModal,vm.blockMembersModal=blockMembersModal,vm.deleteMultiModal=deleteMultiModal,vm.deleteMultiMembers=deleteMultiMembers,vm.deleteSingleModal=deleteSingleModal,vm.member_confirmDelete=member_confirmDelete,vm.isGroupsDelete=!1,vm.addMembersModal=addMembersModal,vm.memberListSearch="",vm.addedList=[],vm.actionPlansList=[],vm.actionPlansListCopy=[],vm.selectedActionPlan="",vm.actionPlanSettings={},vm.actionPlanUserList=[],vm.actionPlanUserIds=[],vm.removeActionPlan=!1,vm.noPlansSubmit=!1,vm.selectedActionPlans=[],vm.selectedActionPlanIds=[],vm.userActionPlansList=[],vm.currentSelectedActionPlans=[],vm.currentSelectedActionPlanIds=[],vm.activeOrgPlanIds=[],vm.inactiveOrgPlanIds=[],vm.getActionPlans=getActionPlans,vm.editActionPlan=editActionPlan,vm.processActionPlan=processActionPlan,vm.trackactionActionPlans=trackactionActionPlans,vm.isGroupLeadDelete=!1,vm.sendEmailReminders=sendEmailReminders,vm.selfEmail="",vm.viewCompare=function(groupId,groupType,groupName){$scope.groupType=groupType,$scope.groupId=groupId,$scope.groupName=groupName,$scope.groupUsers=vm.ps_pageSetting.userEmail.email,sharedProperties.fireAnalyticsEvent("ERTi | Groups compare Portraits","N/A"),ngDialog.open({template:"/sp/resources/html/common/team-advisor.html",scope:$scope,className:"roles-compare-full-view"})},function(){vm.permissionLevel=sharedProperties.checkPermission();var storedUser=$localStorage.get("loggegdInProfile");vm.selfEmail=storedUser.member.email}(),function(){$localStorage.remove("spProfileTab")}(),$scope.saveNewGroup=function(groupname,groupLeadEmailId){if($scope.errornewGroup=!1,$scope.errornewEmptyGroup=!1,$scope.savenewGroup=!1,""===groupname||void 0===groupname)return $scope.errornewEmptyGroup=!0,!1;ajaxService.getAjaxResponse({url:vm.config.saveGroup,data:$.param({name:groupname,groupLead:groupLeadEmailId})}).then(function(response){"true"===response.Success?($scope.savenewGroup=!0,$scope.errornewGroup=!1,$scope.errornewEmptyGroup=!1,vm.showCreateGroup=!1,vm.createGroupName="",vm.groupList.unshift(response.groupInfo),vm.pageCounter(vm.groupList.length,"nosorting"),vm.ps_getProfileData(groupname),sharedProperties.growlMessage($rootScope.pullInterNationalization("admin.group.saveMessage")),sharedProperties.fireAnalyticsEvent("Manage Account | New Group Added","N/A")):null!=response.error&&($scope.errornewGroup=!0)})},$scope.closeGroup=function(){ngDialog.close("ngdialog1")},vm.ps_profileList=[],vm.ps_fullEmailList=[],vm.ps_allEmails=[],vm.ps_checkedAll=!1,vm.ps_negative=!1,vm.ps_alltoggle=!1,vm.ps_responseRecieved=!1,vm.listingView="ASSESSMENT",vm.competencyList=[],vm.competencyEvaluationInProgress=!1,vm.competencyActionType="MORE",vm.selectedCompetency="",vm.assignClick=!1,vm.competencyAssignRemoveOptions=[],vm.selectedUsersList=[],vm.responseAvailableForCompetency=!1,vm.hasCompetencyRole=!1,vm.ps_groupId="",vm.ps_config={getProfileData:"/sp/admin/group/groupDetails",getAllMembers:"/sp/admin/member",addMember:"/sp/admin/group/addMember",groupLeadDialog:"/sp/resources/html/admin/manage-account/groups-assignGroupLead.html",removeGroupLeadDialog:"/sp/resources/html/admin/manage-account/groups-removeGroupLead.html",removeGroupLead:"/sp/admin/group/removeGroupLead",removeMember:"/sp/admin/group/removeMember",certainDeleteDialog:"/sp/resources/html/admin/manage-account/groups-removeMultiple.html",removeSingle:"/sp/resources/html/admin/manage-account/groups-removeSingle.html",renameGroupDialog:"/sp/admin/group/renameGroup",updateName:"/sp/admin/group/updateName",deleteGroupDialog:"/sp/resources/html/admin/manage-account/groups-delete.html",deleteGroup:"/sp/admin/group/delete",getCompetencyListing:"/sp/admin/competency/getUserCompetency",assignCompetency:"/sp/admin/competency/assignCompetency",removeCompetency:"/sp/admin/competency/removeCompetency"},vm.ps_pageSetting={pageSize:10,intialPageSize:10,userEmail:{email:[]},lastPredicate:"user.name",lastReverse:!1,textSearching:"",disabledInfinite:!1,checkedAll:!1,oneTime:!0},vm.ps_originalpageSetting=angular.copy(vm.ps_pageSetting),vm.ps_errorNotification={errornewGroup:!1,errornewEmptyGroup:!1,selectGroupLead:!1},vm.ps_getProfileData=ps_getProfileData,vm.ps_order=ps_order,vm.ps_callGetAllMembers=ps_callGetAllMembers,vm.ps_active=ps_active,vm.ps_assignGroupLead=ps_assignGroupLead,vm.ps_assignNewGroup=ps_assignNewGroup,vm.ps_removeGroupLead=ps_removeGroupLead,vm.ps_removeGL=ps_removeGL,vm.ps_memberTakeAway=ps_memberTakeAway,vm.ps_showFocus=ps_showFocus,vm.ps_confirmDelete=ps_confirmDelete,vm.ps_certainDelete=ps_certainDelete,vm.ps_renamePopup=ps_renamePopup,vm.ps_deletePopup=ps_deletePopup,vm.ps_deleteUsers=ps_deleteUsers,vm.ps_actionToClear=ps_actionToClear,vm.ps_checkAll=ps_checkAll,vm.ps_countLead=ps_countLead,vm.ps_renameGroup=ps_renameGroup,vm.ps_deleteFullGroup=ps_deleteFullGroup,vm.ps_allEmailPop=ps_allEmailPop,vm.ps_checkUncheck=ps_checkUncheck,vm.ps_resetCounter=ps_resetCounter,vm.switchView=switchView,vm.loadCompetencyDetails=loadCompetencyDetails,vm.assignCompetency=assignCompetency,vm.removeCompetency=removeCompetency,vm.assignRemoveCompetencyModalSingle=assignRemoveCompetencyModalSingle,vm.assignRemoveCompetencyModalMultiple=assignRemoveCompetencyModalMultiple,vm.ps_pageCounter=ps_pageCounter,vm.ps_removeSingleMember=ps_removeSingleMember,vm.iamaccountadmin=!1,vm.ps_saveLeadData=ps_saveLeadData,vm.ps_selectedGroupLead="",vm.ps_addMemberToGroup=ps_addMemberToGroup,vm.displayRole=displayRole,vm.viewMemberDetails=viewMemberDetails,vm.makeMemberList=makeMemberList,vm.ps_profileList.memberSummaryList=[],vm.ps_selectedGroupLead=null,vm.ps_profileList.groupLead=null,vm.searchGroupLead=null}angular.module("spApp").controller("groupListController",groupListController),groupListController.$inject=["$scope","ajaxService","$filter","$state","ngDialog","$timeout","sharedProperties","$rootScope","$localStorage"];