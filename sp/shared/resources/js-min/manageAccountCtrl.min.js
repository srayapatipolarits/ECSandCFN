function manageAccount($scope,ajaxService,$localStorage,$state,$q,sharedProperties,$filter,$rootScope,ngDialog,$timeout){function resetAll(){var showMessage=$localStorage.get("accountRequest"),showMessage1=$localStorage.get("accountRequest1");showMessage?($timeout(function(){_this.activeView="settings",_this.switchViews("settings",!0)},100),sharedProperties.growlMessage($rootScope.pullInterNationalization(showMessage))):showMessage1&&(_this.activeView="members",_this.switchViews("members"),sharedProperties.growlMessage($rootScope.pullInterNationalization(showMessage1)),$timeout(function(){$localStorage.remove("accountRequest1")},300)),void 0!==$state.current.name&&null!==$state.current.name&&""!==$state.current.name&&0!==$state.current.name.length||(_this.activeView="members",_this.switchViews("members")),$localStorage.remove("previousView"),_this.isPreviousView="",_this.clearPrintData()}function switchViews(viewName,clearPrev,email){$(".sp-container").length&&$(".sp-container").remove(),$localStorage.remove("mName"),_this.clearPrintData(),clearPrev?($localStorage.remove("previousView"),_this.isPreviousView=""):_this.isPreviousView=$localStorage.get("previousView")?$localStorage.get("previousView"):"",_this.activeView=viewName,sharedProperties.fireAnalyticsEvent("Manage Account | Viewed Module",_this.activeView),email?$state.transitionTo(_this.activeView,{email:email},{reload:!0}):$state.go(_this.activeView)}var _this=this;_this.activeView="",_this.isPreviousView="",_this.switchViews=switchViews,_this.resetAll=resetAll,_this.permissions={org:!1,competency:!1},_this.clearPrintData=function(){$localStorage.remove("printEmail","printName")},function(){_this.permissionLevel=sharedProperties.checkPermission()}(),$rootScope.openPrintWin=function(url,_this,profileName){window.open(url,"_blank"),window.focus()}}function memberDetailsController($scope,ajaxService,$localStorage,$state,$q,sharedProperties,$filter,$rootScope,ngDialog,$timeout){function getActionPlans(){null===sharedProperties.getOrganization()?ajaxService.getAjaxResponse({url:_this.services.getCompanyActionPlans,data:$.param({includeUserId:!0})}).then(function(response){"true"===response.Success?(sharedProperties.setOrganization(response),actionPlanOperation(response)):null!=response.error&&sharedProperties.ajaxError(response.error)}):actionPlanOperation(sharedProperties.getOrganization())}function actionPlanOperation(response){_this.actionPlansList=response.actionPlanListing,_this.actionPlansList.map(function(e,index){return e.organizationId=index,e})}function editActionPlan(memberObj,action,isSingle){var tempList=angular.copy(_this.actionPlansList);_this.activeOrgPlanIds=[],_this.inactiveOrgPlanIds=[],_this.actionPlansListCopy=[];for(var j=0;j<tempList.length;j++)tempList[j].active?_this.activeOrgPlanIds.push(tempList[j].id):_this.inactiveOrgPlanIds.push(tempList[j].id);_this.actionPlansListCopy=angular.copy(_this.actionPlansList),_this.actionPlanSettings={member:memberObj,action:action,isSingle:isSingle},_this.currentSelectedActionPlans=[],_this.currentSelectedActionPlanIds=[],_this.noPlansSubmit=!1,_this.orgPlansSearch="",ngDialog.open({template:_this.services.assignProgramModal,scope:$scope})}function trackactionActionPlans(data){_this.noPlansSubmit=!1;var existingId=$.inArray(data.id,_this.currentSelectedActionPlanIds);-1===existingId?(_this.currentSelectedActionPlans.push(data),_this.currentSelectedActionPlanIds.push(data.id)):(_this.currentSelectedActionPlans.splice(existingId,1),_this.currentSelectedActionPlanIds.splice(existingId,1))}function processActionPlan(){_this.currentSelectedActionPlanIds.length?(_this.noPlansSubmit=!1,ajaxService.getAjaxResponse({url:_this.services.assignActionPlan,data:{actionPlanIdList:_this.currentSelectedActionPlanIds,userIdList:_this.actionPlanUserIds,groupPermissionsList:[]},headers:{"Content-Type":"application/json"}}).then(function(response){if("true"===response.Success){if(sharedProperties.setOrganization(null),ngDialog.close(),sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.addMemberMsg")),_this.userActionPlansList=[],_this.selectedActionPlans=[],_this.selectedActionPlanIds=[],_this.userProgramMap=response.usrActSum,_this.userActionPlansList=_this.userProgramMap[_this.memberProfile.id],_this.userActionPlansList.length)for(var i=0;i<_this.userActionPlansList.length;i++)_this.selectedActionPlans.push(_this.userActionPlansList[i]),_this.selectedActionPlanIds.push(_this.userActionPlansList[i].id);_this.userProgramMap=null,sharedProperties.fireAnalyticsEvent("Manage Account | Assign Org Plan","N/A")}else null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))})):_this.noPlansSubmit=!0}function removeActionPlan(actionPlan,member){_this.userProgram=actionPlan,_this.assignActionPlanList.actionPlanIdList.push(actionPlan.id),_this.assignActionPlanList.userIdList.push(member.id),_this.deleteMemberInfo=member,ngDialog.open({template:_this.services.removeAction,scope:$scope}).closePromise.then(function(data){_this.assignActionPlanList={actionPlanIdList:[],userIdList:[],groupPermissionsList:[]}})}function deleteSingle(){callremoveActionPlan(_this.assignActionPlanList)}function callremoveActionPlan(obj){ajaxService.getAjaxResponse({url:_this.services.removeActionPlan,data:obj,headers:{"Content-Type":"application/json"}}).then(function(response){if("true"===response.Success){if(sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.removeMember")),sharedProperties.setOrganization(null),ngDialog.close("ngdialog1"),sharedProperties.fireAnalyticsEvent("Manage Account | Remove Org Plan","N/A"),sharedProperties.spilceIndexWithBreak(_this.userActionPlansList,"id",obj.actionPlanIdList[0]),_this.userActionPlansList.length){_this.selectedActionPlans=[],_this.selectedActionPlanIds=[];for(var i=0;i<_this.userActionPlansList.length;i++)_this.selectedActionPlans.push(_this.userActionPlansList[i]),_this.selectedActionPlanIds.push(_this.userActionPlansList[i].id)}}else null!==response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response.error))})}function stepNo(i){return parseInt(i,10)+1}function previewVideo(mode,url){if("Video"===mode)sharedProperties.videoPopUp(url);else{window.open(url,"_blank").focus()}}function showRemoveBox(data){_this.winWidth=$(window).width(),_this.winHeight=$(window).height()+100+"px",_this.groupData=data,ngDialog.open({template:"/sp/resources/html/admin/manage-account/memberDetails-groupRemove.html",scope:$scope})}function previewOrgPlan(planObj){ajaxService.getAjaxResponse({url:_this.services.getActionPlan,data:$.param({actionPlanId:planObj.id})}).then(function(response){"true"===response.Success?(_this.actionPlanPreviewDetail=response.actionPlan,_this.actionPlan.preview=!0,_this.currentActionPlan=0,sharedProperties.fireAnalyticsEvent("Manage Account | Preview Org Plan - Member L&D","N/A"),$timeout(function(){_this.heightAdj={height:$(".account-admin-previw").height()}},200)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function previewCompetency(id){_this.overlayDim={width:$(".new-cols.content-col").width(),height:$(".new-cols.content-col").height()},sharedProperties.fireAnalyticsEvent("Manage Account | Preview Competency - Member L&D","N/A"),getCompetencyProfileList(id)}function getCompetencyProfileList(id){ajaxService.getAjaxResponse({url:_this.services.getCompetencyProfiles,data:$.param({memberEmail:_this.storedEmail})}).then(function(response){"true"===response.Success?(_this.competencyProfileDetail=response.competencyProfile,_this.competencyListing=_this.competencyProfileDetail.competencyList,_this.competencyPreview=!0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getERTiDetails(){ajaxService.getAjaxResponse({url:_this.services.getERTi,data:$.param({memberEmail:_this.storedEmail})}).then(function(response){if("true"===response.Success){if(_this.autoLearningStatus=response.memberLndCompDetails.autoLearning,_this.goalsList=response.memberLndCompDetails.goals?response.memberLndCompDetails.goals:[],_this.competencyProfile=response.memberLndCompDetails.competencyProfile,_this.userActionPlansList=response.memberLndCompDetails.actionPlans?response.memberLndCompDetails.actionPlans:[],_this.actionPlanUserList.push(_this.memberProfile),_this.actionPlanUserIds.push(_this.memberProfile.id),_this.userActionPlansList)for(var i=0;i<_this.userActionPlansList.length;i++)_this.selectedActionPlans.push(_this.userActionPlansList[i]),_this.selectedActionPlanIds.push(_this.userActionPlansList[i].id);_this.getActionPlans()}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function saveNewGroup(groupName){if(_this.errornewGroup=!1,_this.errornewEmptyGroup=!1,""===groupName||void 0===groupName)return _this.errornewEmptyGroup=!0,!1;ajaxService.getAjaxResponse({url:_this.services.saveGroup,data:$.param({name:groupName,groupLead:""})}).then(function(response){if("true"===response.Success){var newGroup=response.groupInfo,_tempGroupListMerge=angular.copy(_this.groupsSearchList),_tempGroupList=angular.copy(_this.groupsList);_tempGroupListMerge.push(newGroup),_tempGroupList.push(newGroup),_this.groupsSearchList=angular.copy(_tempGroupListMerge),_this.groupsList=angular.copy(_tempGroupList),_this.showCreateGroupSection=!1,addToGroup(newGroup,!0),sharedProperties.setGroup([]),sharedProperties.setMember([])}else null!==response.error&&(_this.errornewGroup=!0)})}function percentCalc(total,number,floating){return void 0===floating?(Math.round(number/total*100)||0)+"%":parseFloat(number/total*100).toFixed(floating)}function closeMemberSection(){var v=$localStorage.get("previousView");$scope.$parent.ctrl.switchViews(v)}function redirectToGroup(groupName){$localStorage.set("selectedGroupName",groupName),$localStorage.remove("previousView"),$scope.$parent.ctrl.switchViews("groups")}function addToGroup(groupObj,newGroup){var _groupObj=newGroup?groupObj:groupObj.originalObject;ajaxService.getAjaxResponse({url:_this.services.groupAdd,data:$.param({groupNameList:_groupObj.name,memberEmailList:_this.storedEmail,isGroupLead:!1})}).then(function(response){if("true"===response.Success){var tempIndex,tempMem=[],tempGrp=[],tempMrg=[];tempMrg=angular.copy(_this.mergedGroupsList),tempGrp=angular.copy(_this.groupsSearchList),tempMem=angular.copy(_this.memberGroupsList),$.each(tempGrp,function(i,j){tempGrp[i].id===_groupObj.id&&(tempMrg.push(tempGrp[i]),tempIndex=i)}),_this.mergedGroupsList=angular.copy(tempMrg),tempGrp.splice(tempIndex,1),_this.groupsSearchList=angular.copy(tempGrp),tempMem.push({groupId:_groupObj.id,groupLead:!1,name:groupObj.title}),_this.memberGroupsList=angular.copy(tempMem),sharedProperties.setGroup([]),sharedProperties.setMember([]),sharedProperties.fireAnalyticsEvent("Manage Account | Member added to group","N/A")}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function removeFromGroup(groupObj){ajaxService.getAjaxResponse({url:_this.services.groupRemove,data:$.param({name:groupObj.name,memberEmail:_this.storedEmail})}).then(function(response){if("true"===response.Success){var tempIndex0,tempIndex1,tempMem=[],tempGrp=[],tempMrg=[];tempMrg=angular.copy(_this.mergedGroupsList),tempGrp=angular.copy(_this.groupsSearchList),tempMem=angular.copy(_this.memberGroupsList),$.each(tempMrg,function(i,j){if(tempMrg[i].id===groupObj.id)return void(tempIndex0=i)}),tempMrg.splice(tempIndex0,1),_this.mergedGroupsList=angular.copy(tempMrg),$.each(tempMem,function(i,j){if(tempMem[i].groupId===groupObj.id)return void(tempIndex1=i)}),tempMem.splice(tempIndex1,1),_this.memberGroupsList=angular.copy(tempMem),tempGrp.push(groupObj),_this.groupsSearchList=angular.copy(tempGrp),ngDialog.close("ngdialog1"),sharedProperties.setGroup([]),sharedProperties.setMember([]),sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.memberRemoveGroup")),sharedProperties.fireAnalyticsEvent("Manage Account | Member removed from Group","N/A")}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function updateGroupLeadStatus(groupObj,flag){ajaxService.getAjaxResponse({url:_this.services.groupAdd,data:$.param({groupNameList:groupObj.name,memberEmailList:_this.storedEmail,isGroupLead:flag})}).then(function(response){if("true"===response.Success){var tempMem=[],tempGrp=[],tempMrg=[],tempGrp1=[];tempMrg=angular.copy(_this.mergedGroupsList),tempGrp=angular.copy(_this.groupsSearchList),tempGrp1=angular.copy(_this.groupsList),tempMem=angular.copy(_this.memberGroupsList),$.each(tempMrg,function(i,j){if(tempMrg[i].id===groupObj.id)return void(tempMrg[i].groupLead=flag?_this.userInfo:null)}),_this.mergedGroupsList=angular.copy(tempMrg),$.each(tempGrp,function(i,j){if(tempGrp[i].id===groupObj.id)return void(tempGrp[i].groupLead=flag?_this.userInfo:null)}),_this.groupsSearchList=angular.copy(tempGrp),$.each(tempGrp1,function(i,j){if(tempGrp1[i].id===groupObj.id)return void(tempGrp1[i].groupLead=flag?_this.userInfo:null)}),_this.groupsList=angular.copy(tempGrp1),$.each(tempMem,function(i,j){if(tempMem[i].groupId===groupObj.id)return void(tempMem[i].groupLead=flag)}),_this.memberGroupsList=angular.copy(tempMem)}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function checkGroupLeadStatus(groupObj){for(var i=0;i<_this.groupsList.length;i++)if(_this.groupsList[i].id===groupObj.id)return null!==_this.groupsList[i].groupLead&&_this.groupsList[i].groupLead.email===_this.storedEmail}function disableGroupLead(groupObj){for(var i=0;i<_this.groupsList.length;i++)if(_this.groupsList[i].id===groupObj.id)return null!==_this.groupsList[i].groupLead&&_this.groupsList[i].groupLead.email!==_this.storedEmail}function getGroups(){ajaxService.getAjaxResponse({url:_this.services.getGroups}).then(function(response){if("true"===response.Success){_this.masterGroupsList=[],_this.groupsList=[],_this.mergedGroupsList=[],_this.masterGroupsList=response.groupInfoList,_this.groupsList=angular.copy(_this.masterGroupsList);var tempList=[],searchList=[],tempIds=[];$.each(_this.groupsList,function(i,j){$.each(_this.memberGroupsList,function(k,l){if(_this.groupsList[i].id===_this.memberGroupsList[k].groupId)return tempList.push(_this.groupsList[i]),void tempIds.push(_this.memberGroupsList[k].groupId)})}),$.each(_this.groupsList,function(i,j){-1===$.inArray(_this.groupsList[i].id,tempIds)&&searchList.push(_this.groupsList[i])}),_this.mergedGroupsList=angular.copy(tempList),_this.groupsSearchList=angular.copy(searchList)}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function updateMemberProfile(){if(_this.profileSubmitted=!1,_this.memberProfileForm.$valid){_this.profileSubmitted=!1;var profileData={firstName:_this.memberProfile.firstName,lastName:_this.memberProfile.lastName,title:_this.memberProfile.title,email:_this.memberProfile.email,gender:_this.memberProfile.gender,month:_this.memberProfile.month,day:_this.memberProfile.day,year:_this.memberProfile.year,phone:_this.memberProfile.phone,linkedInUrl:_this.memberProfile.linkedInUrl,name:_this.memberProfile.firstName+" "+_this.memberProfile.lastName,country:_this.memberProfile.country,address1:_this.memberProfile.addressLine1,address2:_this.memberProfile.addressLine2,city:_this.memberProfile.city,state:_this.memberProfile.state,zip:_this.memberProfile.zipCode,userInitials:_this.memberProfile.firstName.charAt(0)+_this.memberProfile.lastName.charAt(0)};ajaxService.getAjaxResponse({url:_this.services.update,data:$.param(profileData)}).then(function(response){if("true"===response.Success){_this.editProfile=!1,sharedProperties.setMember([]);var temp=angular.copy(_this.memberProfileBackup),newData=$.extend(temp,profileData);newData.zipCode=profileData.zip,newData.addressLine1=profileData.address1,newData.addressLine2=profileData.address2,_this.memberProfileBackup=angular.copy(newData),_this.memberProfile=angular.copy(_this.memberProfileBackup),sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.personalDetailUpdated")),sharedProperties.fireAnalyticsEvent("Manage Account | Member Profile Updated","N/A")}else null!==response.error&&(sharedProperties.ajaxError(response.error),cancelUpdateProfile())})}else _this.profileSubmitted=!0}function cancelUpdateProfile(){_this.editProfile=!1,_this.profileSubmitted=!1,_this.memberProfile=angular.copy(_this.memberProfileBackup)}function stateCheck(country){switch(_this.showStatesUS=!1,_this.showStatesCanada=!1,_this.showStatesOthers=!1,country){case"United States":_this.showStatesUS=!0;break;case"Canada":_this.showStatesCanada=!0;break;case"US":_this.showStatesUS=!0;break;case"CA":_this.showStatesCanada=!0;break;default:_this.showStatesUS=!1,_this.showStatesCanada=!1,_this.showStatesOthers=!0}}function resetAddress(){_this.memberProfile.zipCode="",_this.memberProfile.city="",_this.memberProfile.state="",_this.memberProfile.addressLine1="",_this.memberProfile.addressLine2=""}function getMemberDetails(email){ajaxService.getAjaxResponse({url:_this.services.get,data:$.param({userEmail:email}).replace(/%40/g,"@")}).then(function(response){if("true"===response.Success){_this.memberProfile=$.extend(response.profileForm,response.userSummary,response.address),_this.memberProfileBackup=angular.copy(_this.memberProfile),$localStorage.set("mName",_this.memberProfileBackup.name),$localStorage.set("printName",_this.memberProfileBackup.name),_this.userInfo=response.userSummary,_this.userDeactivated=response.deactivated,_this.roles=response.roles.length?response.roles:[],_this.userTagList=null!==response.tagList&&response.tagList.length?response.tagList:[],_this.existingTags=null!==response.tagList&&response.tagList.length?response.tagList.join():"",_this.memberGroupsListMaster=response.groupList,_this.memberGroupsList=angular.copy(_this.memberGroupsListMaster),stateCheck(_this.memberProfile.country);var _features=response.features.length?response.features:[];_this.showSpectrumPermission=-1!==_features.indexOf("Spectrum"),_this.showPulsePermission=-1!==_features.indexOf("Pulse"),_this.showCompetencyPermission=-1!==_features.indexOf("Competency"),_this.companyFeatures={isPrismLens:-1!==_features.indexOf("PrismLens"),isOrganizationPlan:-1!==_features.indexOf("OrganizationPlan"),isPrism:-1!==_features.indexOf("Prism"),isBluePrint:-1!==_features.indexOf("Blueprint"),isCompetency:-1!==_features.indexOf("Competency")},_this.userPermissions={isAccountAdministrator:-1!==_this.roles.indexOf("AccountAdministrator"),isAdministrator:-1!==_this.roles.indexOf("Administrator"),isHiringToolAllowed:-1!==_this.roles.indexOf("Hiring"),isWorkspacePulseAllowed:-1!==_this.roles.indexOf("Pulse"),isSpectrumAllowed:-1!==_this.roles.indexOf("Spectrum"),isCompetencyAllowed:-1!==_this.roles.indexOf("CompetencyAdmin")},_this.assessmentStatus=response.userSummary.userStatus}else null!==response.error&&(sharedProperties.ajaxError(response.error),$scope.$parent.ctrl.switchViews("members",!0))})}function updatePermissions(flag,type){var params={userEmail:_this.storedEmail};$.extend(params,{isAdministrator:_this.userPermissions.isAdministrator,isAccountAdministrator:_this.userPermissions.isAccountAdministrator,isHiringToolAllowed:_this.userPermissions.isHiringToolAllowed,isWorkspacePulseAllowed:"pulse"===type?flag:_this.userPermissions.isWorkspacePulseAllowed,isSpectrumAllowed:"spectrum"===type?flag:_this.userPermissions.isSpectrumAllowed,isCompetencyAllowed:"competency"===type?flag:_this.userPermissions.isCompetencyAllowed}),ajaxService.getAjaxResponse({url:_this.services.permissions,data:$.param(params)}).then(function(response){"true"===response.Success?(sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.statusUpdated")),sharedProperties.fireAnalyticsEvent("Manage Account | Update Member Permissions",type+" - "+flag)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function initMemberProfile(){null!==$localStorage.get("previousView")&&""!==$localStorage.get("previousView")&&void 0!==$localStorage.get("previousView")||$localStorage.set("previousView","members");var storedUser=$localStorage.get("loggegdInProfile"),userRoles=null!==$localStorage.get("loggegdInProfile")?$localStorage.get("loggegdInProfile").member.roles:[];_this.storedEmail=$state.params.email,$localStorage.set("printEmail",_this.storedEmail),_this.selfEmail=storedUser.member.email,_this.accountPermissionOptions.adminAccess=-1!==userRoles.indexOf("AccountAdministrator"),_this.storedEmail&&(_this.memberNav="Profile",getMemberDetails(_this.storedEmail)),null!==$localStorage.get("memberDetailsNav")?_this.memberNav=$localStorage.get("memberDetailsNav"):_this.memberNav="Profile",_this.countries=$localStorage.get("countriesFullList").countries}function setMemberDetailsView(memberDetailsView){_this.memberNav=memberDetailsView,$localStorage.set("memberDetailsNav",memberDetailsView)}var _this=this;_this.initMemberProfile=initMemberProfile,_this.getMemberDetails=getMemberDetails,_this.stateCheck=stateCheck,_this.updateMemberProfile=updateMemberProfile,_this.cancelUpdateProfile=cancelUpdateProfile,_this.resetAddress=resetAddress,_this.getGroups=getGroups,_this.memberProfile={},_this.memberProfileBackup={},_this.storedEmail="",_this.editProfile=!1,_this.profileSubmitted=!1,_this.showStatesUS=!1,_this.showStatesCanada=!1,_this.showStatesOthers=!1,_this.memberProfileForm={},_this.masterGroupsList=[],_this.memberGroupsListMaster=[],_this.groupsList=[],_this.memberGroupsList=[],_this.mergedGroupsList=[],_this.groupsSearchList=[],_this.groupActions={add:addToGroup,remove:removeFromGroup,update:updateGroupLeadStatus,check:checkGroupLeadStatus,disabled:disableGroupLead},_this.showPulsePermission=!1,_this.showSpectrumPermission=!1,_this.showCompetencyPermission=!1,this.accountPermissionOptions={},_this.userPermissions={isAccountAdministrator:!1,isAdministrator:!1,isHiringToolAllowed:!1,isWorkspacePulseAllowed:!1,isSpectrumAllowed:!1,isCompetencyAllowed:!1},_this.services={get:"/sp/admin/user",update:"/sp/admin/user/update/profile",getGroups:"/sp/admin/group/all",groupAdd:"/sp/admin/group/addMember",groupRemove:"/sp/admin/group/removeMember",permissions:"/sp/admin/user/updatePermissions",saveGroup:"/sp/admin/group/create",getERTi:"/sp/goals/groupView/getMemberLndCompDetails",getCompetencyProfiles:"/sp/competency/get",getActionPlan:"/sp/admin/account/actionPlan/getDetails",getCompanyActionPlans:"/sp/admin/account/actionPlan/getCompanyActionPlans",removeActionPlan:"/sp/admin/account/actionPlan/removeActionPlan",removeAction:"/sp/resources/html/admin/manage-account/account-admin-user-deleteProgram.html",assignProgramModal:"/sp/resources/html/admin/manage-account/user-assignPrograms.html",assignActionPlan:"/sp/admin/account/actionPlan/assignActionPlan"},_this.companyFeatures={isPrismLens:!1,isOrganizationPlan:!1,isPrism:!1,isBluePrint:!1,isCompetency:!1},_this.userTagList=[],_this.existingTags="",_this.roles=[],_this.updatePermissions=updatePermissions,_this.assessmentStatus="",_this.redirectToGroup=redirectToGroup,_this.closeMemberSection=closeMemberSection,_this.showCreateGroupSection=!1,_this.saveNewGroup=saveNewGroup,_this.errornewGroup=!1,_this.errornewEmptyGroup=!1,_this.memberNav="Profile",_this.getERTiDetails=getERTiDetails,_this.previewCompetency=previewCompetency,_this.previewOrgPlan=previewOrgPlan,_this.getCompetencyProfileList=getCompetencyProfileList,_this.competencyPreview=!1,_this.actionPlan={},_this.actionPlan.preview=!1,_this.showDoneBtn=!0,_this.currentActionPlan=0,_this.setMemberDetailsView=setMemberDetailsView,_this.showRemoveBox=showRemoveBox,_this.percentCalc=percentCalc,_this.previewVideo=previewVideo,_this.stepNo=stepNo,_this.profileTagsList=[],_this.processTagsList=[],_this.memberTags=[],_this.editActionPlan=editActionPlan,_this.getActionPlans=getActionPlans,_this.trackactionActionPlans=trackactionActionPlans,_this.processActionPlan=processActionPlan,_this.deleteSingle=deleteSingle,_this.removeActionPlan=removeActionPlan,_this.actionPlansList=[],_this.actionPlansListCopy=[],_this.selectedActionPlan="",_this.actionPlanSettings={},_this.actionPlanUserList=[],_this.actionPlanUserIds=[],_this.noPlansSubmit=!1,_this.selectedActionPlans=[],_this.selectedActionPlanIds=[],_this.userActionPlansList=[],_this.activeOrgPlanIds=[],_this.inactiveOrgPlanIds=[],_this.actionPlan={id:"",cachePreview:!1,preview:!1},_this.companyActionPlanList=[],_this.companyActionPlanDetail=null,_this.assignActionPlanList={actionPlanIdList:[],userIdList:[],groupPermissionsList:[]},_this.userProgram={},_this.processTags=function(type){_this.processTagsList=angular.copy(_this.profileTagsList),ajaxService.getAjaxResponse({url:"/sp/admin/user/tag",data:$.param({userEmail:_this.memberProfileBackup.email,tagName:_this.processTagsList,op:"add"===type?"SET":"REMOVE"})}).then(function(response){if("true"===response.Success){sharedProperties.setGroup([]),sharedProperties.setMember([]);var tempList=angular.copy(_this.userTagList);"add"===type?tempList.push(_this.processTagsList):-1!==tempList.indexOf(_this.processTagsList)&&tempList.splice(tempList.indexOf(_this.processTagsList),1),_this.userTagList=angular.copy(tempList),_this.existingTags=angular.copy(_this.userTagList.join(",")),_this.memberTags=null}else null!==response.error&&(_this.memberTags=null,sharedProperties.ajaxError(response.error))})},_this.addProfileTag=function(tag){_this.profileTagsList=tag.text.trim(),_this.processTagsList=null,_this.processTags("add")},_this.removeProfileTag=function(tag,custom){_this.profileTagsList=custom?tag:tag.text.trim(),_this.processTagsList=null,_this.processTags("remove")}}function prismLensAdminController($scope,ajaxService,$filter,ngDialog,sharedProperties,$rootScope,$timeout,$q,$localStorage){function shrinkDt(dt){var dtSplit;if(void 0!==dt&&null!==dt&&""!==dt)return dtSplit=dt.split(" "),dtSplit[0].substring(0,3)+" "+dtSplit[1]+" "+dtSplit[2]}function getAllFeedbackMembers(){ajaxService.getAjaxResponse({url:_this.services.getAllFeedbackMembers,data:$.param({groupMemberEmail:sharedProperties.getParam("email")})}).then(function(response){"true"===response.Success?_this.getAllMembersToInvite=response:null!==response.error&&sharedProperties.ajaxError(response.error)})}function getFeedbackDetails(memberObj){_this.feedbackEnable=!1,_this.featuresSectionSelected!==memberObj.id?_this.featuresSectionSelected=memberObj.id:_this.featuresSectionSelected=-1,"VALID"===memberObj.userStatus&&ajaxService.getAjaxResponse({url:_this.services.getFeedbackDetails,data:$.param({feadbackUserId:memberObj.id,groupMemberEmail:sharedProperties.getParam("email")})}).then(function(response){"true"===response.Success?(_this.getInviteMemberDetail=response,_this.swotMemId=memberObj.id,_this.swotanalysis=response.swotanalysis,void 0!==response.swotanalysis&&(_this.feedbackEnable=!0)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getFeedbackTeam(){getAllFeedbackMembers(),ajaxService.getAjaxResponse({url:_this.services.getFeedbackTeam+"?accountDashboardRequest=true&groupMemberEmail="+sharedProperties.getParam("email"),method:"get"}).then(function(response){"true"===response.Success?(_this.feedbackDataResponse=!0,_this.feedbackTeamList=response.feedbackTeam):null!==response.error&&sharedProperties.ajaxError(response.error)})}function resetErrors(){_this.formErrors={dateCheck:!1,emailCheck:!1,firstName:!1,lastName:!1}}function showHideRequestFeedbackForm(){_this.showRequestFeedbackForm=!_this.showRequestFeedbackForm,$timeout(function(){prepareDatePicker()},200),resetErrors()}function loadTags(query){_this.showNames=!1,resetErrors();var deferred=$q.defer(),result=_this.getAllMembersToInvite.feedbackUsers.filter(function(e){return-1!==e.name.toLowerCase().indexOf(query.toLowerCase())||-1!==e.email.toLowerCase().indexOf(query.toLowerCase())});return deferred.resolve(result),deferred.promise}function tagAdded(tag){_this.showNames=!1,_this.searchTag.push(tag.email),_this.selectedUser=tag,void 0!==tag.id&&null!==tag.id&&""!==tag.id||(_this.showNames=!0)}function tagRemoved(tag){resetErrors(),_this.showNames=!1,_this.selectedUser=null,_this.searchTag.splice(_this.searchTag.indexOf(tag.email),1)}function sendRequestFeedbackAdmin(date,fName,lName){if(resetErrors(),void 0!==date&&null!==date&&""!==date||(_this.formErrors.dateCheck=!0),void 0===_this.selectedUser||null===_this.selectedUser||""===_this.selectedUser?_this.formErrors.emailCheck=!0:(void 0!==_this.selectedUser.email&&null!==_this.selectedUser.email&&""!==_this.selectedUser.email||(_this.formErrors.emailCheck=!0),void 0!==_this.selectedUser.id&&null!==_this.selectedUser.id&&""!==_this.selectedUser.id||(void 0===fName||null===fName||""===fName?_this.formErrors.firstName=!0:(_this.formErrors.firstName=!1,_this.selectedUser.firstName=fName),void 0===lName||null===lName||""===lName?_this.formErrors.lastName=!0:(_this.formErrors.lastName=!1,_this.selectedUser.lastName=lName))),!1===_this.formErrors.dateCheck&&!1===_this.formErrors.emailCheck&&!1===_this.formErrors.firstName&&!1===_this.formErrors.lastName){var param={firstName:_this.selectedUser.firstName,lastName:_this.selectedUser.lastName,email:_this.selectedUser.email,requestType:void 0===_this.selectedUser.id||null===_this.selectedUser.id||""===_this.selectedUser.id?"EXTERNAL":"INTERNAL",referenceType:"Colleague",comment:"",endDate:date,groupMemberEmail:sharedProperties.getParam("email")};ajaxService.getAjaxResponse({url:_this.services.submitFeedbackRequest,data:$.param(param)}).then(function(response){"true"===response.Success?(getFeedbackTeam(),showHideRequestFeedbackForm(),sharedProperties.growlMessage($rootScope.pullInterNationalization("prismLens.memberInvited")),sharedProperties.fireAnalyticsEvent("Manage Account | Request Prism Lens","N/A")):null!==response.error&&sharedProperties.ajaxError(response.error)})}}var _this=this;_this.services={getAllFeedbackMembers:"/sp/feedback/getAllFeedbackMembers",getFeedbackTeam:"/sp/feedback/getFeedbackTeam",getFeedbackDetails:"/sp/feedback/getFeedbackDetails",submitFeedbackRequest:"/sp/feedback/submitFeedbackRequest"},_this.getAllFeedbackMembers=getAllFeedbackMembers,_this.getFeedbackTeam=getFeedbackTeam,_this.getFeedbackDetails=getFeedbackDetails,_this.feedbackEnable=!1,_this.formErrors={dateCheck:!1,emailCheck:!1,firstName:!1,lastName:!1},_this.showHideRequestFeedbackForm=showHideRequestFeedbackForm,_this.sendRequestFeedbackAdmin=sendRequestFeedbackAdmin,_this.shrinkDt=shrinkDt,_this.loadTags=loadTags,_this.tagAdded=tagAdded,_this.tagRemoved=tagRemoved,_this.showNames=!1,_this.searchTag=[],_this.selectedUser={},_this.showRequestFeedbackForm=!1,_this.nameDataForm={},_this.feedbackDataResponse=!1,_this.featuresSectionSelected=-1;var prepareDatePicker=function(){$scope.untilDate=null,moment.locale(sharedProperties.provideVendorSpecificLocale("datePicker")),$('input[name="endDate"]').daterangepicker({showDropdowns:!1,minDate:moment(),locale:{format:"MM/DD/YYYY"},alwaysShowCalendars:!0,singleDatePicker:!0,autoUpdateInput:!1,opens:"right"},function(start,end,label){$scope.$apply(function(){$scope.untilDate=start.format("MM/DD/YYYY")})})}}function manageSettingsController($scope,ajaxService,$localStorage,$state,$q,sharedProperties,$filter,$rootScope,ngDialog,$timeout){function themeManagerCleanup(){$(".sp-container").length&&$(".sp-container").remove()}function viewMemberDetails(email,flag){$localStorage.set("previousView",$scope.$parent.ctrl.activeView),$scope.$parent.ctrl.switchViews("memberDetails",!1,email)}function updateRenewalStatus(flag,plan){ajaxService.getAjaxResponse({url:flag?_this.services.activateRenewal:_this.services.deactivateRenewal,data:$.param({spPlanType:"Primary"})}).then(function(response){"true"===response.Success?(_this.autoRenewalStatus=flag,
sharedProperties.growlMessage(flag?$rootScope.pullInterNationalization("manageAccountContent.subscriptionrenewal"):$rootScope.pullInterNationalization("manageAccountContent.subscriptionCancelled"))):null!==response.error&&sharedProperties.ajaxError(response.error)})}function processAccountRequest(e){_this.addAccountsForm.submitted=!1,_this.addAccountsForm.$valid&&_this.requestAccounts>0?(_this.addAccountsForm.submitted=!1,$localStorage.set("accountRequest","manageAccountContent.requestSubmit"),$localStorage.remove("memberDetailsNav","settingsNav")):(e.preventDefault(),_this.addAccountsForm.submitted=!0)}function requestForAccounts(requestType){_this.requestAccounts=0,_this.requestType=requestType;var storedUser=$localStorage.get("loggegdInProfile");_this.companyEmail=storedUser.member.email,ngDialog.open({template:"/sp/resources/html/admin/manage-account/settings-addAccounts.html",scope:$scope})}function blockMembers(flag){ajaxService.getAjaxResponse({url:_this.services.blockMembers,data:$.param({isBlockAllUsers:flag})}).then(function(response){"true"===response.Success?(sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.statusUpdated")),sharedProperties.fireAnalyticsEvent("Manage Account | Block All Members",flag)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function restrictAdvisor(flag){ajaxService.getAjaxResponse({url:_this.services.restrictRA,data:$.param({restrictAdvisor:flag})}).then(function(response){"true"===response.Success?(sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.statusUpdated")),sharedProperties.fireAnalyticsEvent("Manage Account | Restrict RA Advisor",flag)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function cancelCompanyUpdate(){_this.editCompanyDetails=!1,_this.formSubmitted=!1,_this.companyDetails=angular.copy(_this.companyDetailsBackup)}function updateCompanyDetails(){_this.formSubmitted=!1,_this.companyInfoForm.$valid&&_this.companyDetails.numberOfEmployees>0?(_this.formSubmitted=!1,ajaxService.getAjaxResponse({url:_this.services.updateCompanyInfo,data:$.param(_this.companyDetails)}).then(function(response){"true"===response.Success?(_this.companyDetailsBackup=angular.copy(_this.companyDetails),_this.editCompanyDetails=!1,sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.companyDetailUpdated")),sharedProperties.fireAnalyticsEvent("Manage Account | Update Company details","N/A")):null!==response.error&&sharedProperties.ajaxError(response.error),cancelCompanyUpdate()})):_this.formSubmitted=!0}function getCompanyDetails(){ajaxService.getAjaxResponse({url:_this.services.getCompanyInfo}).then(function(response){"true"===response.Success?(_this.companyInfo=response.company,_this.companyDetails={name:_this.companyInfo.name,industry:_this.companyInfo.industry,numberOfEmployees:_this.companyInfo.numberOfEmployees,phoneNumber:_this.companyInfo.phoneNumber,country:_this.companyInfo.address.country,address1:_this.companyInfo.address.addressLine1,address2:_this.companyInfo.address.addressLine2,city:_this.companyInfo.address.city,state:_this.companyInfo.address.state,zip:_this.companyInfo.address.zipCode},_this.companyDetailsBackup=angular.copy(_this.companyDetails),stateCheck(_this.companyDetails.country),_this.showRelationshipAdvisor=-1!==_this.companyInfo.featureList.indexOf("RelationShipAdvisor"),_this.showThemeManager=-1!==_this.companyInfo.featureList.indexOf("CompanyTheme"),_this.showEmailManager=-1!==_this.companyInfo.featureList.indexOf("EmailManagement"),_this.restrictRelationShipAdvisor=_this.companyInfo.restrictRelationShipAdvisor,_this.blockAllMembers=_this.companyInfo.blockAllMembers):null!==response.error&&sharedProperties.ajaxError(response.error)})}function getAccountDetails(){ajaxService.getAjaxResponse({url:_this.services.getAccountInfo,data:$.param({planType:"Primary"})}).then(function(response){"true"===response.Success?(_this.accountInfo=response,_this.accountDetails=response.account,_this.existingAdmins=response.planAdminUsers,_this.companySettings=response.profileSettings,_this.memberCounts=response.account.spPlans,_this.isPrimaryPlanActive=void 0!==response.account.spPlans.Primary&&null!==response.account.spPlans.Primary&&""!==response.account.spPlans.Primary,_this.isHiringPlanActive=void 0!==response.account.spPlans.IntelligentHiring&&null!==response.account.spPlans.IntelligentHiring&&""!==response.account.spPlans.IntelligentHiring,_this.autoRenewalStatus="ACTIVE"===_this.memberCounts.Primary.planStatus,_this.initLoaded=!0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function stateCheck(country){switch(_this.showStatesUS=!1,_this.showStatesCanada=!1,_this.showStatesOthers=!1,country){case"United States":_this.showStatesUS=!0;break;case"Canada":_this.showStatesCanada=!0;break;case"US":_this.showStatesUS=!0;break;case"CA":_this.showStatesCanada=!0;break;default:_this.showStatesUS=!1,_this.showStatesCanada=!1,_this.showStatesOthers=!0}}function resetAddress(){_this.companyDetails.zip="",_this.companyDetails.city="",_this.companyDetails.state="",_this.companyDetails.address1="",_this.companyDetails.address2=""}function removeAdminAccess(type,userObj){_this.updatedPlanType=type,_this.deleteMemberInfo=userObj,ngDialog.open({template:"/sp/resources/html/admin/manage-account/settings-removeAdmin.html",scope:$scope})}function addAdminAccess(type){_this.addAdminType=type,_this.selectedAdminsList=[],ajaxService.getAjaxResponse({url:_this.services.getAdminMembers,data:$.param({planType:type})}).then(function(response){if("true"===response.Success){_this.masterMemberList=response.memberList.length?response.memberList:[],_this.selectMemberList=angular.copy(_this.masterMemberList);ngDialog.open({template:"/sp/resources/html/admin/manage-account/settings-selectAdmins.html",scope:$scope}).closePromise.then(function(data){_this.memberListSearch=""})}else null!==response.error&&sharedProperties.ajaxError(response.error)})}function removeAdmin(email){ajaxService.getAjaxResponse({url:_this.services.removeAdmin,data:$.param({planType:_this.updatedPlanType,userEmail:email})}).then(function(response){if("true"===response.Success){var tempList=angular.copy(_this.existingAdmins);"Primary"===_this.updatedPlanType?jQuery.each(tempList.Primary,function(i,j){if(tempList.Primary[i].email===email)return tempList.Primary.splice(i,1),!1}):jQuery.each(tempList.IntelligentHiring,function(i,j){if(tempList.IntelligentHiring[i].email===email)return tempList.IntelligentHiring.splice(i,1),!1}),_this.existingAdmins=angular.copy(tempList),sharedProperties.setMember([]),ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.AdminRemoved")),sharedProperties.fireAnalyticsEvent("Manage Account | Remove Admin","Primary"===_this.updatedPlanType?"Account":"Hiring")}else null!==response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response.error))})}function addSelectedAdmin(memberObj){ajaxService.getAjaxResponse({url:_this.services.addAdmin,data:$.param({planType:_this.addAdminType,userEmail:memberObj.email})}).then(function(response){if("true"===response.Success){var tempList=angular.copy(_this.existingAdmins);"Primary"===_this.addAdminType?tempList.Primary.push(memberObj):tempList.IntelligentHiring.push(memberObj),_this.existingAdmins=angular.copy(tempList),_this.selectedAdminsList.push(memberObj.email),sharedProperties.setMember([]),sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.AdminAdded")),sharedProperties.fireAnalyticsEvent("Manage Account | Add Admin","Primary"===_this.addAdminType?"Account":"Hiring")}else null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))})}function getTransactionsHistory(){_this.overlayDim={width:$(".new-cols.content-col").width(),height0:parseInt($(".new-cols.content-col").height()-100)+"px",height1:parseInt($(".new-cols.content-col").height()-70)+"px"},ajaxService.getAjaxResponse({url:_this.services.transactions,data:$.param({spPlanType:"Primary"})}).then(function(response){"true"===response.Success?(_this.paymentDetails=response.paymentHistory,$("html,body").animate({scrollTop:0},200)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function initSettings(){$localStorage.get("accountRequest")?($timeout(function(){$localStorage.remove("accountRequest")},200),_this.settingsNav="billingDetails"):null!==$localStorage.get("settingsNav")?_this.settingsNav=$localStorage.get("settingsNav"):_this.settingsNav="admins";var storedUser=$localStorage.get("loggegdInProfile");_this.selfEmail=storedUser.member.email,_this.initLoaded||(getCompanyDetails(),getAccountDetails()),_this.countries=$localStorage.get("countriesFullList").countries}function setSettingsView(settingsView){_this.settingsNav=settingsView,$localStorage.set("settingsNav",settingsView)}var _this=this;_this.companyInfo={},_this.accountInfo={},_this.companyDetails={},_this.companyDetailsBackup={},_this.companyInfoForm={},_this.showStatesUS=!1,_this.showStatesCanada=!1,_this.showStatesOthers=!1,_this.editCompanyDetails=!1,_this.formSubmitted=!1,_this.showRelationshipAdvisor=!1,_this.restrictRelationShipAdvisor=!1,_this.blockAllMembers=!1,_this.initLoaded=!1,_this.settingsNav="admins",_this.autoRenewalStatus=!1,_this.showThemeManager=!1,_this.showEmailManager=!1,_this.isPrimaryPlanActive=!1,_this.isHiringPlanActive=!1,_this.services={getCompanyInfo:"/sp/admin/account/getCompanyDetails",getAccountInfo:"/sp/admin/account/businessAccountDetails",updateCompanyInfo:"/sp/admin/account/updateCompany",restrictRA:"/sp/admin/account/restrictRelationshipAdvisor",blockMembers:"/sp/admin/account/blockAllMembers",removeAdmin:"/sp/admin/removeAdminMember",getAdminMembers:"/sp/admin/getMembersForAdmins/",addAdmin:"/sp/admin/addAdminMember",transactions:"/sp/admin/account/paymentHistory",deactivateRenewal:"/sp/admin/account/cancel",activateRenewal:"/sp/admin/account/reActivate"},_this.getCompanyDetails=getCompanyDetails,_this.getAccountDetails=getAccountDetails,_this.updateCompanyDetails=updateCompanyDetails,_this.cancelCompanyUpdate=cancelCompanyUpdate,_this.stateCheck=stateCheck,_this.resetAddress=resetAddress,_this.initSettings=initSettings,_this.restrictAdvisor=restrictAdvisor,_this.blockMembers=blockMembers,_this.updateRenewalStatus=updateRenewalStatus,_this.addAccountsForm={},_this.addAccountsForm.submitted=!1,_this.requestAccounts=0,_this.requestType="members",_this.processAccountRequest=processAccountRequest,_this.requestForAccounts=requestForAccounts,_this.companyEmail="",_this.currentPageUrl=window.location.href.replace(window.location.hash,""),_this.removeAdminAccess=removeAdminAccess,_this.removeAdmin=removeAdmin,_this.addAdminAccess=addAdminAccess,_this.addSelectedAdmin=addSelectedAdmin,_this.selectedAdminsList=[],_this.getTransactionsHistory=getTransactionsHistory,_this.seeTransactionsView=!1,_this.setSettingsView=setSettingsView,_this.viewMemberDetails=viewMemberDetails,_this.themeManagerCleanup=themeManagerCleanup,$scope.$parent.ctrl.activeView="settings"}function organizationAccountAdmin($scope,ajaxService,sharedProperties,ngDialog,$localStorage,$rootScope,$filter,$timeout,basicService){function publish(learningProgram){ajaxService.getAjaxResponse({url:vm.config.publish,data:$.param({actionPlanId:learningProgram.id})}).then(function(response){if("true"===response.Success){vm.companyActionPlanDetail.active=!0;for(var i=0;i<vm.companyActionPlanList.length;i++)if(vm.companyActionPlanList[i].id===learningProgram.id){vm.companyActionPlanList[i].active=!0;break}ngDialog.close()}else null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))})}function publishAccountMortal(learningProgram){vm.learningProgram=learningProgram;ngDialog.open({template:vm.config.publishAccountMortal,scope:$scope})}function activateDeactivate(learningProgram,companyId){ajaxService.getAjaxResponse({url:vm.config.activateDeactivate,data:$.param({actionPlanId:learningProgram.id,onHold:!learningProgram.onHold,companyId:companyId})}).then(function(response){"true"===response.Success?learningProgram.onHold=!learningProgram.onHold:null!==response.error&&sharedProperties.ajaxError(response.error)})}function stepNo(i){return parseInt(i,10)+1}function previewVideo(mode,url){if("Video"===mode)sharedProperties.videoPopUp(url);else{window.open(url,"_blank").focus()}}function viewMemberDetails(email,flag){$localStorage.remove("memberDetailsNav"),$localStorage.set("previousView",$scope.$parent.ctrl.activeView),$scope.$parent.ctrl.switchViews("memberDetails",!1,email),flag&&$localStorage.set("memberDetailsNav","groupsTags")}function redirectTo(char){var company=$localStorage.get("loggegdInProfile").company;switch($localStorage.set("companyId",{id:company.id,name:company.name,actionPlan:vm.actionPlan.id,mode:"AccountAdmin",type:"Company"}),char){case"create":window.location.href="/sp/admin/account/actionPlan/createPage";break;case"edit":window.location.href="/sp/admin/account/actionPlan/updatePage"}}function checkCount(checked){var userLength=vm.pageSetting.user.length;checked?userLength+1===vm.userList.length?vm.negative=!0:vm.negative=!1:userLength-1===vm.userList.length?vm.negative=!0:vm.negative=!1}function removeAll(){ngDialog.open({template:vm.config.removeAll,scope:$scope}).closePromise.then(function(data){vm.assignActionPlanList={actionPlanIdList:[],userIdList:[],groupPermissionsList:[]}})}function checkAll(){vm.negative?vm.pageSetting.user=[]:vm.pageSetting.user=vm.userList.map(function(item){return{userId:item.id,email:item.email,name:item.name,title:item.title}})}function percentCalc(total,number,floating){return void 0===floating?(Math.round(number/total*100)||0)+"%":parseFloat(number/total*100).toFixed(floating)}function displayRole(userObj){var userRoles=userObj.roles,complete=[];return-1!==userRoles.indexOf("GroupLead")&&complete.push('<span class="thin">'+$rootScope.pullInterNationalization("manageAccountContent.l")+"</span>"),-1!==userRoles.indexOf("AccountAdministrator")&&complete.push('<span class="thin">'+$rootScope.pullInterNationalization("manageAccountContent.admin")+"</span>"),userObj.deactivated&&complete.push('<span class="thin blocked">'+$rootScope.pullInterNationalization("manageAccountContent.blocked")+"</span>"),complete.join("")}function executeFunction(){getMembersData(),getGroupData(),vm.getCompanyActionPlans(),$scope.$parent.ctrl.activeView="accountOrganization"}function getCompanyActionPlans(){ajaxService.getAjaxResponse({url:vm.config.getCompanyActionPlans}).then(function(response){if("true"===response.Success){if(vm.companyActionPlanList=response.actionPlanListing,vm.actionPlanEnable=$localStorage.get("loggegdInProfile").company.actionPlanAdminEnabled,vm.companyActionPlanList.length){vm.companyActionPlanList=$filter("orderBy")(vm.companyActionPlanList,["-active","name"]);var id=$localStorage.get("redirectedOrg");if(null!==id){for(var i=0;i<vm.companyActionPlanList.length;i++)if(vm.companyActionPlanList[i].id===id){vm.actionPlan.id=vm.companyActionPlanList[i].id,$localStorage.remove("redirectedOrg");break}}else vm.actionPlan.id=vm.companyActionPlanList[0].id;getDetails()}vm.response=!0}else null!==response.error&&(vm.response=!0,sharedProperties.ajaxError(response.error))})}function changeActionPlan(id,animate){vm.actionPlan.cachePreview=!1,vm.actionPlan.preview=!1,vm.currentActionPlan=0,getDetails(animate,{id:id})}function dropGroups(){for(var groups=[],it=0;it<vm.masterUserList.length;it++)for(var g=0;g<vm.masterUserList[it].groupAssociationList.length;g++)""!==vm.masterUserList[it].groupAssociationList[g].name&&groups.push(vm.masterUserList[it].groupAssociationList[g].name);vm.dropGroups=groups.unique()}function getDetails(animate,options){var plan=void 0===options?vm.actionPlan.id:options.id;ajaxService.getAjaxResponse({url:vm.config.getDetails,data:$.param({actionPlanId:plan,accountDashboard:!0})}).then(function(response){if("true"===response.Success){if(vm.companyActionPlanDetail=response.actionPlan,vm.memberList=angular.copy(vm.masterMemberList),vm.masterUserList=[],null!==vm.companyActionPlanDetail.userList)for(var j=0;j<vm.companyActionPlanDetail.userList.length;j++)for(var i=vm.memberList.length-1;i>=0;i--)if(vm.companyActionPlanDetail.userList[j].id===vm.memberList[i].id){vm.memberList[i].completedActionCount=vm.companyActionPlanDetail.userList[j].completedActionCount,vm.masterUserList.push(vm.memberList[i]),vm.memberList.splice(i,1);break}dropGroups(),void 0!==options&&(vm.actionPlan.id=options.id,vm.pageSetting=angular.copy(vm.originalpageSetting)),void 0!==animate&&$("html,body").animate({scrollTop:$(".table-col-layout").offset().top-20},300),vm.returnUserList(vm.pageSetting.pageSize+vm.pageSetting.pageSize),ngDialog.close("ngdialog1")}else null!==response.error&&(ngDialog.close("ngdialog1"),vm.contentLoaded=!0,sharedProperties.ajaxError(response.error))})}function orderBy(sort){vm.userList.sort(function(a,b){var af=null!==a.firstName?a.firstName.toLowerCase():a.firstName,bf=null!==b.firstName?b.firstName.toLowerCase():b.firstName,ac=a.completedActionCount,bc=b.completedActionCount,at=void 0!==a.title&&null!==a.title?a.title.toLowerCase():"",bt=void 0!==b.title&&null!==b.title?b.title.toLowerCase():"";switch(sort){case"nameplus":return af===bf?0:+(af>bf)||-1;case"nameminus":return af===bf?0:+(af<bf)||-1;case"titleplus":return at===bt?0:+(at>bt)||-1;case"titleminus":return at===bt?0:+(at<bt)||-1;case"completedplus":return ac===bc?0:+(ac<bc)||-1;case"completedminus":return ac===bc?0:+(ac>bc)||-1}}),vm.contentLoaded=!0}function returnUserList(){var result=angular.copy(vm.masterUserList);vm.pageSetting.pageSize=vm.originalpageSetting.pageSize,vm.pageSetting.disabledInfinite=!1,vm.userList=result.filter(function(e){return(""===vm.pageSetting.filterGroup||null===vm.pageSetting.filterGroup?e:filterGroup(e))&&sharedProperties.singleElementSearch(vm.pageSetting.textSearching,e,2)}),vm.orderBy(vm.pageSetting.sort)}function infinteScroll(pageSize){if(!vm.masterUserList.length)return!0;vm.pageSetting.pageSize=pageSize,pageSize>=vm.masterUserList.length&&(vm.pageSetting.disabledInfinite=!0,vm.pageSetting.pageSize=vm.masterUserList.length)}function filterGroup(e){for(var i=0;i<e.groupAssociationList.length;i++)if(e.groupAssociationList[i].name===vm.pageSetting.filterGroup)return!0}function getMembersData(mortal){sharedProperties.getMember().length?(vm.masterMemberList=sharedProperties.getMember(),vm.memberList=angular.copy(vm.masterMemberList),void 0!==mortal&&memberModal()):ajaxService.getAjaxResponse({url:vm.config.getMembersData}).then(function(response){"true"===response.Success?(vm.masterMemberList=response.memberList,sharedProperties.setMember(vm.masterMemberList),vm.memberList=angular.copy(vm.masterMemberList),vm.responseRecieved=!0,void 0!==mortal&&memberModal()):null!=response.error&&(vm.responseRecieved=!0,sharedProperties.ajaxError(response.error))})}function getGroupData(){!vm.groupList.length&&groupCall()}function groupCall(){sharedProperties.getGroup().length?(vm.masterGroupList=sharedProperties.getGroup(),vm.groupList=angular.copy(vm.masterGroupList)):ajaxService.getAjaxResponse({url:vm.config.getGroupData}).then(function(response){"true"===response.Success?(vm.masterGroupList=response.groupInfoList,vm.groupList=angular.copy(vm.masterGroupList),sharedProperties.setGroup(vm.masterGroupList),vm.responseRecieved=!0):null!=response.error&&(vm.responseRecieved=!0,sharedProperties.ajaxError(response.error))})}function addMembersModal(){vm.pageSetting.searchMode="M",vm.memberListSearch="",vm.groupListSearch="",vm.masterMemberList.length?memberModal():getMembersData("mortal")}function memberModal(){vm.pageSetting.overlayScroll=vm.originalpageSetting.overlayScroll,ngDialog.open({template:vm.config.memberModal,scope:$scope,className:"sp-overlay-scroll-event"}).closePromise.then(function(data){vm.clearSelection()})}function clearSelection(){vm.assignActionPlanList={actionPlanIdList:[],userIdList:[],groupPermissionsList:[]},vm.groupPermissionsList=[],vm.pageSetting.overlayScroll=vm.originalpageSetting.overlayScroll}function assignActionPlan(userId,groupPermissionsList){vm.assignActionPlanList.actionPlanIdList=[vm.actionPlan.id],null!==userId&&vm.assignActionPlanList.userIdList.push(userId),null!==groupPermissionsList&&vm.assignActionPlanList.groupPermissionsList.push(groupPermissionsList[0])&&vm.groupPermissionsList.push(groupPermissionsList[0].groupId)}function callAssignActionPlan(obj){obj.userIdList.length||obj.groupPermissionsList.length?ajaxService.getAjaxResponse({url:vm.config.assignActionPlan,data:obj,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(getDetails(),sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.addMember")),sharedProperties.setOrganization(null),sharedProperties.fireAnalyticsEvent("Manage Account | Assign Org Plan","N/A")):null!=response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response.error))}):ngDialog.close("ngdialog1")}function removeActionPlan(actionPlanId,member){vm.assignActionPlanList.actionPlanIdList.push(actionPlanId),vm.assignActionPlanList.userIdList.push(member.id),vm.deleteMemberInfo=member,ngDialog.open({template:vm.config.removeAction,scope:$scope}).closePromise.then(function(data){vm.assignActionPlanList={actionPlanIdList:[],userIdList:[],groupPermissionsList:[]}})}function deleteSingle(){callremoveActionPlan(vm.assignActionPlanList)}function callToActionDelete(){vm.assignActionPlanList.actionPlanIdList=[vm.actionPlan.id],vm.assignActionPlanList.userIdList=vm.pageSetting.user.map(function(e){return e.userId}),callremoveActionPlan(vm.assignActionPlanList)}function callremoveActionPlan(obj){ajaxService.getAjaxResponse({url:vm.config.removeActionPlan,data:obj,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(getDetails(),vm.pageSetting.user=[],vm.negative=!1,sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.removeMember")),sharedProperties.setOrganization(null),sharedProperties.fireAnalyticsEvent("Manage Account | Remove Org Plan","N/A")):null!=response.error&&(ngDialog.close("ngdialog1"),vm.pageSetting.user=[],vm.negative=!1,sharedProperties.ajaxError(response.error))})}function previewDetail(){vm.actionPlan.cachePreview?(vm.actionPlan.preview=!0,vm.currentActionPlan=0):getActionPreviewDetail(),sharedProperties.fireAnalyticsEvent("Manage Account | Preview Org Plan","N/A")}function getActionPreviewDetail(){ajaxService.getAjaxResponse({url:vm.config.getDetails,data:$.param({actionPlanId:vm.actionPlan.id})}).then(function(response){"true"===response.Success?(vm.actionPlanPreviewDetail=response.actionPlan,vm.actionPlan.cachePreview=!0,vm.actionPlan.preview=!0,vm.currentActionPlan=0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function infinteScrollOverlay(pageSize,Obj){if(!Obj.length)return!0;vm.pageSetting.overlayScroll=pageSize,pageSize>=Obj.length&&(vm.pageSetting.overlayScroll=Obj.length)}var vm=this;vm.pageSetting={searchForOrgPlan:"",searchMode:"M",sort:"nameplus",textSearching:"",filterGroup:"",pageSize:20,user:[],overlayScroll:20},vm.originalpageSetting=angular.copy(vm.pageSetting),vm.config={getCompanyActionPlans:"/sp/admin/account/actionPlan/getCompanyActionPlans",getDetails:"/sp/admin/account/actionPlan/getDetails",getMembersData:"/sp/admin/member",getGroupData:"/sp/admin/group/all",memberModal:"/sp/admin/organizationMemberModal",assignActionPlan:"/sp/admin/account/actionPlan/assignActionPlan",removeActionPlan:"/sp/admin/account/actionPlan/removeActionPlan",removeAll:"/sp/resources/html/admin/manage-account/account-admin-deleteMultiple.html",removeAction:"/sp/resources/html/admin/manage-account/account-admin-deleteSingle.html",activateDeactivate:"/sp/admin/account/actionPlan/activateDeactivate",publishAccountMortal:"/sp/resources/html/admin/manage-account/publishPlan.html",publish:"/sp/admin/account/actionPlan/publish"},vm.actionPlan={id:"",cachePreview:!1,preview:!1},vm.companyActionPlanList=[],vm.companyActionPlanDetail=null,vm.masterMemberList=[],vm.memberList=[],vm.masterGroupList=[],vm.groupList=[],vm.assignActionPlanList={actionPlanIdList:[],userIdList:[],groupPermissionsList:[]},vm.groupPermissionsList=[],vm.actionPlanEnable=!1,vm.negative=!1,vm.masterUserList=[],vm.userList=[],vm.groupDropDown=[],vm.currentActionPlan=0,vm.response=!1,vm.showDoneBtn=!1,vm.getUserInfo=basicService.getUserInfo(),vm.contentLoaded=!1,vm.executeFunction=executeFunction,vm.getCompanyActionPlans=getCompanyActionPlans,vm.changeActionPlan=changeActionPlan,vm.addMembersModal=addMembersModal,vm.assignActionPlan=assignActionPlan,vm.getGroupData=getGroupData,vm.previewDetail=previewDetail,vm.callAssignActionPlan=callAssignActionPlan,vm.removeActionPlan=removeActionPlan,vm.orderBy=orderBy,vm.returnUserList=returnUserList,vm.infinteScroll=infinteScroll,vm.displayRole=displayRole,vm.percentCalc=percentCalc,vm.checkAll=checkAll,vm.removeAll=removeAll,vm.callToActionDelete=callToActionDelete,vm.deleteSingle=deleteSingle,vm.checkCount=checkCount,vm.redirectTo=redirectTo,vm.viewMemberDetails=viewMemberDetails,vm.clearSelection=clearSelection,vm.previewVideo=previewVideo,vm.stepNo=stepNo,vm.activateDeactivate=activateDeactivate,vm.publishAccountMortal=publishAccountMortal,vm.publish=publish,vm.infinteScrollOverlay=infinteScrollOverlay}function competencyAccountAdmin($scope,ajaxService,$localStorage,sharedProperties,ngDialog,$rootScope){function viewMemberDetails(email,flag){$localStorage.remove("memberDetailsNav"),$localStorage.set("previousView",$scope.$parent.ctrl.activeView),$scope.$parent.ctrl.switchViews("memberDetails",!1,email),flag&&$localStorage.set("memberDetailsNav","groupsTags")}function previewVideo(mode,url){if("Video"===mode)sharedProperties.videoPopUp(url);else{window.open(url,"_blank").focus()}}function memberFilter(memberList){return-1===vm.competencyMapArray[vm.competency.id].indexOf(memberList.id)}function previewDetail(){vm.competency.cachePreview?vm.competency.preview=!0:getCompetencyDetail(),sharedProperties.fireAnalyticsEvent("Manage Account | Preview Competency","N/A")}function getCompetencyDetail(){ajaxService.getAjaxResponse({url:vm.config.getDetails,data:$.param({competencyProfileId:vm.competency.id})}).then(function(response){"true"===response.Success?(vm.competencyPreviewDetail=response.competencyProfile,vm.competency.cachePreview=!0,vm.competency.preview=!0):null!==response.error&&sharedProperties.ajaxError(response.error)})}function executeFunction(){getMembersData(),getGroupData(),$scope.$parent.ctrl.activeView="accountCompetency"}function infinteScroll(pageSize){if(!vm.competencyNameMap[vm.competency.id].length)return!0;vm.pageSetting.pageSize=pageSize,pageSize>=vm.competencyNameMap[vm.competency.id].length&&(vm.pageSetting.disabledInfinite=!0,vm.pageSetting.pageSize=vm.competencyNameMap[vm.competency.id].length)}function displayRole(userObj){var userRoles=userObj.roles,complete=[];return-1!==userRoles.indexOf("GroupLead")&&complete.push('<span class="thin">'+$rootScope.pullInterNationalization("manageAccountContent.l")+"</span>"),-1!==userRoles.indexOf("AccountAdministrator")&&complete.push('<span class="thin">'+$rootScope.pullInterNationalization("manageAccountContent.admin")+"</span>"),userObj.deactivated&&complete.push('<span class="thin blocked">'+$rootScope.pullInterNationalization("manageAccountContent.blocked")+"</span>"),complete.join("")}function orderBy(sort){vm.userList.sort(function(a,b){var af=null!==a.firstName?a.firstName.toLowerCase():a.firstName,bf=null!==b.firstName?b.firstName.toLowerCase():b.firstName,at=void 0!==a.title&&null!==a.title?a.title.toLowerCase():"",bt=void 0!==b.title&&null!==b.title?b.title.toLowerCase():"";switch(sort){case"nameplus":return af===bf?0:+(af>bf)||-1;case"nameminus":return af===bf?0:+(af<bf)||-1;case"titleplus":return at===bt?0:+(at>bt)||-1;case"titleminus":return at===bt?0:+(at<bt)||-1}})}function returnUserList(){var result=angular.copy(vm.competencyNameMap[vm.competency.id]);vm.pageSetting.pageSize=vm.originalpageSetting.pageSize,vm.pageSetting.disabledInfinite=!1,vm.userList=result.filter(function(e){return(""===vm.pageSetting.filterTitle||null===vm.pageSetting.filterTitle?e:e.title===vm.pageSetting.filterTitle)&&sharedProperties.singleElementSearch(vm.pageSetting.textSearching,e,2)}),vm.orderBy(vm.pageSetting.sort)}function checkCount(checked){var userLength=vm.pageSetting.user.length;checked?userLength+1===vm.competencyNameMap[vm.competency.id].length?vm.negative=!0:vm.negative=!1:userLength-1===vm.competencyNameMap[vm.competency.id].length?vm.negative=!0:vm.negative=!1}function checkAll(){vm.negative?vm.pageSetting.user=[]:vm.pageSetting.user=vm.competencyNameMap[vm.competency.id].map(function(item){return{userId:item.id,email:item.email,name:item.name,title:item.title}})}function title(){for(var titles=[],it=vm.competencyNameMap[vm.competency.id].length-1;it>=0;it--)null!==vm.competencyNameMap[vm.competency.id][it].title&&titles.push(vm.competencyNameMap[vm.competency.id][it].title);vm.titles=titles.unique()}function changeCompetency(competency){vm.competency.cachePreview=!1,vm.competency.preview=!1,vm.currentActionPlan=0,vm.pageSetting=angular.copy(vm.originalpageSetting),vm.competency.id=competency.id,vm.competency.name=competency.name,title(),vm.returnUserList(vm.pageSetting.pageSize+vm.pageSetting.pageSize),$("html,body").animate({scrollTop:$(".table-col-layout").offset().top-20},300)}function addMembersModal(){vm.pageSetting.searchMode="M",vm.memberListSearch="",vm.groupListSearch="",vm.masterMemberList.length?memberModal():getMembersData("mortal")}function memberModal(){vm.pageSetting.overlayScroll=vm.originalpageSetting.overlayScroll,ngDialog.open({template:vm.config.memberModal,scope:$scope,className:"sp-overlay-scroll-event"}).closePromise.then(function(data){vm.clearSelection()})}function clearSelection(){vm.assignCompetencyList={competencyProfileId:null,userIdList:[],groupPermissionsList:[]},vm.groupPermissionsList=[],vm.pageSetting.overlayScroll=vm.originalpageSetting.overlayScroll}function assignCompetency(userId,groupPermissionsList){vm.assignCompetencyList.competencyProfileId=[vm.competency.id],null!==userId&&vm.assignCompetencyList.userIdList.push(userId),null!==groupPermissionsList&&vm.assignCompetencyList.groupPermissionsList.push(groupPermissionsList[0])&&vm.groupPermissionsList.push(groupPermissionsList[0].groupId)}function addCompetency(obj){obj.userIdList.length||obj.groupPermissionsList.length?ajaxService.getAjaxResponse({url:vm.config.assignCompetency,data:obj,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(sharedProperties.setCompetency(null),sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.addMember")),sharedProperties.fireAnalyticsEvent("Manage Account | Assign Competency","N/A"),vm.loadCompetencyDetails()):null!==response.error&&(ngDialog.close(),sharedProperties.ajaxError(response.error))}):ngDialog.close("ngdialog1")}function getMembersData(mortal){sharedProperties.getMember().length?(vm.masterMemberList=sharedProperties.getMember(),vm.memberList=angular.copy(vm.masterMemberList),void 0!==mortal&&memberModal(),vm.loadCompetencyDetails("init")):ajaxService.getAjaxResponse({url:vm.config.getMembersData}).then(function(response){"true"===response.Success?(vm.masterMemberList=response.memberList,sharedProperties.setMember(vm.masterMemberList),vm.memberList=angular.copy(vm.masterMemberList),vm.responseRecieved=!0,void 0!==mortal&&memberModal(),vm.loadCompetencyDetails("init")):null!=response.error&&(vm.responseRecieved=!0,sharedProperties.ajaxError(response.error))})}function getGroupData(){
!vm.groupList.length&&groupCall()}function groupCall(){sharedProperties.getGroup().length?(vm.masterGroupList=sharedProperties.getGroup(),vm.groupList=angular.copy(vm.masterGroupList)):ajaxService.getAjaxResponse({url:vm.config.getGroupData}).then(function(response){"true"===response.Success?(vm.masterGroupList=response.groupInfoList,vm.groupList=angular.copy(vm.masterGroupList),sharedProperties.setGroup(vm.masterGroupList),vm.responseRecieved=!0):null!=response.error&&(vm.responseRecieved=!0,sharedProperties.ajaxError(response.error))})}function loadCompetencyDetails(init){null===sharedProperties.getCompetency()?ajaxService.getAjaxResponse({url:vm.config.getCompetencyListing}).then(function(response){"true"===response.Success?(sharedProperties.setCompetency(response),comptencyOperation(response,init)):null!=response.error&&(vm.responseRecieved=!0,vm.response=!0,sharedProperties.ajaxError(response.error))}):comptencyOperation(sharedProperties.getCompetency(),init)}function comptencyOperation(response,init){if(vm.competencyList=response.competencyProfile,vm.competencyEvaluationInProgress=response.evaluationInProgress,vm.memberList=angular.copy(vm.masterMemberList),vm.competencyNameMap={},vm.competencyMapArray={},ngDialog.close("ngdialog1"),vm.competencyList.length){void 0!==init&&(vm.competency.id=vm.competencyList[0].id,vm.competency.name=vm.competencyList[0].name);for(var k=0;k<vm.competencyList.length;k++)vm.competencyNameMap[vm.competencyList[k].id]=[],vm.competencyMapArray[vm.competencyList[k].id]=[];for(var j=0;j<response.memberList.length;j++)if(null!==response.memberList[j].competencyProfileId)for(var i=vm.memberList.length-1;i>=0;i--)if(response.memberList[j].userId===vm.memberList[i].id&&void 0!==vm.competencyNameMap[response.memberList[j].competencyProfileId]){vm.competencyNameMap[response.memberList[j].competencyProfileId].push(vm.memberList[i]),vm.competencyMapArray[response.memberList[j].competencyProfileId].push(vm.memberList[i].id);break}title(),vm.returnUserList(vm.pageSetting.pageSize+vm.pageSetting.pageSize)}vm.response=!0}function removeCompetencyModal(competencyId,member){vm.assignCompetencyList.competencyProfileId=[competencyId],vm.assignCompetencyList.userIdList.push(member.id),vm.deleteMemberInfo=member,ngDialog.open({template:vm.config.removeCompetencyModal,scope:$scope}).closePromise.then(function(data){vm.assignCompetencyList={competencyProfileId:null,userIdList:[],groupPermissionsList:[]}})}function deleteSingle(){vm.removeCompetency(vm.assignCompetencyList)}function callToActionDelete(){vm.assignCompetencyList.competencyProfileId=[vm.competency.id],vm.assignCompetencyList.userIdList=vm.pageSetting.user.map(function(e){return e.userId}),vm.removeCompetency(vm.assignCompetencyList)}function removeAll(){ngDialog.open({template:vm.config.removeAll,scope:$scope}).closePromise.then(function(data){vm.assignCompetencyList={competencyProfileId:null,userIdList:[],groupPermissionsList:[]}})}function removeCompetency(obj){ajaxService.getAjaxResponse({url:vm.config.removeCompetency,data:obj,headers:{"Content-Type":"application/json"}}).then(function(response){"true"===response.Success?(sharedProperties.setCompetency(null),vm.loadCompetencyDetails(),sharedProperties.setMember([]),vm.pageSetting.user=[],vm.negative=!1,sharedProperties.growlMessage($rootScope.pullInterNationalization("manageAccountContent.removeMemberCompetency")),sharedProperties.fireAnalyticsEvent("Manage Account | Remove Competency","N/A")):null!==response.error&&(ngDialog.close("ngdialog1"),vm.pageSetting.user=[],vm.negative=!1,sharedProperties.ajaxError(response.error))})}function infinteScrollOverlay(pageSize,Obj){if(!Obj.length)return!0;vm.pageSetting.overlayScroll=pageSize,pageSize>=Obj.length&&(vm.pageSetting.overlayScroll=Obj.length)}var vm=this;vm.config={getCompetencyListing:"/sp/admin/competency/getUserCompetency",assignCompetency:"/sp/admin/competency/assignCompetency",removeCompetency:"/sp/admin/competency/removeCompetency",assignRemoveCompetencyModal:"/sp/admin/competency/assignRemoveModal",memberModal:"/sp/admin/competencyMemberModal",getMembersData:"/sp/admin/member",getGroupData:"/sp/admin/group/all",removeCompetencyModal:"/sp/resources/html/admin/manage-account/account-admin-deleteSingleCompetency.html",removeAll:"/sp/resources/html/admin/manage-account/account-admin-deleteMultipleCompetency.html",getDetails:"/sp/admin/competency/get"},vm.pageSetting={searchForCompPlan:"",searchMode:"M",sort:"nameplus",textSearching:"",pageSize:20,user:[],filterTitle:"",overlayScroll:20},vm.originalpageSetting=angular.copy(vm.pageSetting),vm.response=!1,vm.masterMemberList=[],vm.memberList=[],vm.masterGroupList=[],vm.groupList=[],vm.competency={id:"",name:"",preview:!1,cachePreview:!1},vm.assignCompetencyList={competencyProfileId:null,userIdList:[],groupPermissionsList:[]},vm.groupPermissionsList=[],vm.titles=[],vm.competencyPreviewDetail=null,vm.currentActionPlan=0,vm.executeFunction=executeFunction,vm.infinteScroll=infinteScroll,vm.displayRole=displayRole,vm.checkCount=checkCount,vm.returnUserList=returnUserList,vm.orderBy=orderBy,vm.checkAll=checkAll,vm.changeCompetency=changeCompetency,vm.addMembersModal=addMembersModal,vm.deleteSingle=deleteSingle,vm.callToActionDelete=callToActionDelete,vm.removeAll=removeAll,vm.previewDetail=previewDetail,vm.viewMemberDetails=viewMemberDetails,vm.clearSelection=clearSelection,vm.loadCompetencyDetails=loadCompetencyDetails,vm.addCompetency=addCompetency,vm.assignCompetency=assignCompetency,vm.removeCompetency=removeCompetency,vm.removeCompetencyModal=removeCompetencyModal,vm.memberFilter=memberFilter,vm.previewVideo=previewVideo,vm.infinteScrollOverlay=infinteScrollOverlay}function lndToolTip($timeout){return{restrict:"A",link:function($scope,$element,$attrs){new Drop({target:$element[0],content:$attrs.desc,position:"bottom left",openOn:"click",remove:!0})}}}angular.module("spApp").controller("manageAccount",manageAccount),angular.module("spApp").controller("organizationAccountAdmin",organizationAccountAdmin),angular.module("spApp").controller("competencyAccountAdmin",competencyAccountAdmin),manageAccount.$inject=["$scope","ajaxService","$localStorage","$state","$q","sharedProperties","$filter","$rootScope","ngDialog","$timeout"],angular.module("spApp").controller("memberDetailsController",memberDetailsController),memberDetailsController.$inject=["$scope","ajaxService","$localStorage","$state","$q","sharedProperties","$filter","$rootScope","ngDialog","$timeout"],angular.module("spApp").controller("prismLensAdminController",prismLensAdminController),prismLensAdminController.$inject=["$scope","ajaxService","$filter","ngDialog","sharedProperties","$rootScope","$timeout","$q","$localStorage"],angular.module("spApp").controller("manageSettingsController",manageSettingsController),manageSettingsController.$inject=["$scope","ajaxService","$localStorage","$state","$q","sharedProperties","$filter","$rootScope","ngDialog","$timeout"],organizationAccountAdmin.$inject=["$scope","ajaxService","sharedProperties","ngDialog","$localStorage","$rootScope","$filter","$timeout","basicService"],competencyAccountAdmin.$inject=["$scope","ajaxService","$localStorage","sharedProperties","ngDialog","$rootScope"],angular.module("spApp").directive("lndToolTip",lndToolTip),lndToolTip.$inject=["$timeout"];