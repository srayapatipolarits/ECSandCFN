function fileReaderListing(sharedProperties,ajaxService,$localStorage,basicService,ngDialog,$scope,$rootScope,$state,$filter){function getAll(state){ajaxService.getAjaxResponse({url:vm.serviceApis.getProperties}).then(function(response){"true"===response.Success?(vm.listProperties=response.filesList,vm.changePoint(state)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function changePoint(type){return vm.currentType===type||(null===vm.currentType?$state.go("cmsHome"):$state.go(type),void(vm.currentType=type))}function infinteScroll(pageSize){return!vm.listProperties.length||void(vm.pageSetting.disabledInfinite||(vm.pageSetting.pageSize=pageSize,pageSize>=vm.listProperties.length&&(vm.pageSetting.pageSize=vm.listProperties.length)))}function active(event,setting){vm.pageSetting.lastPredicate=setting.predicate,vm.pageSetting.lastReverse=setting.reverse,sharedProperties.toggleFilterClick(event,vm.pageSetting.lastPredicate),order(vm.pageSetting.lastPredicate,vm.pageSetting.lastReverse)}function order(predicate,reverse){vm.pageSetting.lastPredicate=predicate,vm.pageSetting.lastReverse=reverse,vm.listProperties=$filter("orderBy")(vm.listProperties,vm.pageSetting.lastPredicate,vm.pageSetting.lastReverse)}function viewDetail(fileName){ajaxService.getAjaxResponse({url:vm.serviceApis.readFromSource,data:$.param({propName:fileName.name.name})}).then(function(response){"true"===response.Success?(vm.propertyDetail=response.property,vm.masterpropertyDetail=angular.copy(vm.propertyDetail),vm.dropAvailable=response.pushOptions.split(","),vm.currentBranch=response.currentBranch,vm.activeFile=fileName.name,vm.pageSetting=angular.copy(vm.originalPageSetting),vm.changePoint("cmsDetail"),$("html,body").animate({scrollTop:$(".admin-tabs-list").offset().top-80},300)):null!==response.error&&sharedProperties.ajaxError(response.error)})}function saveProperty(keys,values,comment){ajaxService.getAjaxResponse({url:vm.serviceApis.writeInSource,data:$.param({propName:vm.activeFile.name,keys:keys,values:values,branchName:vm.currentBranch,comment:comment})}).then(function(response){"true"===response.Success?(vm.pageSetting=angular.copy(vm.originalPageSetting),vm.editKey[keys]=!1,vm.masterpropertyDetail=angular.copy(vm.propertyDetail),vm.activeFile.status="InReview"):null!==response.error&&sharedProperties.ajaxError(response.error)})}function deleteKey(keys){vm.masterpropertyDetail.hasOwnProperty(keys)?ajaxService.getAjaxResponse({url:vm.serviceApis.delete,data:$.param({propName:vm.activeFile.name,keys:keys,branchName:vm.currentBranch})}).then(function(response){if("true"===response.Success){for(var key in vm.propertyDetail)if(key===keys){delete vm.propertyDetail[keys];break}vm.pageSetting=angular.copy(vm.originalPageSetting),vm.masterpropertyDetail=angular.copy(vm.propertyDetail),vm.editKey[keys]=!1}else null!==response.error&&sharedProperties.ajaxError(response.error)}):delete vm.propertyDetail[keys]}function uploadModal(){vm.newFile=null,ngDialog.open({template:"/sp/resources/html/sysAdmin/locale/upload.html",scope:$scope})}function publishModal(fileName){vm.publishFileName=fileName,ngDialog.open({template:"/sp/resources/html/sysAdmin/locale/publish-confirm.html",scope:$scope})}function publishFile(){ajaxService.getAjaxResponse({url:vm.serviceApis.publishFile,data:$.param({propName:vm.publishFileName})}).then(function(response){"true"===response.Success?(sharedProperties.growlMessage($rootScope.pullInterNationalization("sysadmin.lang.server.publish")),ngDialog.close()):null!==response.error&&(sharedProperties.ajaxError(response.error),ngDialog.close())})}function uploadFile(){var formObj=new FormData;formObj.append("file",vm.newFile,vm.newFile.name);var multiPartRequest=$.ajax({url:vm.serviceApis.uploadNewFile,type:"POST",data:formObj,processData:!1,contentType:!1,beforeSend:function(){$rootScope.$broadcast("httpLoaderStart")}});multiPartRequest.done(function(response){"true"===response.success.Success?(sharedProperties.growlMessage($rootScope.pullInterNationalization("mediaManager.growlMessage.success")),$rootScope.$broadcast("httpLoaderEnd"),window.location.href="/sp/sysAdmin/locale"):(sharedProperties.growlMessage($rootScope.pullInterNationalization("mediaManager.growlMessage.fail"),"<strong> Alert </strong>","glyphicon glyphicon-ban-circle"),$rootScope.$broadcast("httpLoaderEnd"),ngDialog.close())}),multiPartRequest.fail(function(jqXHR,textStatus){sharedProperties.growlMessage($rootScope.pullInterNationalization("mediaManager.growlMessage.fail"),"<strong> Alert </strong>","glyphicon glyphicon-ban-circle"),$rootScope.$broadcast("httpLoaderEnd"),ngDialog.close()})}function mergeToBranch(bName){ajaxService.getAjaxResponse({url:vm.serviceApis.mergeToBranch,data:$.param({propName:vm.activeFile.name,branchName:bName})}).then(function(response){"true"===response.Success?console.log("Merged"):null!==response.error&&sharedProperties.ajaxError(response.error)})}function changeDisplayMode(key){vm.editKey[key]=!vm.editKey[key],vm.editKey[key]||(vm.masterpropertyDetail.hasOwnProperty(key)?(vm.propertyDetail[key]=angular.copy(vm.masterpropertyDetail[key]),vm.editComment[key]=""):delete vm.propertyDetail[key])}function approveModal(){ngDialog.open({template:"/sp/resources/html/sysAdmin/locale/dialog/approveProperty.html",scope:$scope})}function approveFile(){vm.activeFile.status="Approved",ngDialog.close()}function updateStatus(){ngDialog.open({template:"/sp/resources/html/sysAdmin/locale/dialog/updateStatus.html",scope:$scope})}function updateStatusChange(){vm.activeFile.status="AwaitingTranslation",ngDialog.close()}function addProperty(){ngDialog.open({template:"/sp/resources/html/sysAdmin/locale/dialog/addProperty.html",scope:$scope})}function placeProperty(fData){if(vm.newProperty.linkSubmitted=!1,fData.$valid){var obj={};obj[fData.key.$modelValue]=fData.val.$modelValue,vm.propertyDetail=Object.assign({},obj,vm.propertyDetail),vm.newProperty=angular.copy(vm.masterNewProperty),vm.editKey[fData.key.$modelValue]=!0,ngDialog.close()}else vm.newProperty.linkSubmitted=!0}function getFileHistory(){ajaxService.getAjaxResponse({url:vm.serviceApis.fileHistory,data:$.param({fileName:vm.activeFile})}).then(function(response){"true"===response.Success?vm.historyData=response.historyListing:null!==response.error&&sharedProperties.ajaxError(response.error)})}var vm=this;vm.serviceApis={getProperties:"/node/bitBucket/getAllProperties",readFromSource:"/node/bitBucket/readFromSource",writeInSource:"/node/bitBucket/setInSource",delete:"/node/bitBucket/delete",uploadNewFile:"/node/bitBucket/upload",mergeToBranch:"/node/bitBucket/mergeToBranch",publishFile:"/node/s3/uploadToS3",fileHistory:"/node/file/history/get"},vm.mortalUrl={},vm.listProperties=[],vm.propertyDetail=null,vm.masterpropertyDetail=null,vm.currentType=null,vm.editKey={},vm.editComment={},vm.activeFile=null,vm.newFile=null,vm.dropAvailable=null,vm.dropSelected=null,vm.currentBranch=null,vm.publishFileName=null,vm.newProperty={key:"",value:"",linkSubmitted:!1},vm.masterNewProperty=angular.copy(vm.newProperty),vm.status=null,vm.fileView="edit",vm.historyData=[],vm.status={InReview:"In Review",AwaitingTranslation:"Awaiting Translation",Approved:"Approved"},vm.pageSetting={pageSize:20,textSearching:"",lastPredicate:"name",lastReverse:!1},vm.originalPageSetting=angular.copy(vm.pageSetting),vm.getAll=getAll,vm.changePoint=changePoint,vm.active=active,vm.viewDetail=viewDetail,vm.saveProperty=saveProperty,vm.deleteKey=deleteKey,vm.uploadModal=uploadModal,vm.uploadFile=uploadFile,vm.mergeToBranch=mergeToBranch,vm.publishModal=publishModal,vm.publishFile=publishFile,vm.changeDisplayMode=changeDisplayMode,vm.addProperty=addProperty,vm.placeProperty=placeProperty,vm.getFileHistory=getFileHistory,vm.approveModal=approveModal,vm.approveFile=approveFile,vm.updateStatus=updateStatus,vm.updateStatusChange=updateStatusChange,vm.infinteScroll=infinteScroll,$("body").on("change","input:file",function(e){var tempFile=this.files[0];$scope.$apply(function(){vm.newFile=tempFile})})}fileReaderListing.$inject=["sharedProperties","ajaxService","$localStorage","basicService","ngDialog","$scope","$rootScope","$state","$filter"],angular.module("spApp").controller("fileReaderListing",fileReaderListing);