function accountDashboardController($scope,ngDialog,$timeout,sharedProperties,ajaxService,$rootScope,$localStorage,$filter){$scope.stateCheck={},$scope.settings={},$scope.companyDetails={},$scope.disableCompanyEditing=!0,$scope.disableProfileEditing=!0,$scope.disableLinkedinEditing=!0,$scope.disableIndividualEditing=!0,$scope.disableUserProfileEditing=!0,$scope.formStatus={},$scope.accountInfo={},$scope.profile={},$scope.userGroupList=[],$scope.userTagList=[],$scope.groupDataSet={},$scope.dataWithFlags=[],$scope.allGroupListCounter=0,$scope.linkeDInFormStatus=!1,$scope.profilePic="",$scope.userInitials="",$scope.assessmentDetails={},$scope.feedbackDetails={},$scope.goalsDetails={},$scope.growthTeamDetails={},$scope.userPermissions={},$scope.profileSetings={},$scope.userPermissions.isAccountAdministrator=!1,$scope.userPermissions.isAdministrator=!1,$scope.userPermissions.isHiringToolAllowed=!1,$scope.userPermissions.isWorkspacePulseAllowed=!1,$scope.userPermissions.isSpectrumAllowed=!1,$scope.userPermissions.isCompetencyAllowed=!1,$scope.profileSetings.is360ProfileAllowed=!1,$scope.profileSetings.isHiringAccessAllowed=!1,$scope.showPulsePermission=!1,$scope.showSpectrumPermission=!1,$scope.showCompetencyPermission=!1,$scope.showRelationshipAdvisor=!1,$scope.showThemeManager=!1,$scope.showEmailManager=!1,$scope.profileToken={},$scope.userGroupListBusiness=[],$scope.dataWithFlagsBusiness=[],$scope.groupDataSetBusiness={},$scope.allGroupListCounterBusiness=0,$scope.updatedEmail="",$scope.dialogStatus={},$scope.accountPermissionOptions={show:!0},$scope.openView=!0,$scope.enableBtns=!1,$scope.serverError=!1,$scope.serverError1=!1,$scope.currentUser={},$scope.currentUser.groupList="default",$scope.glStatusUpdate=!1,$scope.serverError1=!1,$scope.imageEditBox=!1,$scope.addAccounts={},$scope.addAccountsForm={},$scope.addAccountsForm.submitted=!1,$scope.adminsList=[],$scope.hiringAdminsList=[],$scope.pwdFlag=!1,function(){$scope.countries=$localStorage.get("countriesFullList").countries}(),$scope.priceFormatter=function(p){if(void 0!==p&&""!==p&&null!==p){return"$"+p.toFixed(2)}},null!==$localStorage.get("spProfileTab")&&($scope.setTab=!0,$rootScope.callSwitchChange("spProfile")),$scope.apiConfig={urls:{company:{saveUpdate:"/sp/admin/account/updateCompany"},adminView:{saveUpdate:"/sp/admin/user/update/profile"},individual:{saveUpdate:"/sp/updateProfile"},userView:{saveUpdate:"/sp/updateProfile"},businessAccountDetails:"/sp/admin/account/businessAccountDetails",getCompanyDetails:"/sp/admin/account/getCompanyDetails",blockAllMembers:"/sp/admin/account/blockAllMembers",updateCompany:"/sp/admin/account/updateCompany",cancelAccount:"/sp/admin/account/cancel",updateLinkedIn:"/sp/admin/updateLinkedIn",restrictRelationshipAdvisor:"/sp/admin/account/restrictRelationshipAdvisor"}},$scope.setOptions=function(page){$scope.settings.currentPage=page,$localStorage.set("account_type",page)},$scope.enableEdit=function(f){"company"===f&&($scope.disableCompanyEditing=!1),"profile"===f&&($scope.disableProfileEditing=!1),"linkedin"===f&&($scope.disableLinkedinEditing=!1),"individual"===f&&($scope.disableIndividualEditing=!1),"userProfile"===f&&($scope.disableUserProfileEditing=!1)},$scope.disableEdit=function(f){"company"===f&&($scope.disableCompanyEditing=!0,$scope.getCompanyDetails()),"profile"===f&&($scope.disableProfileEditing=!0,$scope.getUserDetails()),"linkedin"===f&&($scope.disableLinkedinEditing=!0),"individual"===f&&($scope.disableIndividualEditing=!0,$scope.getIndividualUserDetails()),"userProfile"===f&&($scope.disableUserProfileEditing=!0,$scope.getUserDetailsBusiness()),$scope.formStatus.sumbit=!1,$scope.linkeDInFormStatus=!1},$scope.saveAndUpdate=function(formData,formName){var empCountErr;empCountErr=!(void 0!==formData.numberOfEmployees&&formData.numberOfEmployees<1);var URL=$scope.apiConfig.urls[$scope.settings.currentPage].saveUpdate,vCount=0;$scope.formStatus.sumbit=!1;for(var k in formData)if("object"==typeof formData[k])for(var l in formData[k])"default"!==formData[k][l]&&"default1"!==formData[k][l]&&0!==formData[k][l]&&0!==formData[k][l]||vCount++;else"default"!==formData[k]&&"default1"!==formData[k]&&0!==formData[k]&&0!==formData[k]||vCount++;this[formName].$valid&&0===vCount&&empCountErr?($scope.disableCompanyEditing=!0,$scope.disableProfileEditing=!0,$scope.disableIndividualEditing=!0,$scope.disableUserProfileEditing=!0,ajaxService.getAjaxResponse({url:URL,data:$.param(formData).replace(/address%5B/g,"").replace(/%5D/g,"").replace(/%2C/g,",")}).then(function(response){"true"===response.Success&&("company"===$scope.settings.currentPage&&$scope.getCompanyDetails(),"adminView"===$scope.settings.currentPage&&$scope.getUserDetails(),"individual"===$scope.settings.currentPage&&($localStorage.remove("loggegdInProfile"),window.location.reload()),"userView"===$scope.settings.currentPage&&($localStorage.remove("loggegdInProfile"),window.location.reload()))})):$scope.formStatus.sumbit=!0},$scope.getCompanyDetails=function(){ajaxService.getAjaxResponse({url:$scope.apiConfig.urls.getCompanyDetails}).then(function(response){"true"===response.Success&&($scope.companyDetail=response.company,$scope.companyDetail.address1=response.company.address.addressLine1,$scope.companyDetail.address2=response.company.address.addressLine2,$scope.companyDetail.zip=response.company.address.zipCode,$scope.stateCheck.forSelectedCountry=response.company.address.country,null!==response.company&&-1!==response.company.featureList.indexOf("RelationShipAdvisor")&&($scope.showRelationshipAdvisor=!0),null!==response.company&&-1!==response.company.featureList.indexOf("CompanyTheme")&&($scope.showThemeManager=!0),null!==response.company&&-1!==response.company.featureList.indexOf("EmailManagement")&&($scope.showEmailManager=!0))})},$scope.getAccountInfo=function(){var storedUser=$localStorage.get("loggegdInProfile");$scope.selfEmail=storedUser.member.email,ajaxService.getAjaxResponse({url:$scope.apiConfig.urls.businessAccountDetails}).then(function(response){"true"===response.Success?($scope.accountDetailsServerException=!1,$scope.accountDetailsServerException.message="",$scope.accountInfo=response,$scope.adminsList=response.planAdminUsers.Primary,$scope.hiringAdminsList=response.planAdminUsers.IntelligentHiring):($scope.accountDetailsServerException=!0,void 0!==response.error.InvalidRequestException?$scope.accountDetailsExceptionMessage=response.error.InvalidRequestException:$scope.accountDetailsExceptionMessage="Error occured on server.")})},$scope.restrictAdvisor=function(status,e){var restrictStatus,dataParam={};restrictStatus=!1===status,dataParam.restrictAdvisor=restrictStatus,ajaxService.getAjaxResponse({url:$scope.apiConfig.urls.restrictRelationshipAdvisor,data:$.param(dataParam)}).then(function(response){"true"===response.Success?sharedProperties.growlMessage("Status Updated Successfully"):null!==response.error&&sharedProperties.ajaxError(response.error)})},$scope.blockAllMembers=function(status,e){var blockStatus,dataParam={};blockStatus=!1===status,dataParam.isBlockAllUsers=blockStatus,ajaxService.getAjaxResponse({url:$scope.apiConfig.urls.blockAllMembers,data:$.param(dataParam)}).then(function(response){"true"===response.Success?sharedProperties.growlMessage("Status Updated Successfully"):null!==response.error&&sharedProperties.ajaxError(response.error)})},$scope.showCancelDialog=function(i){$scope.individualCancel=void 0!==i&&""!==i&&null!==i&&"individual"===i,$scope.dialogStatus.title="Cancel Subscription",$scope.dialogStatus.content="Subscription cancelled successfully.",ngDialog.open({template:"/sp/resources/html/admin/account/cancel-subscription-dialog.html",scope:$scope})},$scope.showDetailsDialog=function(t){"members"===t?($scope.showDetails={title:"Member account details",total:'Total member accounts purchased : <span class="b-700">'+parseInt($scope.accountInfo.account.spPlans.Primary.numActive+$scope.accountInfo.account.spPlans.Primary.availalbeMemberSubscriptions+$scope.accountInfo.account.spPlans.Primary.numDeleted)+"</span>",active:$scope.accountInfo.account.spPlans.Primary.numActive,deleted:$scope.accountInfo.account.spPlans.Primary.numDeleted,available:$scope.accountInfo.account.spPlans.Primary.availalbeMemberSubscriptions},ngDialog.open({template:"/sp/resources/html/admin/account/show-details-dialog.html",scope:$scope})):($scope.showDetails={title:"Candidate account details",total:'Total candidate accounts purchased : <span class="b-700">'+parseInt($scope.accountInfo.account.hiringProduct.availableHiringSubscripitons+$scope.accountInfo.account.hiringProduct.usedHiringSubscriptions)+"</span>",active:$scope.accountInfo.account.hiringProduct.usedHiringSubscriptions,deleted:$scope.accountInfo.account.hiringProduct.availableHiringSubscripitons+$scope.accountInfo.account.hiringProduct.usedHiringSubscriptions-$scope.accountInfo.account.hiringProduct.availableHiringSubscripitons-$scope.accountInfo.account.hiringProduct.usedHiringSubscriptions,available:$scope.accountInfo.account.hiringProduct.availableHiringSubscripitons},ngDialog.open({template:"/sp/resources/html/admin/account/show-details-dialog.html",scope:$scope}))},$scope.cancelSubscription=function(){ajaxService.getAjaxResponse({url:$scope.apiConfig.urls.cancelAccount}).then(function(response){"true"===response.Success?(ngDialog.close("ngdialog1"),sharedProperties.growlMessage("Subscription cancelled successfully"),$timeout(function(){!0===$scope.individualCancel?$scope.getIndividualAccountInfo():$scope.getAccountInfo()},300)):(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response.error),$timeout(function(){!0===$scope.individualCancel?$scope.getIndividualAccountInfo():$scope.getAccountInfo()},300))})},$scope.showReactivateDialog=function(i){$scope.individualReactivate=void 0!==i&&""!==i&&null!==i&&"individual"===i,ajaxService.getAjaxResponse({url:"/sp/admin/account/reActivate"}).then(function(response){"true"===response.Success?(!0===$scope.individualReactivate?$scope.getIndividualAccountInfo():$scope.getAccountInfo(),sharedProperties.growlMessage("Subscription renewal activated successfully")):null!==response.error&&sharedProperties.ajaxError(response.error)})},$scope.cancelRedirect=function(){"company"===$scope.settings.currentPage&&(window.location="/sp/admin/account/business"),"individual"===$scope.settings.currentPage&&(window.location="/sp/admin/account/individual")},$scope.initBusinessDashboard=function(){$scope.getCompanyDetails(),$scope.getAccountInfo(),null!==$localStorage.get("addAccounts")&&void 0!==$localStorage.get("addAccounts")&&$timeout(function(){ngDialog.open({template:"/sp/resources/html/admin/account/request-success.html",scope:$scope}),$localStorage.remove("addAccounts")},300)},$scope.goBack=function(param){window.location.href=param},$scope.getUserDetails=function(){$scope.signedInUser=$localStorage.get("loggegdInProfile");var _params={userEmail:null!==$localStorage.get("memEmail")?$localStorage.get("memEmail"):$scope.signedInUser.member.email};$scope.updatedEmail=null!==$localStorage.get("memEmail")?$localStorage.get("memEmail"):$scope.signedInUser.member.email,$scope.userGroupList=[],ajaxService.getAjaxResponse({url:"/sp/admin/user",data:$.param(_params).replace(/%40/g,"@")}).then(function(response){if("true"===response.Success){$scope.profile=response.profileForm,$scope.userGroupList=response.groupList,$scope.profilePic=response.userSummary.smallProfileImage,$scope.userInitials=response.userSummary.userInitials,$scope.profile.name=response.userSummary.name;var _features=response.features;$scope.companyFeatures={isPrismLens:-1!==_features.indexOf("PrismLens"),isOrganizationPlan:-1!==_features.indexOf("OrganizationPlan"),isPrism:-1!==_features.indexOf("Prism"),isBluePrint:-1!==_features.indexOf("Blueprint"),isCompetency:-1!==_features.indexOf("Competency")},null!==response.tagList&&($scope.userTagList=response.tagList,$scope.existingTags=$scope.userTagList.join()),-1!==response.features.indexOf("Spectrum")&&($scope.showSpectrumPermission=!0),-1!==response.features.indexOf("Pulse")&&($scope.showPulsePermission=!0),-1!==response.features.indexOf("Competency")&&($scope.showCompetencyPermission=!0),null!==response.address?($scope.profile.country="USA"===response.address.country?"US":response.address.country,$scope.stateCheck.forSelectedCountry=response.address.country,$scope.profile.address1=response.address.addressLine1,$scope.profile.address2=response.address.addressLine2,$scope.profile.city=response.address.city,$scope.profile.state=response.address.state,$scope.profile.zip=response.address.zipCode,$timeout(function(){$scope.profile.state=response.address.state},200)):($scope.profile.country="default",$scope.stateCheck.forSelectedCountry="default",$scope.profile.address1=null,$scope.profile.address2=null,$scope.profile.city=null,$scope.profile.state=null,$scope.profile.zip=null),null===$scope.profile.gender&&($scope.profile.gender="default"),0===$scope.profile.year&&($scope.profile.year="default"),0===$scope.profile.month&&($scope.profile.month="default"),0===$scope.profile.day&&($scope.profile.day="default"),null===$scope.profile.linkedInUrl||void 0===$scope.profile.linkedInUrl?$scope.disableLinkedinEditing=!1:$scope.disableLinkedinEditing=!0,$scope.goalsDetails.percentage=0,$scope.growthTeamDetails.percentage=0,$scope.permissions=response.roles.sort(),$scope.userPermissions.isAccountAdministrator=!1,$scope.userPermissions.isAdministrator=!1,$scope.userPermissions.isHiringToolAllowed=!1,$scope.userPermissions.isWorkspacePulseAllowed=!1,$scope.userPermissions.isSpectrumAllowed=!1,$scope.userPermissions.isCompetencyAllowed=!1,jQuery.each($scope.permissions,function(i,j){"AccountAdministrator"===$scope.permissions[i]&&($scope.userPermissions.isAccountAdministrator=!0),"Administrator"===$scope.permissions[i]&&($scope.userPermissions.isAdministrator=!0),"Hiring"===$scope.permissions[i]&&($scope.userPermissions.isHiringToolAllowed=!0),"Pulse"===$scope.permissions[i]&&($scope.userPermissions.isWorkspacePulseAllowed=!0),"Spectrum"===$scope.permissions[i]&&($scope.userPermissions.isSpectrumAllowed=!0),"CompetencyAdmin"===$scope.permissions[i]&&($scope.userPermissions.isCompetencyAllowed=!0)}),$timeout(function(){$scope.setupAccountAccess($scope.signedInUser.member.email,$scope.signedInUser.member.roles,$scope.profile.email,response.roles)},300),$scope.assessmentStatus=response.userSummary.userStatus}})},$scope.setupAccountAccess=function(lEmail,lRoles,mEmail,mRoles){var currentUserRole,currentMemberRole,loggedEmail=lEmail,memberEmail=mEmail,loggedRoles=lRoles.sort(),memberRoles=mRoles.sort();$.each(loggedRoles,function(i){return"AccountAdministrator"===loggedRoles[i]?(currentUserRole="AccountAdministrator",!1):"Administrator"===loggedRoles[i]?(currentUserRole="Administrator",!1):void 0}),$.each(memberRoles,function(i){return"AccountAdministrator"===memberRoles[i]?(currentMemberRole="AccountAdministrator",!1):"Administrator"===memberRoles[i]?(currentMemberRole="Administrator",!1):"GroupLead"===memberRoles[i]?(currentMemberRole="GroupLead",!1):"User"===memberRoles[i]?(currentMemberRole="User",!1):(currentMemberRole="None",!1)}),"AccountAdministrator"===currentUserRole||"Hiring"===currentUserRole?loggedEmail!==memberEmail?($scope.accountPermissionOptions.adminAccess=!0,$scope.accountPermissionOptions.show=!0):$scope.accountPermissionOptions.show=!1:"Administrator"===currentUserRole?($scope.accountPermissionOptions.adminAccess=!1,$scope.accountPermissionOptions.show=loggedEmail!==memberEmail&&"AccountAdministrator"!==currentMemberRole&&"Administrator"!==currentMemberRole):($scope.accountPermissionOptions.adminAccess=!1,$scope.accountPermissionOptions.show=!1)},$scope.getGroupList=function(){$scope.groupsDataReady=!1,ajaxService.getAjaxResponse({url:"/sp/admin/group/all",delay:100,maximum:1500}).then(function(response){if("true"===response.Success){$scope.dataWithFlags=[];var counter=0;$scope.groupDataSet=response.groupInfoList,jQuery.each($scope.groupDataSet,function(i,j){$scope.dataWithFlags.push(jQuery.extend({},$scope.groupDataSet[i],{selectedGroup:!1,selectedGroupLead:!1,alreadyGroupLead:!1}))}),$scope.allGroupListCounter=$scope.dataWithFlags.length,jQuery.each($scope.dataWithFlags,function(i,j){jQuery.each($scope.userGroupList,function(k,l){$scope.dataWithFlags[i].name===$scope.userGroupList[k].name&&($scope.dataWithFlags[i].selectedGroup=!0,$scope.allGroupListCounter-=1,!0===$scope.userGroupList[k].groupLead&&($scope.dataWithFlags[i].alreadyGroupLead=!0,$scope.dataWithFlags[i].selectedGroupLead=!0))}),counter++}),$scope.currentUser.groupList="default",counter===$scope.dataWithFlags.length&&(jQuery("html").hasClass("ie")?$timeout(function(){$scope.groupsDataReady=!0},500):$scope.groupsDataReady=!0)}})},$scope.changeGroup=function(selectedOption){if("default"!==selectedOption)if("createGroupCall_custom"===selectedOption)$scope.errornewEmptyGroup=!1,$scope.errornewGroup=!1,ngDialog.open({template:"/sp/admin/group/createGroup",scope:$scope}),$scope.currentUser.groupList="default";else{var _params={name:$scope.dataWithFlags[selectedOption].name,memberEmail:$scope.profile.email,isGroupLead:$scope.dataWithFlags[selectedOption].alreadyGroupLead};ajaxService.getAjaxResponse({url:"/sp/admin/group/addMember",data:$.param(_params).replace(/%40/g,"@"),delay:100,maximum:1500}).then(function(response){if("true"===response.Success)$scope.serverError=!1,$scope.serverError1=!1,$scope.dataWithFlags[selectedOption].selectedGroup=!0,$scope.allGroupListCounter-=1,$scope.currentUser.groupList="default";else{$scope.currentUser.groupList="default",$scope.serverError=!0;for(var key in response.error)$scope.errorMessage=response.error[key]}})}},$scope.processRemoveGroup=function(selectedOption){var _params={name:$scope.dataWithFlags[selectedOption].name,memberEmail:$scope.profile.email,isGroupLead:!1};ajaxService.getAjaxResponse({url:"/sp/admin/group/removeMember",data:$.param(_params).replace(/%40/g,"@"),delay:10,maximum:1500}).then(function(response){if("true"===response.Success)$scope.serverError1=!1,$timeout(function(){$scope.dataWithFlags[selectedOption].selectedGroup=!1,$scope.flagCounter+=1},300);else{$scope.serverError1=!0;for(var key in response.error)$scope.errorMessage=response.error[key]}})},$scope.removeGroup=function(selectedOption){"default"!==selectedOption&&(!0===$scope.dataWithFlags[selectedOption].alreadyGroupLead?($scope.updateGroupLeadStatus(selectedOption,!1),!0===$scope.glStatusUpdate&&(jQuery("html").hasClass("ie")?$timeout(function(){$scope.processRemoveGroup(selectedOption)},500):$scope.processRemoveGroup(selectedOption))):$scope.processRemoveGroup(selectedOption))},$scope.updateGroupLeadStatus=function(i,status){var _params={name:$scope.dataWithFlags[i].name,memberEmail:$scope.profile.email,isGroupLead:!1!==status};ajaxService.getAjaxResponse({url:"/sp/admin/group/addMember",data:$.param(_params).replace(/%40/g,"@"),delay:100,maximum:1500}).then(function(response){if("true"===response.Success)$scope.serverError=!1,$scope.serverError1=!1,$scope.dataWithFlags[i].alreadyGroupLead=!$scope.dataWithFlags[i].alreadyGroupLead,!1===$scope.dataWithFlags[i].alreadyGroupLead&&null!==$scope.dataWithFlags[i].groupLEad&&($scope.dataWithFlags[i].groupLead=null),$scope.glStatusUpdate=!0;else{$scope.serverError=!0,$scope.glStatusUpdate=!1;for(var key in response.error)$scope.errorMessage=response.error[key]}})},$scope.saveNewGroup=function(groupname,groupLeadEmailId){if($scope.errornewEmptyGroup=!1,$scope.errornewGroup=!1,""===groupname||void 0===groupname)return $scope.errornewEmptyGroup=!0,!1;var obj={name:groupname},options={url:"/sp/admin/group/create",data:$.param(obj)};ajaxService.getAjaxResponse(options).then(function(response){if("true"===response.Success){ngDialog.close("ngdialog1");var _params={name:groupname,memberEmail:$scope.profile.email,isGroupLead:!1};ajaxService.getAjaxResponse({url:"/sp/admin/group/addMember",data:$.param(_params).replace(/%40/g,"@"),delay:100,maximum:1500}).then(function(response){if("true"===response.Success)$scope.serverError=!1,$scope.serverError1=!1,$scope.dataWithFlags.push({name:groupname,groupLead:null,numOfMembers:1,memberSummaryList:null,selectedGroup:!0,selectedGroupLead:!1,alreadyGroupLead:!1}),$scope.currentUser.groupList="default";else{$scope.currentUser.groupList="default",$scope.errornewGroup=!0,$scope.serverError=!0;for(var key in response.error)$scope.errorMessage=response.error[key]}})}else null!=response.error&&($scope.errornewGroup=!0)})},$scope.closeGroup=function(){$scope.currentUser.groupList="default",ngDialog.close("ngdialog1")},$scope.updateLinkedURL=function(l,type){var updatedUrl="";if(updatedUrl="individual"===type||"bindividual"===type?"/sp/updateLinkedIn":$scope.apiConfig.urls.updateLinkedIn,this.linkedinUpdate.$valid){$scope.disableLinkedinEditing=!0;var _params=$.extend({},{userEmail:$scope.updatedEmail},l);ajaxService.getAjaxResponse({url:updatedUrl,data:$.param(_params)}).then(function(response){"true"===response.Success&&("individual"===type?$scope.getIndividualUserDetails():"bindividual"===type?$scope.getUserDetailsBusiness():$scope.getUserDetails())})}else $scope.linkeDInFormStatus=!0},$scope.updatePermissions=function(val,type){var _params={userEmail:$scope.profile.email};"admin"===type&&(!0===val?$.extend(_params,{isAdministrator:!1,isAccountAdministrator:!1,isHiringToolAllowed:$scope.userPermissions.isHiringToolAllowed,isWorkspacePulseAllowed:$scope.userPermissions.isWorkspacePulseAllowed,isSpectrumAllowed:$scope.userPermissions.isSpectrumAllowed,isCompetencyAllowed:$scope.userPermissions.isCompetencyAllowed}):$.extend(_params,{isAdministrator:!0,isAccountAdministrator:$scope.userPermissions.isAccountAdministrator,isHiringToolAllowed:$scope.userPermissions.isHiringToolAllowed,isWorkspacePulseAllowed:$scope.userPermissions.isWorkspacePulseAllowed,isSpectrumAllowed:$scope.userPermissions.isSpectrumAllowed,isCompetencyAllowed:$scope.userPermissions.isCompetencyAllowed})),"account"===type&&(!0===val?$.extend(_params,{isAdministrator:$scope.userPermissions.isAdministrator,isAccountAdministrator:!1,isHiringToolAllowed:$scope.userPermissions.isHiringToolAllowed,isWorkspacePulseAllowed:$scope.userPermissions.isWorkspacePulseAllowed,isSpectrumAllowed:$scope.userPermissions.isSpectrumAllowed,isCompetencyAllowed:$scope.userPermissions.isCompetencyAllowed}):$.extend(_params,{isAdministrator:$scope.userPermissions.isAdministrator,isAccountAdministrator:!0,isHiringToolAllowed:!0,isWorkspacePulseAllowed:!0,isSpectrumAllowed:!0,isCompetencyAllowed:!0})),"hiring"===type&&$.extend(_params,{isAdministrator:$scope.userPermissions.isAdministrator,isAccountAdministrator:$scope.userPermissions.isAccountAdministrator,isHiringToolAllowed:$scope.userPermissions.isHiringToolAllowed,isWorkspacePulseAllowed:$scope.userPermissions.isWorkspacePulseAllowed,isSpectrumAllowed:$scope.userPermissions.isSpectrumAllowed,isCompetencyAllowed:$scope.userPermissions.isCompetencyAllowed}),"pulse"===type&&$.extend(_params,{isAdministrator:$scope.userPermissions.isAdministrator,isAccountAdministrator:$scope.userPermissions.isAccountAdministrator,isHiringToolAllowed:$scope.userPermissions.isHiringToolAllowed,isWorkspacePulseAllowed:$scope.userPermissions.isWorkspacePulseAllowed,isSpectrumAllowed:$scope.userPermissions.isSpectrumAllowed,isCompetencyAllowed:$scope.userPermissions.isCompetencyAllowed}),"spectrum"===type&&$.extend(_params,{isAdministrator:$scope.userPermissions.isAdministrator,isAccountAdministrator:$scope.userPermissions.isAccountAdministrator,isHiringToolAllowed:$scope.userPermissions.isHiringToolAllowed,isWorkspacePulseAllowed:$scope.userPermissions.isWorkspacePulseAllowed,isSpectrumAllowed:$scope.userPermissions.isSpectrumAllowed,isCompetencyAllowed:$scope.userPermissions.isCompetencyAllowed}),"competency"===type&&$.extend(_params,{isAdministrator:$scope.userPermissions.isAdministrator,isAccountAdministrator:$scope.userPermissions.isAccountAdministrator,isHiringToolAllowed:$scope.userPermissions.isHiringToolAllowed,isWorkspacePulseAllowed:$scope.userPermissions.isWorkspacePulseAllowed,isSpectrumAllowed:$scope.userPermissions.isSpectrumAllowed,isCompetencyAllowed:$scope.userPermissions.isCompetencyAllowed}),ajaxService.getAjaxResponse({url:"/sp/admin/user/updatePermissions",data:$.param(_params)}).then(function(response){"true"===response.Success&&(sharedProperties.growlMessage("Status Updated Successfully"),$scope.getUserDetails())})},$scope.initAdminViewDashboard=function(){$scope.getUserDetails(),$timeout(function(){$scope.getGroupList()},200)},$scope.initGroupLeadViewDashboard=function(){$scope.getUserDetails()},window.location.origin?$scope.siteName=window.location.origin+"/sp/":$scope.siteName=window.location.protocol+"//"+window.location.hostname+"/sp/",$scope.getIndividualUserDetails=function(){ajaxService.getAjaxResponse({url:"/sp/admin/user"}).then(function(response){"true"===response.Success&&($scope.profile=response.profileForm,$scope.certificate=response.userCertificate,$scope.certificateNo=parseInt(response.userCertificate.split("SP")[1]),$scope.certificateIssue=response.createdOn,$scope.profilePic=response.userSummary.smallProfileImage,$scope.userInitials=response.userSummary.userInitials,$scope.assessmentStatus=response.userSummary.userStatus,null!==response.address?($scope.profile.country="USA"===response.address.country?"US":response.address.country,$scope.stateCheck.forSelectedCountry=response.address.country,$scope.profile.address1=response.address.addressLine1,$scope.profile.address2=response.address.addressLine2,$scope.profile.city=response.address.city,$scope.profile.state=response.address.state,$scope.profile.zip=response.address.zipCode):($scope.profile.country="default",$scope.stateCheck.forSelectedCountry="default",$scope.profile.address1=null,$scope.profile.address2=null,$scope.profile.city=null,$scope.profile.state=null,$scope.profile.zip=null),null===$scope.profile.gender&&($scope.profile.gender="default"),0===$scope.profile.year&&($scope.profile.year="default"),0===$scope.profile.month&&($scope.profile.month="default"),0===$scope.profile.day&&($scope.profile.day="default"),null===$scope.profile.linkedInUrl||void 0===$scope.profile.linkedInUrl?$scope.disableLinkedinEditing=!1:$scope.disableLinkedinEditing=!0)})},$scope.getIndividualAccountInfo=function(){ajaxService.getAjaxResponse({url:"/sp/admin/account/individualAccountDetails"}).then(function(response){"true"===response.Success&&($scope.accountInfo=response,$scope.profileSetings.is360ProfileAllowed=response.profileSettings.is360ProfileAccessAllowed,$scope.profileSetings.isHiringAccessAllowed=response.profileSettings.hiringAccessAllowed,$scope.profileSetings.isCertificateProfilePublicViewAllowed=response.profileSettings.certificateProfilePublicView,$scope.profileToken=response.profileSettings.token)})},$scope.updateProfileSettings=function(val,type){var _params={isHiringAccessAllowed:$scope.profileSetings.isHiringAccessAllowed,is360ProfileAllowed:$scope.profileSetings.is360ProfileAllowed};ajaxService.getAjaxResponse({url:"/sp/admin/account/updateIndividualProfile",data:$.param(_params)}).then(function(response){"true"===response.Success&&$scope.getIndividualUserDetails()})},$scope.spcDate=function(d){if(void 0!==d){var monthData={January:"01",February:"02",March:"03",April:"04",May:"05",June:"06",July:"07",August:"08",September:"09",October:"10",November:"11",December:"12"},m=monthData[d.split(",")[0].split(" ")[0]];return d.split(",")[1].split(" ")[1]+m}},$scope.updateCertificateAccess=function(){ajaxService.getAjaxResponse({url:"/sp/admin/account/updateIndividualProfile/spCertificate",method:"post",data:$.param({isCertificateProfilePublicViewAllowed:$scope.profileSetings.isCertificateProfilePublicViewAllowed})})},$scope.generateProfileToken=function(){ajaxService.getAjaxResponse({url:"/sp/admin/account/individualGenerateToken"}).then(function(response){"true"===response.Success&&($scope.getIndividualAccountInfo(),sharedProperties.growlMessage("New link is generated successfully"))})},$scope.initIndividualDashboard=function(){$scope.getIndividualUserDetails(),$scope.getIndividualAccountInfo()},$scope.getUserDetailsBusiness=function(){$scope.userGroupListBusiness=[];var storedUser=$localStorage.get("loggegdInProfile"),storedEmail=storedUser.member.email;ajaxService.getAjaxResponse({url:"/sp/admin/user",data:$.param({userEmail:storedEmail})}).then(function(response){"true"===response.Success&&($scope.profile=response.profileForm,$scope.userGroupListBusiness=response.groupList,$scope.profilePic=response.userSummary.smallProfileImage,$scope.userInitials=response.userSummary.userInitials,$scope.profile.name=response.userSummary.name,null!==response.address?($scope.profile.country="USA"===response.address.country?"US":response.address.country,$scope.stateCheck.forSelectedCountry=response.address.country,$scope.profile.address1=response.address.addressLine1,$scope.profile.address2=response.address.addressLine2,$scope.profile.city=response.address.city,$scope.profile.state=response.address.state,$scope.profile.zip=response.address.zipCode,$timeout(function(){$scope.profile.state=response.address.state},200)):($scope.profile.country="default",$scope.stateCheck.forSelectedCountry="default",$scope.profile.address1=null,$scope.profile.address2=null,$scope.profile.city=null,$scope.profile.state=null,$scope.profile.zip=null),null===$scope.profile.gender&&($scope.profile.gender="default"),0===$scope.profile.year&&($scope.profile.year="default"),0===$scope.profile.month&&($scope.profile.month="default"),0===$scope.profile.day&&($scope.profile.day="default"),null===$scope.profile.linkedInUrl||void 0===$scope.profile.linkedInUrl?$scope.disableLinkedinEditing=!1:$scope.disableLinkedinEditing=!0)})},$scope.initUserViewDashboard=function(){$scope.getUserDetailsBusiness()},void 0!==$scope.settings.currentPage?"company"===$scope.settings.currentPage?$scope.initBusinessDashboard():"adminView"===$scope.settings.currentPage?$scope.initAdminViewDashboard():"individual"===$scope.settings.currentPage?$scope.initIndividualDashboard():"userView"===$scope.settings.currentPage?$scope.initUserViewDashboard():"groupLeadView"===$scope.settings.currentPage&&$scope.initGroupLeadViewDashboard():$timeout(function(){"company"===$scope.settings.currentPage?$scope.initBusinessDashboard():"adminView"===$scope.settings.currentPage?$scope.initAdminViewDashboard():"individual"===$scope.settings.currentPage?$scope.initIndividualDashboard():"userView"===$scope.settings.currentPage?$scope.initUserViewDashboard():"groupLeadView"===$scope.settings.currentPage&&$scope.initGroupLeadViewDashboard()},250),$scope.addressFormReset=function(t){"business"===t&&($scope.companyDetail.address1=null,$scope.companyDetail.address2=null,$scope.companyDetail.zip=null,$scope.companyDetail.address.city=null,"US"!==$scope.stateCheck.forSelectedCountry?$scope.companyDetail.address.state=null:$scope.companyDetail.address.state="default"),"individual"!==t&&"buser"!==t&&"member"!==t||($scope.profile.address1=null,$scope.profile.address2=null,$scope.profile.city=null,$scope.profile.zip=null,"US"===$scope.stateCheck.forSelectedCountry?$scope.profile.state="default":$scope.profile.state=null)},$scope.uploadPicture=function(){$scope.imageEditBox=!1,$scope.imageType="user",ngDialog.open({template:"/sp/resources/html/admin/account/upload-pic.html",scope:$scope})},$scope.uploadCompanyLogo=function(){$scope.imageEditBox=!1,$scope.imageType="company",ngDialog.open({template:"/sp/resources/html/admin/account/upload-company-pic.html",scope:$scope})},$scope.deleteImageModal=function(imageType){$scope.imageEditBox=!1,$scope.imageType=imageType,ngDialog.open({template:"/sp/resources/html/admin/account/delete-image-modal.html",scope:$scope})},$(document).on("imageSaved",function(e,data){$scope.$apply(function(){$scope.companyDetail.logoURL=data.imageData})}),$scope.deleteImage=function(){
ajaxService.getAjaxResponse({url:"company"===$scope.imageType?"/sp/admin/company/deleteImage":"/sp/admin/user/deleteImage"}).then(function(response){"true"===response.Success?(ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("growl.imageDeleted")),$timeout(function(){$localStorage.remove("loggegdInProfile"),window.location.reload()},1e3)):sharedProperties.growlMessage($rootScope.pullInterNationalization("mediaManager.growlMessage.fail"),"","glyphicon glyphicon-ban-circle")})},$scope.showImageEdit=function(type){$scope.imageEditBox=!$scope.imageEditBox,"company"!==type||$scope.companyDetail.logoURL?"user"!==type||$scope.profilePic||($scope.uploadPicture(),$scope.imageEditBox=!1):($scope.uploadCompanyLogo(),$scope.imageEditBox=!1)},$scope.closeImageEdit=function(){$scope.imageEditBox=!1},$scope.openList=function(e,bool){bool?$(e.currentTarget).closest(".profile-cont").find(".js_desk").removeClass("desktopShow"):$(e.currentTarget).closest(".profile-cont").find(".js_desk").addClass("desktopShow")},$scope.resetFlags=function(){$scope.disableEdit("profile")},$scope.resetPwdError=!1,$scope.resetPwdForm={},$scope.resetPwdForm.validationErrors=!1,$scope.resetPwd={},$scope.resetPasswordForm=function(){ngDialog.open({template:"/sp/resources/html/admin/account/resetPassword.html",scope:$scope}),$rootScope.$on("ngDialog.opened",function(e,$dialog){$timeout(function(){$scope.resetPwdError=!1,$scope.resetPwdForm.validationErrors=!1,jQuery("body").find('form[name="resetPwdForm"]')[0].reset()},100)})},$scope.checkPwd=function(){return sharedProperties.passwordCriterionCheck($("#profileNewPwd").val())},$scope.processPasswordReset=function(fData){$scope.pwdFlag=!1,$scope.pwdFlag=$scope.checkPwd(),this.resetPwdForm.validationErrors=!1,$scope.resetPwdError=!1,this.resetPwdForm.$valid&&$scope.pwdFlag?ajaxService.getAjaxResponse({url:"/sp/changePassword",data:$.param({oldPassword:fData.oldPassword,newPassword:fData.newPassword})}).then(function(response){if("true"===response.Success)$scope.resetPwdError=!1,jQuery("body").find('form[name="resetPwdForm"]')[0].reset(),ngDialog.close("ngdialog1"),sharedProperties.growlMessage($rootScope.pullInterNationalization("growl.passwordChange"));else{$scope.resetPwdForm.validationErrors=!1,$scope.resetPwdError=!0;for(var key in response.error)$scope.resetPwdErrorMsg=response.error[key]}}):($scope.resetPwdError=!1,this.resetPwdForm.validationErrors=!0)},$scope.currentPageUrl=window.location.href,$scope.requestAddon=function(addon){ngDialog.open({template:"/sp/resources/html/admin/account/addonRequest.html",scope:$scope})},$scope.addonSubmitted=function(flag){flag&&$localStorage.set("addonRequest","Request submitted successfully!")},$scope.addAccountsModal=function(addType){$localStorage.remove("addAccounts"),$scope.addAccountsForm.submitted=!1,$scope.addAccounts={};var processAddAccounts=function(data,e){$scope.addAccountsForm.submitted=!1,this.addAccountsForm.$valid?($localStorage.set("addAccounts",!0),$scope.addAccountsForm.submitted=!1):($scope.addAccountsForm.submitted=!0,e.preventDefault())};$scope.processAddAccounts=processAddAccounts,$scope.addType=addType;var storedUser=$localStorage.get("loggegdInProfile");$scope.storedEmail=storedUser.member.email,ngDialog.open({template:"/sp/resources/html/admin/account/addAccountsModal.html",scope:$scope})},$scope.addAdmin=function(email,userObj){ajaxService.getAjaxResponse({url:"/sp/admin/addAdminMember",data:$.param({planType:$scope.addAdminType,userEmail:email})}).then(function(response){"true"===response.Success?("Primary"===$scope.addAdminType?$scope.adminsList.push(userObj):$scope.hiringAdminsList.push(userObj),ngDialog.close("ngdialog1"),sharedProperties.growlMessage("Admin added successfully")):null!==response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response.error))})},$scope.removeAdmin=function(email,userObj){ajaxService.getAjaxResponse({url:"/sp/admin/removeAdminMember",data:$.param({planType:$scope.updatedPlanType,userEmail:email})}).then(function(response){if("true"===response.Success){var dupeList="Primary"===$scope.updatedPlanType?angular.copy($scope.adminsList):angular.copy($scope.hiringAdminsList);jQuery.each(dupeList,function(i,j){if(dupeList[i].email===email)return dupeList.splice(i,1),"Primary"===$scope.updatedPlanType?$scope.adminsList=angular.copy(dupeList):$scope.hiringAdminsList=angular.copy(dupeList),!1}),ngDialog.close("ngdialog1"),sharedProperties.growlMessage("Admin removed successfully")}else null!==response.error&&(ngDialog.close("ngdialog1"),sharedProperties.ajaxError(response.error))})},$scope.removeAdminAccess=function(type,userObj){$scope.updatedPlanType=type,$scope.removeAdminMember=userObj,ngDialog.open({template:"/sp/resources/html/sysAdmin/alternateBilling/removeAdminModal.html",scope:$scope})},$scope.addAdminAccess=function(type){$scope.addAdminType=type,ajaxService.getAjaxResponse({url:"/sp/admin/getMembersForAdmins/",data:$.param({planType:$scope.addAdminType})}).then(function(response){"true"===response.Success?($scope.masterMemberList=response.memberList.length?response.memberList:[],$scope.selectMemberList=angular.copy($scope.masterMemberList),$scope.responseRecieved=!0,$scope.active=function(event){var currentElem=$(event.currentTarget);currentElem.find("h4").hasClass("on")?currentElem.find("h4").hasClass("reverseon")?currentElem.find("h4").removeClass("reverseon"):currentElem.find("h4").addClass("reverseon"):(currentElem.parent().find(".tog h4").removeClass("on"),currentElem.find("h4").addClass("on"))},$scope.order=function(predicate,reverse){$scope.lastPredicate=predicate,$scope.lastReverse=reverse,$scope.selectMemberList=$filter("orderBy")($scope.selectMemberList,predicate,reverse)},ngDialog.open({template:"/sp/resources/html/sysAdmin/alternateBilling/selectAdminModal.html",scope:$scope})):null!=response.error&&($scope.responseRecieved=!0,sharedProperties.ajaxError(response.error))})},$("body").click(function(e){$(".image-edit-box").is(e.target)||0!==$(".image-edit-box").has(e.target).length||$(".upload-icon").is(e.target)||$scope.imageEditBox&&$scope.$apply(function(){$scope.imageEditBox=!1})})}angular.module("spApp").controller("accountDashboardController",accountDashboardController),accountDashboardController.$inject=["$scope","ngDialog","$timeout","sharedProperties","ajaxService","$rootScope","$localStorage"];